<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /Users/ut/Documents/LAB/image/src/image/Image.hx
 */

namespace image;

use \haxe\io\Path;
use \tink\core\FutureTrigger;
use \tink\core\Outcome;
use \asys\io\Process;
use \sys\io\FileSeek;
use \php\Boot;
use \php\_Boot\HxException;
use \tink\core\TypedError;
use \tink\core\_Future\FutureObject;
use \tink\core\_Future\SyncFuture;
use \tink\core\_Future\Future_Impl_;
use \haxe\io\Bytes;
use \tink\core\Noise;
use \asys\io\File;
use \haxe\CallStack;
use \asys\FileSystem;
use \tink\core\_Lazy\LazyConst;
use \php\_Boot\HxAnon;

class Image {
	/**
	 * @param string $path
	 * 
	 * @return FutureObject
	 */
	static public function getInfo ($path) {
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:247: lines 247-251
		$trigger = new FutureTrigger();
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:247: lines 247-251
		$width = 0;
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:247: lines 247-251
		$height = 0;
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:247: lines 247-251
		$format = null;
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:247: lines 247-251
		$unsupported = "Unsupported image format";
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:253: lines 253-356
		return Future_Impl_::_map(File::read($path), function ($res)  use (&$width, &$height, &$format, &$unsupported) {
			#/Users/ut/Documents/LAB/image/src/image/Image.hx:255: lines 255-356
			switch ($res->index) {
				case 0:
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:256: characters 17-22
					$input = $res->params[0];
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:257: characters 12-30
					$_g = $input->readUInt16();
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:257: characters 12-30
					switch ($_g) {
						case 18759:
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:276: characters 11-17
							$endian = $_g;
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:276: lines 276-343
							if (($endian === 18761) || ($endian === 19789)) {
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:277: characters 7-41
								$input->set_bigEndian($endian === 19789);
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:278: lines 278-279
								if ($input->readUInt16() !== 42) {
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:279: characters 8-46
									return Outcome::Failure(new TypedError(null, $unsupported, new HxAnon([
										"fileName" => "image/Image.hx",
										"lineNumber" => 279,
										"className" => "image.Image",
										"methodName" => "getInfo",
									])));
								}
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:280: characters 7-32
								$format = "tiff";
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:281: characters 7-38
								$offset = $input->readInt32();
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:282: characters 7-45
								$input->seek($offset, FileSeek::SeekBegin());
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:283: characters 7-38
								$count = $input->readUInt16();
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
								while (true) {
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: characters 14-21
									$count = $count - 1;
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
									if (!((($count + 1) > 0) && (($width === 0) || ($height === 0)))) {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
										break;
									}
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$tag = $input->readUInt16();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$type = $input->readUInt16();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$values = $input->readInt32();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
									$value = null;
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
									if ($type === 3) {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:289: characters 17-44
										$t = $input->readUInt16();
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:289: characters 45-63
										$input->readUInt16();
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
										$value = $t;
									} else {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
										$value = $input->readInt32();
									}
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:292: lines 292-296
									switch ($tag) {
										case 256:
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:293: characters 19-32
											$width = $value;
											break;
										case 257:
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:294: characters 19-33
											$height = $value;
											break;
										default:
																						break;
									}
								}
							} else {
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:340: characters 7-31
								$format = "gif";
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:341: characters 7-24
								$input->readInt32();
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:342: characters 7-33
								$width = $input->readUInt16();
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:343: characters 7-34
								$height = $input->readUInt16();
							}
							break;
						case 18770:
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:259: characters 7-38
							$input->seek(6, FileSeek::SeekCur());
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:260: lines 260-261
							if ($input->readString(4) !== "WEBP") {
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:261: characters 8-46
								return Outcome::Failure(new TypedError(null, $unsupported, new HxAnon([
									"fileName" => "image/Image.hx",
									"lineNumber" => 261,
									"className" => "image.Image",
									"methodName" => "getInfo",
								])));
							}
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:262: characters 7-32
							$format = "webp";
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:263: characters 14-33
							$_g1 = $input->readString(4);
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:263: characters 14-33
							switch ($_g1) {
								case "VP8 ":
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:265: characters 9-41
									$input->seek(10, FileSeek::SeekCur());
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:266: characters 9-35
									$width = $input->readUInt16();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:267: characters 9-36
									$height = $input->readUInt16();
									break;
								case "VP8L":
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:269: characters 9-40
									$input->seek(5, FileSeek::SeekCur());
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:270: characters 9-104
									$b0 = $input->readByte();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:270: characters 9-104
									$b1 = $input->readByte();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:270: characters 9-104
									$b2 = $input->readByte();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:270: characters 9-104
									$b3 = $input->readByte();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:271: characters 9-46
									$width = 1 + ((($b1 & 63) << 8) | $b0);
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:272: characters 9-75
									$height = 1 + ((($b3 & 15) << 10) | ($b2 << 2) | (($b1 & 192) >> 6));
									break;
								default:
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:274: characters 9-47
									return Outcome::Failure(new TypedError(null, $unsupported, new HxAnon([
										"fileName" => "image/Image.hx",
										"lineNumber" => 274,
										"className" => "image.Image",
										"methodName" => "getInfo",
									])));
									break;
							}

							break;
						case 19778:
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:276: characters 11-17
							$endian1 = $_g;
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:276: lines 276-302
							if (($endian1 === 18761) || ($endian1 === 19789)) {
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:277: characters 7-41
								$input->set_bigEndian($endian1 === 19789);
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:278: lines 278-279
								if ($input->readUInt16() !== 42) {
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:279: characters 8-46
									return Outcome::Failure(new TypedError(null, $unsupported, new HxAnon([
										"fileName" => "image/Image.hx",
										"lineNumber" => 279,
										"className" => "image.Image",
										"methodName" => "getInfo",
									])));
								}
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:280: characters 7-32
								$format = "tiff";
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:281: characters 7-38
								$offset1 = $input->readInt32();
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:282: characters 7-45
								$input->seek($offset1, FileSeek::SeekBegin());
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:283: characters 7-38
								$count1 = $input->readUInt16();
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
								while (true) {
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: characters 14-21
									$count1 = $count1 - 1;
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
									if (!((($count1 + 1) > 0) && (($width === 0) || ($height === 0)))) {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
										break;
									}
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$tag1 = $input->readUInt16();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$type1 = $input->readUInt16();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$values1 = $input->readInt32();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
									$value1 = null;
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
									if ($type1 === 3) {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:289: characters 17-44
										$t1 = $input->readUInt16();
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:289: characters 45-63
										$input->readUInt16();
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
										$value1 = $t1;
									} else {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
										$value1 = $input->readInt32();
									}
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:292: lines 292-296
									switch ($tag1) {
										case 256:
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:293: characters 19-32
											$width = $value1;
											break;
										case 257:
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:294: characters 19-33
											$height = $value1;
											break;
										default:
																						break;
									}
								}
							} else {
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:299: characters 7-31
								$format = "wbmp";
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:300: characters 7-39
								$input->seek(16, FileSeek::SeekCur());
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:301: characters 7-32
								$width = $input->readInt32();
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:302: characters 7-33
								$height = $input->readInt32();
							}
							break;
						case 20617:
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:276: characters 11-17
							$endian2 = $_g;
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:276: lines 276-322
							if (($endian2 === 18761) || ($endian2 === 19789)) {
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:277: characters 7-41
								$input->set_bigEndian($endian2 === 19789);
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:278: lines 278-279
								if ($input->readUInt16() !== 42) {
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:279: characters 8-46
									return Outcome::Failure(new TypedError(null, $unsupported, new HxAnon([
										"fileName" => "image/Image.hx",
										"lineNumber" => 279,
										"className" => "image.Image",
										"methodName" => "getInfo",
									])));
								}
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:280: characters 7-32
								$format = "tiff";
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:281: characters 7-38
								$offset2 = $input->readInt32();
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:282: characters 7-45
								$input->seek($offset2, FileSeek::SeekBegin());
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:283: characters 7-38
								$count2 = $input->readUInt16();
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
								while (true) {
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: characters 14-21
									$count2 = $count2 - 1;
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
									if (!((($count2 + 1) > 0) && (($width === 0) || ($height === 0)))) {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
										break;
									}
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$tag2 = $input->readUInt16();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$type2 = $input->readUInt16();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$values2 = $input->readInt32();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
									$value2 = null;
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
									if ($type2 === 3) {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:289: characters 17-44
										$t2 = $input->readUInt16();
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:289: characters 45-63
										$input->readUInt16();
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
										$value2 = $t2;
									} else {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
										$value2 = $input->readInt32();
									}
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:292: lines 292-296
									switch ($tag2) {
										case 256:
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:293: characters 19-32
											$width = $value2;
											break;
										case 257:
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:294: characters 19-33
											$height = $value2;
											break;
										default:
																						break;
									}
								}
							} else {
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:304: characters 7-31
								$format = "png";
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:305: characters 7-34
								$tmp = Bytes::alloc(256);
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:306: characters 7-29
								$input->set_bigEndian(true);
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:307: characters 7-33
								$input->readBytes($tmp, 0, 6);
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:308: characters 7-19
								$i = 200;
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:309: lines 309-322
								while (true) {
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:309: characters 14-17
									$i = $i - 1;
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:309: lines 309-322
									if (!(($i + 1) > 0)) {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:309: lines 309-322
										break;
									}
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:310: characters 8-40
									$dataLen = $input->readInt32();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:311: lines 311-315
									if ($input->readInt32() === 1229472850) {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:312: characters 9-34
										$width = $input->readInt32();
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:313: characters 9-35
										$height = $input->readInt32();
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:314: characters 9-14
										break;
									}
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:316: lines 316-320
									while ($dataLen > 0) {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:317: characters 9-61
										$k = ($dataLen > $tmp->length ? $tmp->length : $dataLen);
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:318: characters 9-35
										$input->readBytes($tmp, 0, $k);
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:319: characters 9-21
										$dataLen = $dataLen - $k;
									}
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:321: characters 8-36
									$crc = $input->readInt32();
								}
							}
							break;
						case 55551:
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:276: characters 11-17
							$endian3 = $_g;
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:276: lines 276-338
							if (($endian3 === 18761) || ($endian3 === 19789)) {
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:277: characters 7-41
								$input->set_bigEndian($endian3 === 19789);
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:278: lines 278-279
								if ($input->readUInt16() !== 42) {
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:279: characters 8-46
									return Outcome::Failure(new TypedError(null, $unsupported, new HxAnon([
										"fileName" => "image/Image.hx",
										"lineNumber" => 279,
										"className" => "image.Image",
										"methodName" => "getInfo",
									])));
								}
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:280: characters 7-32
								$format = "tiff";
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:281: characters 7-38
								$offset3 = $input->readInt32();
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:282: characters 7-45
								$input->seek($offset3, FileSeek::SeekBegin());
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:283: characters 7-38
								$count3 = $input->readUInt16();
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
								while (true) {
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: characters 14-21
									$count3 = $count3 - 1;
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
									if (!((($count3 + 1) > 0) && (($width === 0) || ($height === 0)))) {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
										break;
									}
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$tag3 = $input->readUInt16();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$type3 = $input->readUInt16();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$values3 = $input->readInt32();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
									$value3 = null;
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
									if ($type3 === 3) {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:289: characters 17-44
										$t3 = $input->readUInt16();
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:289: characters 45-63
										$input->readUInt16();
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
										$value3 = $t3;
									} else {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
										$value3 = $input->readInt32();
									}
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:292: lines 292-296
									switch ($tag3) {
										case 256:
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:293: characters 19-32
											$width = $value3;
											break;
										case 257:
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:294: characters 19-33
											$height = $value3;
											break;
										default:
																						break;
									}
								}
							} else {
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:324: characters 7-31
								$format = "jpeg";
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:325: characters 7-29
								$input->set_bigEndian(true);
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:326: characters 7-19
								$i1 = 200;
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:327: lines 327-338
								while (true) {
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:327: characters 14-17
									$i1 = $i1 - 1;
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:327: lines 327-338
									if (!(($i1 + 1) > 0)) {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:327: lines 327-338
										break;
									}
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:328: characters 15-33
									$_g2 = $input->readUInt16();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:328: characters 15-33
									switch ($_g2) {
										case 65472:
										case 65474:
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:330: characters 10-39
											$len = $input->readUInt16();
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:331: characters 10-38
											$prec = $input->readByte();
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:332: characters 10-37
											$height = $input->readUInt16();
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:333: characters 10-36
											$width = $input->readUInt16();
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:334: characters 10-15
											break 2;
											break;
										default:
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:336: characters 10-62
											$input->seek($input->readUInt16() - 2, FileSeek::SeekCur());
											break;
									}

								};
							}
							break;
						default:
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:276: characters 11-17
							$endian4 = $_g;
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:276: lines 276-345
							if (($endian4 === 18761) || ($endian4 === 19789)) {
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:277: characters 7-41
								$input->set_bigEndian($endian4 === 19789);
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:278: lines 278-279
								if ($input->readUInt16() !== 42) {
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:279: characters 8-46
									return Outcome::Failure(new TypedError(null, $unsupported, new HxAnon([
										"fileName" => "image/Image.hx",
										"lineNumber" => 279,
										"className" => "image.Image",
										"methodName" => "getInfo",
									])));
								}
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:280: characters 7-32
								$format = "tiff";
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:281: characters 7-38
								$offset4 = $input->readInt32();
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:282: characters 7-45
								$input->seek($offset4, FileSeek::SeekBegin());
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:283: characters 7-38
								$count4 = $input->readUInt16();
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
								while (true) {
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: characters 14-21
									$count4 = $count4 - 1;
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
									if (!((($count4 + 1) > 0) && (($width === 0) || ($height === 0)))) {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:284: lines 284-297
										break;
									}
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$tag4 = $input->readUInt16();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$type4 = $input->readUInt16();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:285: lines 285-287
									$values4 = $input->readInt32();
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
									$value4 = null;
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
									if ($type4 === 3) {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:289: characters 17-44
										$t4 = $input->readUInt16();
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:289: characters 45-63
										$input->readUInt16();
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
										$value4 = $t4;
									} else {
										#/Users/ut/Documents/LAB/image/src/image/Image.hx:288: lines 288-291
										$value4 = $input->readInt32();
									}
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:292: lines 292-296
									switch ($tag4) {
										case 256:
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:293: characters 19-32
											$width = $value4;
											break;
										case 257:
											#/Users/ut/Documents/LAB/image/src/image/Image.hx:294: characters 19-33
											$height = $value4;
											break;
										default:
																						break;
									}
								}
							} else {
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:345: characters 7-45
								return Outcome::Failure(new TypedError(null, $unsupported, new HxAnon([
									"fileName" => "image/Image.hx",
									"lineNumber" => 345,
									"className" => "image.Image",
									"methodName" => "getInfo",
								])));
							}
							break;
					}

					#/Users/ut/Documents/LAB/image/src/image/Image.hx:347: characters 5-18
					$input->close();
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:348: lines 348-352
					return Outcome::Success(new HxAnon([
						"width" => $width,
						"height" => $height,
						"format" => $format,
					]));
					break;
				case 1:
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:354: characters 17-18
					$e = $res->params[0];
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:355: characters 5-22
					return Outcome::Failure($e);
					break;
			}
		});
	}


	/**
	 * @param string $input
	 * @param string $output
	 * @param object $options
	 * 
	 * @return FutureObject
	 */
	static public function resize ($input, $output, $options) {
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:47: characters 3-48
		if ($options->crop === null) {
			#/Users/ut/Documents/LAB/image/src/image/Image.hx:47: characters 29-48
			$options->crop = true;
		}
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:48: characters 3-60
		if ($options->focus === null) {
			#/Users/ut/Documents/LAB/image/src/image/Image.hx:48: characters 30-60
			$options->focus = new HxAnon([
				"x" => .5,
				"y" => .5,
			]);
		}
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:50: lines 50-59
		$info = null;
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:50: lines 50-59
		$ratio = .0;
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:50: lines 50-59
		$newRatio = .0;
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:50: lines 50-59
		$cropW = 0;
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:50: lines 50-59
		$cropH = 0;
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:50: lines 50-59
		$width = 0;
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:50: lines 50-59
		$height = 0;
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:50: lines 50-59
		$sizeRatio = .0;
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:50: lines 50-59
		$path = new Path($input);
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:50: lines 50-59
		$tmp = "tn_" . ($path->file??'null') . "." . ($path->ext??'null');
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:50: lines 50-59
		$xPos = 0;
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:50: lines 50-59
		$yPos = 0;
		#/Users/ut/Documents/LAB/image/src/image/Image.hx:61: lines 61-243
		return Future_Impl_::_flatMap(Future_Impl_::_flatMap(Future_Impl_::_flatMap(Image::getInfo($input), function ($res)  use (&$cropW, &$yPos, &$tmp, &$e, &$width, &$input, &$height, &$cropH, &$output, &$xPos, &$newRatio, &$sizeRatio, &$info, &$ratio, &$options) {
			#/Users/ut/Documents/LAB/image/src/image/Image.hx:63: lines 63-207
			switch ($res->index) {
				case 0:
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:64: characters 17-18
					$i = $res->params[0];
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:65: characters 5-13
					$info = $i;
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:66: characters 5-37
					$ratio = $info->width / $info->height;
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:67: characters 5-46
					$newRatio = $options->width / $options->height;
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:70: lines 70-84
					if ($ratio > $newRatio) {
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:72: characters 6-29
						$height = $options->height;
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:73: characters 14-48
						$width = (int)(floor($options->height * $ratio + 0.5));
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:74: characters 6-25
						$cropH = $info->height;
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:75: characters 14-60
						$cropW = (int)(floor($info->width / $width * $options->width + 0.5));
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:76: characters 6-46
						$sizeRatio = $options->height / $info->height;
					} else {
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:79: characters 15-48
						$height = (int)(floor($options->width / $ratio + 0.5));
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:80: characters 6-27
						$width = $options->width;
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:81: characters 6-24
						$cropW = $info->width;
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:82: characters 14-63
						$cropH = (int)(floor($info->height / $height * $options->height + 0.5));
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:83: characters 6-44
						$sizeRatio = $options->width / $info->width;
					}
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:86: characters 12-68
					$xPos = (int)(floor($options->focus->x * $info->width - $cropW / 2 + 0.5));
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:87: characters 12-69
					$yPos = (int)(floor($options->focus->y * $info->height - $cropH / 2 + 0.5));
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:89: characters 5-61
					if (($xPos + $cropW) > $info->width) {
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:89: characters 36-61
						$xPos = $info->width - $cropW;
					}
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:90: characters 5-63
					if (($yPos + $cropH) > $info->height) {
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:90: characters 37-63
						$yPos = $info->height - $cropH;
					}
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:91: characters 5-27
					if ($xPos < 0) {
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:91: characters 19-27
						$xPos = 0;
					}
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:92: characters 5-27
					if ($yPos < 0) {
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:92: characters 19-27
						$yPos = 0;
					}
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:133: characters 9-23
					$_g = $options->engine;
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:133: lines 133-168
					if ($_g->index === 3) {
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:134: lines 134-168
						try {
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:135: characters 7-54
							$createFrom = "imagecreatefrom" . ($info->format??'null');
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:136: characters 7-56
							$src = $createFrom($input);
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:137: characters 7-73
							$dst = imagecreatetruecolor($options->width, $options->height);
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:139: characters 7-41
							$outputPath = new Path($output);
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:140: lines 140-147
							if ($outputPath->ext === "png") {
								#/Users/ut/Documents/LAB/image/src/image/Image.hx:141: lines 141-146
								if (function_exists('imagecolorallocatealpha')) {
								imagealphablending($dst, false);
								imagesavealpha($dst, true);
								$transparent = imagecolorallocatealpha($dst, 255, 255, 255, 127);
								imagefilledrectangle($dst, 0, 0, $options->width, $options->height, $transparent);
							};
							}
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:148: characters 7-102
							imagecopyresampled($dst, $src, 0, 0, $xPos, $yPos, $options->width, $options->height, $cropW, $cropH);
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:149: characters 7-28
							imagedestroy($src);
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:150: characters 14-42
							$_g1 = strtolower($outputPath->ext);
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:150: characters 14-42
							switch ($_g1) {
								case "bmp":
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:158: characters 10-36
									imagewbmp($dst, $output);
									break;
								case "gif":
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:152: characters 10-35
									imagegif($dst, $output);
									break;
								case "jpeg":
								case "jpg":
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:154: characters 10-40
									imagejpeg($dst, $output, 96);
									break;
								case "png":
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:156: characters 10-38
									imagepng($dst, $output, 9);
									break;
								default:
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:160: characters 9-46
									$outFunc = "image" . ($outputPath->ext??'null');
									#/Users/ut/Documents/LAB/image/src/image/Image.hx:161: characters 9-51
									$outFunc($dst, $output);
									break;
							}

							#/Users/ut/Documents/LAB/image/src/image/Image.hx:164: characters 7-27
							imagedestroy($dst);
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:165: characters 14-41
							return new SyncFuture(new LazyConst(Outcome::Success(Noise::Noise())));
						} catch (\Throwable $__hx__caught_e) {
							CallStack::saveExceptionTrace($__hx__caught_e);
							$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
							$e = $__hx__real_e;
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:167: characters 14-37
							return new SyncFuture(new LazyConst(Outcome::Failure($e)));
						}
					}
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:171: characters 5-40
					$xPos = (int)(floor($xPos * $sizeRatio + 0.5));
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:172: characters 5-40
					$yPos = (int)(floor($yPos * $sizeRatio + 0.5));
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:174: lines 174-179
					$cmd = null;
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:174: characters 22-36
					$_g11 = $options->engine;
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:174: characters 22-36
					switch ($_g11->index) {
						case 0:
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:174: lines 174-179
							$cmd = "vipsthumbnail";
							break;
						case 1:
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:174: lines 174-179
							$cmd = "convert";
							break;
						case 2:
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:174: lines 174-179
							$cmd = "gm";
							break;
						default:
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:174: lines 174-179
							$cmd = null;
							break;
					}
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:180: lines 180-196
					$args = null;
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:180: characters 23-37
					$_g2 = $options->engine;
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:180: characters 23-37
					switch ($_g2->index) {
						case 0:
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:180: lines 180-196
							$args = \Array_hx::wrap([
								$input,
								"-s",
								"" . ($width??'null') . "x" . ($height??'null'),
								"-c",
								"-o",
								$tmp,
							]);
							break;
						case 1:
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:180: lines 180-196
							$args = \Array_hx::wrap([
								$input,
								"-resize",
								"" . ($width??'null') . "x" . ($height??'null'),
								"-crop",
								"" . ($options->width??'null') . "x" . ($options->height??'null') . "+" . ($xPos??'null') . "+" . ($yPos??'null'),
								"-strip",
								"+repage",
								$output,
							]);
							break;
						case 2:
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:180: lines 180-196
							$args = \Array_hx::wrap([
								"convert",
								$input,
								"-resize",
								"" . ($width??'null') . "x" . ($height??'null'),
								"-crop",
								"" . ($options->width??'null') . "x" . ($options->height??'null') . "+" . ($xPos??'null') . "+" . ($yPos??'null'),
								"-strip",
								"+repage",
								$output,
							]);
							break;
						default:
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:180: lines 180-196
							$args = null;
							break;
					}
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:197: characters 5-42
					$process = new Process($cmd, $args);
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:198: lines 198-204
					return Future_Impl_::_map($process->exitCode(), function ($code) {
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:199: lines 199-204
						if ($code === 0) {
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:201: characters 7-21
							return Outcome::Success(Noise::Noise());
						} else {
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:203: characters 7-62
							return Outcome::Failure(new TypedError(null, "Resize process exited with: " . ($code??'null'), new HxAnon([
								"fileName" => "image/Image.hx",
								"lineNumber" => 203,
								"className" => "image.Image",
								"methodName" => "resize",
							])));
						}
					});
					break;
				case 1:
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:205: characters 17-18
					$e1 = $res->params[0];
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:206: characters 5-28
					return new SyncFuture(new LazyConst(Outcome::Failure($e1)));
					break;
			}
		}), function ($res1)  use (&$yPos, &$tmp, &$output, &$xPos, &$options, &$path) {
			#/Users/ut/Documents/LAB/image/src/image/Image.hx:208: lines 208-232
			switch ($res1->index) {
				case 0:
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:210: characters 12-26
					$_g3 = $options->engine;
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:210: characters 12-26
					if ($_g3->index !== 0) {
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:213: characters 14-41
						return new SyncFuture(new LazyConst(Outcome::Success(Noise::Noise())));
					}

					#/Users/ut/Documents/LAB/image/src/image/Image.hx:218: characters 7-33
					$process1 = Path::join(\Array_hx::wrap([
						$path->dir,
						$tmp,
					]));
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:216: lines 216-221
					$process2 = new Process("vips", \Array_hx::wrap([
						"crop",
						$process1,
						$output,
						"" . ($xPos??'null'),
						"" . ($yPos??'null'),
						"" . ($options->width??'null'),
						"" . ($options->height??'null'),
					]));
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:223: lines 223-229
					return Future_Impl_::_map($process2->exitCode(), function ($code1) {
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:224: lines 224-229
						if ($code1 === 0) {
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:226: characters 7-21
							return Outcome::Success(Noise::Noise());
						} else {
							#/Users/ut/Documents/LAB/image/src/image/Image.hx:228: characters 7-60
							return Outcome::Failure(new TypedError(null, "Crop process exited with: " . ($code1??'null'), new HxAnon([
								"fileName" => "image/Image.hx",
								"lineNumber" => 228,
								"className" => "image.Image",
								"methodName" => "resize",
							])));
						}
					});
					break;
				case 1:
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:230: characters 17-18
					$e2 = $res1->params[0];
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:231: characters 5-28
					return new SyncFuture(new LazyConst(Outcome::Failure($e2)));
					break;
			}
		}), function ($res2)  use (&$tmp, &$options, &$path) {
			#/Users/ut/Documents/LAB/image/src/image/Image.hx:233: lines 233-243
			switch ($res2->index) {
				case 0:
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:235: characters 12-26
					$_g4 = $options->engine;
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:235: characters 12-26
					if ($_g4->index !== 0) {
						#/Users/ut/Documents/LAB/image/src/image/Image.hx:238: characters 14-41
						return new SyncFuture(new LazyConst(Outcome::Success(Noise::Noise())));
					}

					#/Users/ut/Documents/LAB/image/src/image/Image.hx:240: characters 5-54
					return FileSystem::deleteFile(Path::join(\Array_hx::wrap([
						$path->dir,
						$tmp,
					])));
					break;
				case 1:
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:241: characters 17-18
					$e3 = $res2->params[0];
					#/Users/ut/Documents/LAB/image/src/image/Image.hx:242: characters 5-28
					return new SyncFuture(new LazyConst(Outcome::Failure($e3)));
					break;
			}
		});
	}
}


Boot::registerClass(Image::class, 'image.Image');
