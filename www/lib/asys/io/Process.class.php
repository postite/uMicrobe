<?php

// Generated by Haxe 3.4.7
class asys_io_Process {
	public function __construct($cmd, $args = null) {
		if(!php_Boot::$skip_constructor) {
		$GLOBALS['%s']->push("asys.io.Process::new");
		$__hx__spos = $GLOBALS['%s']->length;
		$this->exitTrigger = new tink_core_FutureTrigger();
		$this->process = new sys_io_Process($cmd, $args);
		$this->stdin = tink_io__Sink_Sink_Impl_::ofOutput("stdin", $this->process->stdin, null);
		$this->stderr = tink_io__Source_Source_Impl_::ofInput("stderr", $this->process->stderr, null);
		$this->stdout = tink_io__Source_Source_Impl_::ofInput("stdout", $this->process->stdout, null);
		$tmp = $this->exitTrigger;
		$tmp->trigger($this->process->exitCode(null));
		$GLOBALS['%s']->pop();
	}}
	public $stdout;
	public $stderr;
	public $stdin;
	public $process;
	public $exitTrigger;
	public function getPid() {
		$GLOBALS['%s']->push("asys.io.Process::getPid");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this->process->getPid();
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	public function exitCode() {
		$GLOBALS['%s']->push("asys.io.Process::exitCode");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this->exitTrigger;
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	public function close() {
		$GLOBALS['%s']->push("asys.io.Process::close");
		$__hx__spos = $GLOBALS['%s']->length;
		$this->process->close();
		$GLOBALS['%s']->pop();
	}
	public function kill() {
		$GLOBALS['%s']->push("asys.io.Process::kill");
		$__hx__spos = $GLOBALS['%s']->length;
		$this->process->kill();
		$GLOBALS['%s']->pop();
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return 'asys.io.Process'; }
}
