<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx
 */

namespace ufront\core;

use \haxe\ds\StringMap;
use \php\Boot;
use \php\_Boot\HxException;
use \php\_Boot\HxAnon;
use \ufront\web\HttpError;

final /**
 * An ordered map implementation.
 * Copied from `thx.collections.HashList` in the old `thx` library.
 * @author Franco Ponticelli
 */
class OrderedStringMap {
	/**
	 * @var StringMap
	 */
	public $__hash;
	/**
	 * @var \Array_hx
	 */
	public $__keys;
	/**
	 * @var int
	 */
	public $length;


	/**
	 * @return void
	 */
	public function __construct () {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:18: characters 3-13
		$this->length = 0;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:19: characters 3-14
		$this->__keys = new \Array_hx();
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:20: characters 3-27
		$this->__hash = new StringMap();
	}


	/**
	 * @return \Array_hx
	 */
	public function array () {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:98: characters 3-19
		$values = new \Array_hx();
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:99: lines 99-100
		$_g = 0;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:99: lines 99-100
		$_g1 = $this->__keys;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:99: lines 99-100
		while ($_g < $_g1->length) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:99: characters 9-10
			$k = ($_g1->arr[$_g] ?? null);
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:99: lines 99-100
			$_g = $_g + 1;
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:100: characters 4-32
			$x = ($this->__hash->data[$k] ?? null);
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:100: characters 4-32
			$values->arr[$values->length] = $x;
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:100: characters 4-32
			++$values->length;

		}

		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:101: characters 3-16
		return $values;
	}


	/**
	 * @return void
	 */
	public function clear () {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:92: characters 3-27
		$this->__hash = new StringMap();
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:93: characters 3-14
		$this->__keys = new \Array_hx();
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:94: characters 3-13
		$this->length = 0;
	}


	/**
	 * @param string $key
	 * 
	 * @return bool
	 */
	public function exists ($key) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:55: characters 10-30
		return array_key_exists($key, $this->__hash->data);
	}


	/**
	 * @param string $key
	 * 
	 * @return mixed
	 */
	public function get ($key) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:39: characters 10-27
		return ($this->__hash->data[$key] ?? null);
	}


	/**
	 * @param int $index
	 * 
	 * @return mixed
	 */
	public function getAt ($index) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:43: characters 10-37
		return ($this->__hash->data[($this->__keys->arr[$index] ?? null)] ?? null);
	}


	/**
	 * @param string $key
	 * 
	 * @return int
	 */
	public function indexOf ($key) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:47: characters 3-39
		if (!array_key_exists($key, $this->__hash->data)) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:47: characters 30-39
			return -1;
		}
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:48: lines 48-50
		$_g1 = 0;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:48: lines 48-50
		$_g = $this->__keys->length;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:48: lines 48-50
		while ($_g1 < $_g) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:48: lines 48-50
			$_g1 = $_g1 + 1;
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:48: characters 9-10
			$i = $_g1 - 1;
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:49: lines 49-50
			if (($this->__keys->arr[$i] ?? null) === $key) {
				#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:50: characters 5-13
				return $i;
			}
		}

		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:51: characters 10-15
		throw new HxException(HttpError::internalServerError("" . ($key??'null') . " exists in hash but not in array", null, new HxAnon([
			"fileName" => "ufront/core/OrderedStringMap.hx",
			"lineNumber" => 51,
			"className" => "ufront.core.OrderedStringMap",
			"methodName" => "indexOf",
		])));
	}


	/**
	 * @return object
	 */
	public function iterator () {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:88: characters 3-28
		return $this->array()->iterator();
	}


	/**
	 * @param int $index
	 * 
	 * @return string
	 */
	public function keyAt ($index) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:80: characters 3-23
		return ($this->__keys->arr[$index] ?? null);
	}


	/**
	 * @return object
	 */
	public function keys () {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:84: characters 3-27
		return $this->__keys->iterator();
	}


	/**
	 * @param string $key
	 * 
	 * @return mixed
	 */
	public function remove ($key) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:59: characters 3-32
		$item = ($this->__hash->data[$key] ?? null);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:60: lines 60-61
		if ($item === null) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:61: characters 4-15
			return null;
		}
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:62: characters 3-23
		$this->__hash->remove($key);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:63: characters 3-23
		$this->__keys->remove($key);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:64: characters 3-11
		$this->length--;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:65: characters 3-14
		return $item;
	}


	/**
	 * @param int $index
	 * 
	 * @return mixed
	 */
	public function removeAt ($index) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:69: characters 3-27
		$key = ($this->__keys->arr[$index] ?? null);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:70: lines 70-71
		if ($key === null) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:71: characters 4-15
			return null;
		}
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:72: characters 3-32
		$item = ($this->__hash->data[$key] ?? null);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:73: characters 3-23
		$this->__hash->remove($key);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:74: characters 3-23
		$this->__keys->remove($key);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:75: characters 3-11
		$this->length--;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:76: characters 3-14
		return $item;
	}


	/**
	 * @param string $key
	 * @param mixed $value
	 * 
	 * @return void
	 */
	public function set ($key, $value) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:24: lines 24-27
		if (!array_key_exists($key, $this->__hash->data)) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:25: characters 4-22
			$_this = $this->__keys;
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:25: characters 4-22
			$_this->arr[$_this->length] = $key;
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:25: characters 4-22
			++$_this->length;

			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:26: characters 4-12
			$this->length++;
		}
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:28: characters 3-27
		$this->__hash->data[$key] = $value;
	}


	/**
	 * @param int $index
	 * @param string $key
	 * @param mixed $value
	 * 
	 * @return void
	 */
	public function setAt ($index, $key, $value) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:32: characters 3-16
		$this->remove($key);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:33: characters 3-30
		$this->__keys->insert($index, $key);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:34: characters 3-27
		$this->__hash->data[$key] = $value;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:35: characters 3-11
		$this->length++;
	}


	/**
	 * @return string
	 */
	public function toString () {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:105: characters 3-27
		$s = new \StringBuf();
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:106: characters 3-15
		$s->add("{");
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:107: characters 3-19
		$it = $this->keys();
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:108: characters 13-15
		$i = $it;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:108: characters 13-15
		while ($i->hasNext()) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:108: lines 108-114
			$i1 = $i->next();
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:109: characters 4-14
			$s->add($i1);
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:110: characters 4-19
			$s->add(" => ");
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:111: characters 4-31
			$s->add(\Std::string($this->get($i1)));
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:112: lines 112-113
			if ($it->hasNext()) {
				#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:113: characters 5-18
				$s->add(", ");
			}
		}

		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:115: characters 3-15
		$s->add("}");
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/OrderedStringMap.hx:116: characters 3-22
		return $s->b;
	}


	public function __toString() {
		return $this->toString();
	}
}


Boot::registerClass(OrderedStringMap::class, 'ufront.core.OrderedStringMap');
