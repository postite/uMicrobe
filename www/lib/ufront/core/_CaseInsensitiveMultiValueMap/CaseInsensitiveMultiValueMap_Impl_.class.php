<?php

// Generated by Haxe 3.4.7
class ufront_core__CaseInsensitiveMultiValueMap_CaseInsensitiveMultiValueMap_Impl_ {
	public function __construct(){}
	static function _new() {
		$GLOBALS['%s']->push("ufront.core._CaseInsensitiveMultiValueMap.CaseInsensitiveMultiValueMap_Impl_::_new");
		$__hx__spos = $GLOBALS['%s']->length;
		$this1 = null;
		$this2 = new haxe_ds_StringMap();
		$this1 = $this2;
		{
			$tmp = $this1;
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function exists($this1, $name) {
		$GLOBALS['%s']->push("ufront.core._CaseInsensitiveMultiValueMap.CaseInsensitiveMultiValueMap_Impl_::exists");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this1->exists(strtolower($name));
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function getAll($this1, $name) {
		$GLOBALS['%s']->push("ufront.core._CaseInsensitiveMultiValueMap.CaseInsensitiveMultiValueMap_Impl_::getAll");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = ufront_core__MultiValueMap_MultiValueMap_Impl_::getAll($this1, strtolower($name));
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function get($this1, $name) {
		$GLOBALS['%s']->push("ufront.core._CaseInsensitiveMultiValueMap.CaseInsensitiveMultiValueMap_Impl_::get");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = ufront_core__MultiValueMap_MultiValueMap_Impl_::get($this1, strtolower($name));
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function set($this1, $name, $value) {
		$GLOBALS['%s']->push("ufront.core._CaseInsensitiveMultiValueMap.CaseInsensitiveMultiValueMap_Impl_::set");
		$__hx__spos = $GLOBALS['%s']->length;
		ufront_core__MultiValueMap_MultiValueMap_Impl_::set($this1, strtolower($name), $value);
		$GLOBALS['%s']->pop();
	}
	static function add($this1, $name, $value) {
		$GLOBALS['%s']->push("ufront.core._CaseInsensitiveMultiValueMap.CaseInsensitiveMultiValueMap_Impl_::add");
		$__hx__spos = $GLOBALS['%s']->length;
		ufront_core__MultiValueMap_MultiValueMap_Impl_::add($this1, strtolower($name), $value);
		$GLOBALS['%s']->pop();
	}
	static function remove($this1, $key) {
		$GLOBALS['%s']->push("ufront.core._CaseInsensitiveMultiValueMap.CaseInsensitiveMultiValueMap_Impl_::remove");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this1->remove(strtolower($key));
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function hclone($this1) {
		$GLOBALS['%s']->push("ufront.core._CaseInsensitiveMultiValueMap.CaseInsensitiveMultiValueMap_Impl_::clone");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = ufront_core__MultiValueMap_MultiValueMap_Impl_::hclone($this1);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	function __toString() { return 'ufront.core._CaseInsensitiveMultiValueMap.CaseInsensitiveMultiValueMap_Impl_'; }
}
