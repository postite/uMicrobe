<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/InjectionTools.hx
 */

namespace ufront\core;

use \php\Boot;
use \php\_NativeArray\NativeArrayIterator;
use \minject\Injector;

/**
 * Some utilities and shortcuts for working with `minject.Injector`.
 */
class InjectionTools {
	/**
	 * Get a list of strings describing all the current mappings on this injector and it's parents.
	 * This is useful for debugging / logging purposes.
	 * This is only works when compiled with `-debug`, as minject does not include `toString()` functions for results unless compiled in debug mode.
	 * @param injector The current injector
	 * @param arr Optional, used for recursively checking parent injectors, should not be set manually.
	 * @param prefix Optional, used for recursively checking parent injectors, should not be set manually.
	 * @return An array containing a list of strings describing the current injector.
	 * 
	 * @param Injector $injector
	 * @param \Array_hx $arr
	 * @param string $prefix
	 * 
	 * @return \Array_hx
	 */
	static public function listMappings ($injector, $arr = null, $prefix = "") {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/InjectionTools.hx:23: lines 23-31
		if ($prefix === null) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/InjectionTools.hx:23: lines 23-31
			$prefix = "";
		}
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/InjectionTools.hx:25: characters 4-17
		$arr1 = new \Array_hx();
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/InjectionTools.hx:26: characters 4-46
		InjectionTools::listMappingsRecursive($injector, $arr1, "");
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/InjectionTools.hx:27: characters 4-14
		return $arr1;
	}


	/**
	 * @param Injector $injector
	 * @param \Array_hx $arr
	 * @param string $prefix
	 * 
	 * @return void
	 */
	static public function listMappingsRecursive ($injector, $arr, $prefix) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/InjectionTools.hx:35: lines 35-37
		if ($injector->parent !== null) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/InjectionTools.hx:36: characters 5-69
			InjectionTools::listMappingsRecursive($injector->parent, $arr, "(parent)" . ($prefix??'null'));
		}
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/InjectionTools.hx:38: characters 31-48
		$r = new NativeArrayIterator($injector->mappings->data);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/InjectionTools.hx:38: characters 31-48
		while ($r->hasNext()) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/InjectionTools.hx:38: lines 38-40
			$r1 = $r->next();
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/InjectionTools.hx:39: characters 5-36
			$x = ($prefix??'null') . ($r1->toString()??'null');
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/InjectionTools.hx:39: characters 5-36
			$arr->arr[$arr->length] = $x;
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/InjectionTools.hx:39: characters 5-36
			++$arr->length;
		}

	}
}


Boot::registerClass(InjectionTools::class, 'ufront.core.InjectionTools');
