<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/AsyncTools.hx
 */

namespace ufront\core;

use \php\Boot;
use \tink\core\_Future\FutureObject;
use \tink\core\_Future\SyncFuture;
use \tink\core\_Lazy\LazyConst;

/**
 * Tools to help create, transform and respond to `Future` values.
 * This class is designed for use with static extension: `using ufront.core.AsyncTools;`.
 */
class FutureTools {
	/**
	 * Wrap a value in `Future.sync(data)`
	 * 
	 * @param mixed $data
	 * 
	 * @return FutureObject
	 */
	static public function asFuture ($data) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/core/AsyncTools.hx:23: characters 4-30
		return new SyncFuture(new LazyConst($data));
	}
}


Boot::registerClass(FutureTools::class, 'ufront.core.FutureTools');
