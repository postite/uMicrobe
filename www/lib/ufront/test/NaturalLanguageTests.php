<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /Users/ut/Documents/LAB/ufront-mvc/src/ufront/test/TestUtils.hx
 */

namespace ufront\test;

use \php\Boot;

/**
 * `NaturalLanguageTests` is a collection of aliases for the methods in `TestUtils`.
 * It is designed to let you write powerful tests in language that is easy to read, so your tests have a more obvious purpose.
 * Let's you write powerful tests in a fairly natural language.
 * It is located in the same module as `TestUtils`, and so is included in static extension.
 * It also helps to do an import wildcard on the statics:
 * ```haxe
 * import ufront.test.TestUtils.NaturalLanguageTests.*;
 * using ufront.test.TestUtils;
 * ```
 **Examples:**
 * ```haxe
 * // A simple example:
 * whenIVisit("/home")
 * .onTheController( HomeController )
 * .itShouldLoad( HomeController, "homepage" )
 * .itShouldReturn( ViewResult );
 * // Or a bit more complex:
 * whenIVisit("/blog/2015-03-02/23-pictures-of-my-cat")
 * .onTheController( Routes )
 * .itShouldLoad( BlogController, "showPost", ["2015-03-02","23-pictures-of-my-cat"] )
 * .itShouldReturn( ViewResult, function(viewResult) {
 * Assert.equals( "23 Pictures of my cat", viewResult.data["title"] );
 * Assert.same( FromEngine("/blog/showPost.html"), viewResult.templateSource );
 * // Or using `Buddy` style tests:
 * viewResult.data["date"].should.be( "2nd April 2015" );
 * viewResult.layoutSource.should.be( FromEngine("/layout.html")  );
 * });
 * // Test submitting a form (POST request):
 * var testMailer = new TestMailer();
 * whenISubmit([ "name"=>"Jason", "message"=>"Do you have more cat pictures?" ])
 * .to("/contact/")
 * .andInjectAValue( UFMailer, testMailer )
 * .onTheApp( myUfrontWebsite )
 * .itShouldLoad( HomeController, "sendContactEmail" )
 * .theResponseShouldBe( ViewResult, function(vr) {
 * viewResult.templateSource.should.be(FromEngine("/home/sendContactEmail.html"));
 * viewResult.data["name"].should.be("Jason");
 * })
 * .andAlsoCheck(function() {
 * testMailer.messagesSent.length.should.be(2);
 * testMailer.messagesSent[0].subject.should.be("New Website Contact from Jason");
 * testMailer.messagesSent[1].subject.should.be("Thanks for getting in touch - we'll get back to you soon");
 * })
 * .pleaseWork();
 * // Kitchen sink example 1:
 * whenIVisit("/search")
 * .withTheQueryParams([ "q"=>"Ufront" ])
 * .withTheSessionHandler( new VoidSession() )
 * .withTheAuthHandler( new NobodyAuthHandler() )
 * .andInjectAValue( String, "uf-content", "contentDirectory" )
 * .onTheController( SearchController )
 * .itShouldLoad( SearchController, "searchFor", [{q:"Ufront"}] )
 * .itShouldReturn( ViewResult, function(vr) {
 * vr.templateSource.should.be( FromEngine("search/searchFor.html") );
 * });
 * // Kitchen sink example 2:
 * whenISubmit([ "username"=>"admin", "password"=>"wrongpassword" ])
 * .to("/login")
 * .andInjectAClass( UFMailer, TestMailer )
 * .onTheApp( myUfrontApp )
 * .itShouldFail()
 * .itShouldFailWith( 403, "Bad Password" )
 * .theResponseShouldBe( "<html><body>Bad password</body></html>" );
 * .andAlsoCheck(function(testContext) {
 * testContext.app.messages.length.should.be(0);
 * });
 * ```
 */
class NaturalLanguageTests {
}


Boot::registerClass(NaturalLanguageTests::class, 'ufront.test.NaturalLanguageTests');
