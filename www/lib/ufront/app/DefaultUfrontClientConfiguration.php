<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /Users/ut/Documents/LAB/ufront-mvc/src/ufront/app/UfrontClientConfiguration.hx
 */

namespace ufront\app;

use \ufront\auth\NobodyAuthHandler;
use \php\Boot;
use \ufront\web\ErrorPageHandler;
use \ufront\view\HttpViewEngine;
use \ufront\view\TemplatingEngines;
use \ufront\web\session\VoidSession;
use \php\_Boot\HxAnon;

class DefaultUfrontClientConfiguration {
	/**
	 * Fetch a default `UfrontClientConfiguration`.
	 * If you do not supply a UfrontClientConfiguration object to your `ClientJsApplication`, or if your object does not specify all the required values, it will use these values as a fallback.
	 * Defaults for each value are described in the documentation for each field in `UfrontConfiguration`
	 * 
	 * @return object
	 */
	static public function get () {
		#/usr/local/lib/haxe/lib/compiletime/2,6,0/src/CompileTime.hx:122: characters 26-87
		$tmp = \CompileTimeClassList::get("null,true,ufront.web.Controller");
		#/usr/local/lib/haxe/lib/compiletime/2,6,0/src/CompileTime.hx:122: characters 26-87
		$tmp1 = \CompileTimeClassList::get("null,true,ufront.api.UFApi");
		#/usr/local/lib/haxe/lib/compiletime/2,6,0/src/CompileTime.hx:122: characters 26-87
		$tmp2 = \CompileTimeClassList::get("null,true,ufront.web.client.UFClientAction");
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/app/UfrontClientConfiguration.hx:204: characters 23-44
		$tmp3 = TemplatingEngines::$all;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/app/UfrontClientConfiguration.hx:194: lines 194-224
		return new HxAnon([
			"indexController" => Boot::getClass(DefaultUfrontController::class),
			"urlRewrite" => true,
			"basePath" => "/",
			"remotingPath" => "/",
			"disableBrowserTrace" => false,
			"controllers" => $tmp,
			"apis" => $tmp1,
			"clientActions" => $tmp2,
			"viewEngine" => Boot::getClass(HttpViewEngine::class),
			"templatingEngines" => $tmp3,
			"viewPath" => "/view/",
			"defaultLayout" => null,
			"sessionImplementation" => Boot::getClass(VoidSession::class),
			"requestMiddleware" => new \Array_hx(),
			"responseMiddleware" => new \Array_hx(),
			"errorHandlers" => \Array_hx::wrap([new ErrorPageHandler()]),
			"authImplementation" => Boot::getClass(NobodyAuthHandler::class),
		]);
	}
}


Boot::registerClass(DefaultUfrontClientConfiguration::class, 'ufront.app.DefaultUfrontClientConfiguration');
