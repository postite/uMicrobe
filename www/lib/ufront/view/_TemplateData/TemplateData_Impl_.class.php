<?php

// Generated by Haxe 3.4.7
class ufront_view__TemplateData_TemplateData_Impl_ {
	public function __construct(){}
	static function _new($obj = null) {
		$GLOBALS['%s']->push("ufront.view._TemplateData.TemplateData_Impl_::_new");
		$__hx__spos = $GLOBALS['%s']->length;
		$this1 = null;
		if($obj !== null) {
			$this1 = $obj;
		} else {
			$this1 = _hx_anonymous(array());
		}
		{
			$tmp = $this1;
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function toObject($this1) {
		$GLOBALS['%s']->push("ufront.view._TemplateData.TemplateData_Impl_::toObject");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$GLOBALS['%s']->pop();
			return $this1;
		}
		$GLOBALS['%s']->pop();
	}
	static function toMap($this1) {
		$GLOBALS['%s']->push("ufront.view._TemplateData.TemplateData_Impl_::toMap");
		$__hx__spos = $GLOBALS['%s']->length;
		$ret = new haxe_ds_StringMap();
		{
			$_g = 0;
			$_g1 = Reflect::fields($this1);
			while($_g < $_g1->length) {
				$k = $_g1[$_g];
				$_g = $_g + 1;
				{
					$v = Reflect::field($this1, $k);
					$ret->set($k, $v);
					unset($v);
				}
				unset($k);
			}
		}
		{
			$GLOBALS['%s']->pop();
			return $ret;
		}
		$GLOBALS['%s']->pop();
	}
	static function toStringMap($this1) {
		$GLOBALS['%s']->push("ufront.view._TemplateData.TemplateData_Impl_::toStringMap");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = ufront_view__TemplateData_TemplateData_Impl_::toMap($this1);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function get($this1, $key) {
		$GLOBALS['%s']->push("ufront.view._TemplateData.TemplateData_Impl_::get");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = Reflect::field($this1, $key);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function exists($this1, $key) {
		$GLOBALS['%s']->push("ufront.view._TemplateData.TemplateData_Impl_::exists");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = _hx_has_field($this1, $key);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function set($this1, $key, $val) {
		$GLOBALS['%s']->push("ufront.view._TemplateData.TemplateData_Impl_::set");
		$__hx__spos = $GLOBALS['%s']->length;
		$this1->{$key} = $val;
		$this2 = null;
		if($this1 !== null) {
			$this2 = $this1;
		} else {
			$this2 = _hx_anonymous(array());
		}
		{
			$tmp = $this2;
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function array_set($this1, $key, $val) {
		$GLOBALS['%s']->push("ufront.view._TemplateData.TemplateData_Impl_::array_set");
		$__hx__spos = $GLOBALS['%s']->length;
		$this1->{$key} = $val;
		{
			$GLOBALS['%s']->pop();
			return $val;
		}
		$GLOBALS['%s']->pop();
	}
	static function setMap($this1, $map) {
		$GLOBALS['%s']->push("ufront.view._TemplateData.TemplateData_Impl_::setMap");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$k = $map->keys();
			while($k->hasNext()) {
				$k1 = $k->next();
				ufront_view__TemplateData_TemplateData_Impl_::set($this1, $k1, $map->get($k1));
				unset($k1);
			}
		}
		$this2 = null;
		if($this1 !== null) {
			$this2 = $this1;
		} else {
			$this2 = _hx_anonymous(array());
		}
		{
			$tmp = $this2;
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function setObject($this1, $d) {
		$GLOBALS['%s']->push("ufront.view._TemplateData.TemplateData_Impl_::setObject");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$_g = Type::typeof($d);
			switch($_g->index) {
			case 4:{
				$_g1 = 0;
				$_g11 = Reflect::fields($d);
				while($_g1 < $_g11->length) {
					$k = $_g11[$_g1];
					$_g1 = $_g1 + 1;
					ufront_view__TemplateData_TemplateData_Impl_::set($this1, $k, Reflect::field($d, $k));
					unset($k);
				}
			}break;
			case 6:{
				$cls = _hx_deref($_g)->params[0];
				{
					$_g2 = 0;
					$_g12 = Type::getInstanceFields($cls);
					while($_g2 < $_g12->length) {
						$k1 = $_g12[$_g2];
						$_g2 = $_g2 + 1;
						try {
							ufront_view__TemplateData_TemplateData_Impl_::set($this1, $k1, Reflect::getProperty($d, $k1));
						}catch(Exception $__hx__e) {
							$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
							$e = $_ex_;
							{
								$GLOBALS['%e'] = (new _hx_array(array()));
								while($GLOBALS['%s']->length >= $__hx__spos) {
									$GLOBALS['%e']->unshift($GLOBALS['%s']->pop());
								}
								$GLOBALS['%s']->push($GLOBALS['%e'][0]);
								try {
									ufront_view__TemplateData_TemplateData_Impl_::set($this1, $k1, Reflect::field($d, $k1));
								}catch(Exception $__hx__e) {
									$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
									$e1 = $_ex_;
									{
										$GLOBALS['%e'] = (new _hx_array(array()));
										while($GLOBALS['%s']->length >= $__hx__spos) {
											$GLOBALS['%e']->unshift($GLOBALS['%s']->pop());
										}
										$GLOBALS['%s']->push($GLOBALS['%e'][0]);
									}
								}
								unset($e1);
							}
						}
						unset($k1,$e);
					}
				}
			}break;
			default:{}break;
			}
		}
		$this2 = null;
		if($this1 !== null) {
			$this2 = $this1;
		} else {
			$this2 = _hx_anonymous(array());
		}
		{
			$tmp = $this2;
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function fromMap($d) {
		$GLOBALS['%s']->push("ufront.view._TemplateData.TemplateData_Impl_::fromMap");
		$__hx__spos = $GLOBALS['%s']->length;
		$obj = _hx_anonymous(array());
		$this1 = null;
		if($obj !== null) {
			$this1 = $obj;
		} else {
			$this1 = _hx_anonymous(array());
		}
		$m = $this1;
		ufront_view__TemplateData_TemplateData_Impl_::setMap($m, $d);
		{
			$GLOBALS['%s']->pop();
			return $m;
		}
		$GLOBALS['%s']->pop();
	}
	static function fromStringMap($d) {
		$GLOBALS['%s']->push("ufront.view._TemplateData.TemplateData_Impl_::fromStringMap");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = ufront_view__TemplateData_TemplateData_Impl_::fromMap($d);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function fromMany($dataSets) {
		$GLOBALS['%s']->push("ufront.view._TemplateData.TemplateData_Impl_::fromMany");
		$__hx__spos = $GLOBALS['%s']->length;
		$obj = _hx_anonymous(array());
		$this1 = null;
		if($obj !== null) {
			$this1 = $obj;
		} else {
			$this1 = _hx_anonymous(array());
		}
		$combined = $this1;
		{
			$d = $dataSets->iterator();
			while($d->hasNext()) {
				$d1 = $d->next();
				if($d1 !== null) {
					if(Std::is($d1, _hx_qtype("haxe.ds.StringMap"))) {
						$map = $d1;
						ufront_view__TemplateData_TemplateData_Impl_::setMap($combined, $map);
						unset($map);
					} else {
						$obj1 = $d1;
						ufront_view__TemplateData_TemplateData_Impl_::setObject($combined, $obj1);
						unset($obj1);
					}
				}
				unset($d1);
			}
		}
		{
			$GLOBALS['%s']->pop();
			return $combined;
		}
		$GLOBALS['%s']->pop();
	}
	static function fromObject($d) {
		$GLOBALS['%s']->push("ufront.view._TemplateData.TemplateData_Impl_::fromObject");
		$__hx__spos = $GLOBALS['%s']->length;
		$obj = _hx_anonymous(array());
		$this1 = null;
		if($obj !== null) {
			$this1 = $obj;
		} else {
			$this1 = _hx_anonymous(array());
		}
		{
			$tmp = ufront_view__TemplateData_TemplateData_Impl_::setObject($this1, $d);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	function __toString() { return 'ufront.view._TemplateData.TemplateData_Impl_'; }
}
