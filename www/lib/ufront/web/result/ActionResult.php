<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /Users/ut/Documents/LAB/ufront-mvc/src/ufront/web/result/ActionResult.hx
 */

namespace ufront\web\result;

use \ufront\core\SurpriseTools;
use \ufront\web\context\ActionContext;
use \php\Boot;
use \tink\core\_Future\FutureObject;
use \php\_Boot\HxString;

/**
 * ActionResult is the base class for all results of actions performed during a MVC request.
 * Each action (method) in your controller returns an action result.
 * This result will take information about the request (the result of the action, which action was called etc) and write an appropriate response to the client.
 * For example, a ViewResult will render a view using the data provided and a template whose path is guessed based on the name of the controller and action that were called.
 * As another example, a JsonResult will serialize the returned data and send it to the client as JSON, with the correct HTTP content type headings.
 * Please note if an action does not return an action result, it will be wrapped into one using `wrap()` below.
 */
class ActionResult {
	/**
	 * A helper function to transform any virtual URI (beginning with `~/`) into an absolute URI by applying the `UFUrlFilter` filters on the current app.
	 * For example might transform `~/login/` into `/my/app/login/` or `index.php?q=/login/` depending on how your app is set up.
	 * URLs which do not begin with `~/` will not be affected.
	 * 
	 * @param ActionContext $actionContext
	 * @param string $uri
	 * 
	 * @return string
	 */
	static public function transformUri ($actionContext, $uri) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/web/result/ActionResult.hx:38: lines 38-40
		if (\StringTools::startsWith($uri, "~/")) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/web/result/ActionResult.hx:39: characters 4-65
			return $actionContext->httpContext->generateUri(HxString::substr($uri, 2));
		} else {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/web/result/ActionResult.hx:40: characters 8-18
			return $uri;
		}
	}


	/**
	 * Wrap a dynamic result in an ActionResult.
	 * If it is null, an `EmptyResult` will be used.
	 * If it is an ActionResult, it will be left as is.
	 * If it is a different type, it will be converted to a String and used in a ContentResult.
	 * Please note this assumes that `resultValue` is a synchronous value, not a `Future`.
	 * 
	 * @param mixed $resultValue
	 * 
	 * @return ActionResult
	 */
	static public function wrap ($resultValue) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/web/result/ActionResult.hx:53: lines 53-62
		if ($resultValue === null) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/web/result/ActionResult.hx:54: characters 4-28
			return new EmptyResult();
		} else {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/web/result/ActionResult.hx:57: characters 28-69
			$value = $resultValue;
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/web/result/ActionResult.hx:57: characters 4-70
			$actionResultValue = (($value instanceof ActionResult) ? $value : null);
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/web/result/ActionResult.hx:58: lines 58-60
			if ($actionResultValue === null) {
				#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/web/result/ActionResult.hx:59: characters 5-69
				$actionResultValue = new ContentResult(\Std::string($resultValue));
			}
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/web/result/ActionResult.hx:61: characters 4-28
			return $actionResultValue;
		}
	}


	/**
	 * Every ActionResult must implement the `executeResult` method.
	 * This method can write output to the HTTP Response, set headers, change content types etc.
	 * The method may be asynchronous, and should return a `tink.core.Surprise`.
	 * The ActionResult base class provides a default implementation which has no effect (does not render a result).
	 * 
	 * @param ActionContext $actionContext
	 * 
	 * @return FutureObject
	 */
	public function executeResult ($actionContext) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/web/result/ActionResult.hx:28: characters 3-33
		return SurpriseTools::success();
	}
}


Boot::registerClass(ActionResult::class, 'ufront.web.result.ActionResult');
