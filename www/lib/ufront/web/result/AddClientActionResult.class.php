<?php

// Generated by Haxe 3.4.7
class ufront_web_result_AddClientActionResult extends ufront_web_result_CallJavascriptResult implements ufront_web_result_WrappedResult{
	public function __construct($originalResult, $clientAction, $data = null) {
		if(!php_Boot::$skip_constructor) {
		$GLOBALS['%s']->push("ufront.web.result.AddClientActionResult::new");
		$__hx__spos = $GLOBALS['%s']->length;
		parent::__construct($originalResult);
		$this->action = $clientAction;
		$this->actionData = $data;
		$GLOBALS['%s']->pop();
	}}
	public $action;
	public $actionData;
	public function executeResult($actionContext) {
		$GLOBALS['%s']->push("ufront.web.result.AddClientActionResult::executeResult");
		$__hx__spos = $GLOBALS['%s']->length;
		$_gthis = $this;
		{
			$tmp = tink_core__Future_Future_Impl_::_tryMap($this->originalResult->executeResult($actionContext), array(new _hx_lambda(array(&$_gthis, &$actionContext), "ufront_web_result_AddClientActionResult_0"), 'execute'));
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	static function addClientAction($originalResult, $clientAction, $data = null) {
		$GLOBALS['%s']->push("ufront.web.result.AddClientActionResult::addClientAction");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = new ufront_web_result_AddClientActionResult($originalResult, $clientAction, $data);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	function __toString() { return 'ufront.web.result.AddClientActionResult'; }
}
function ufront_web_result_AddClientActionResult_0(&$_gthis, &$actionContext, $n) {
	{
		$GLOBALS['%s']->push("ufront.web.result.AddClientActionResult::executeResult@63");
		$__hx__spos = $GLOBALS['%s']->length;
		$response = $actionContext->httpContext->response;
		if($response->get_contentType() === "text/html") {
			$className = $_gthis->action;
			$serializedData = haxe_Serializer::run($_gthis->actionData);
			$fnCall = "ufExecuteSerializedAction( \"" . _hx_string_or_null($className) . "\", \"" . _hx_string_or_null($serializedData) . "\" )";
			$script = "<script type=\"text/javascript\">" . _hx_string_or_null($fnCall) . "</script>";
			$newContent = ufront_web_result_CallJavascriptResult::insertScriptsBeforeBodyTag($response->getBuffer(), (new _hx_array(array($script))));
			$response->clearContent();
			$response->write($newContent);
		}
		{
			$tmp = tink_core_Noise::$Noise;
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
}
