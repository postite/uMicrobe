<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /Users/ut/Documents/LAB/ufront-mvc/src/ufront/auth/UFAuthUser.hx
 */

namespace ufront\auth;

use \php\Boot;
use \php\_Boot\HxAnon;

/**
 * A user who has been logged in using a `UFAuthHandler`.
 * This interface is extremely basic, providing the bare minimum to test permissions, check ID, log events and work with a `UFAuthHandler`.
 * @author Jason O'Neil
 */
interface UFAuthUser {
	/**
	 * Does this user have the specified permission(s)
	 * You can specify either a single permission or a group or permissions.
	 * All permissions must be satisfied for it to return true.
	 * 
	 * @param mixed $permission
	 * @param object $permissions
	 * 
	 * @return bool
	 */
	public function can ($permission = null, $permissions = null) ;


	/**
	 * @return string
	 */
	public function get_userID () ;
}


Boot::registerClass(UFAuthUser::class, 'ufront.auth.UFAuthUser');
Boot::registerMeta(UFAuthUser::class, new HxAnon(["obj" => new HxAnon(["interface" => null])]));
Boot::registerGetters('ufront\\auth\\UFAuthUser', [
	'userID' => true
]);
