<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /Users/ut/Documents/LAB/ufront-mvc/src/ufront/auth/YesBossAuthHandler.hx
 */

namespace ufront\auth;

use \php\Boot;

/**
 * An AuthHandler which always gives you permission to do anything.
 * Useful for command line tools that don't require authentication checks.
 *You're the boss*, everyone is afraid to say "no" to you. ;)
 * @author Jason O'Neil
 */
class YesBossAuthHandler implements UFAuthHandler {


	/**
	 * @return void
	 */
	public function __construct () {
	}


	/**
	 * @return BossUser
	 */
	public function get_currentUser () {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/auth/YesBossAuthHandler.hx:34: characters 29-50
		return new BossUser();
	}


	/**
	 * @param mixed $permission
	 * 
	 * @return bool
	 */
	public function hasPermission ($permission) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/auth/YesBossAuthHandler.hx:23: characters 56-67
		return true;
	}


	/**
	 * @param object $permissions
	 * 
	 * @return bool
	 */
	public function hasPermissions ($permissions) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/auth/YesBossAuthHandler.hx:25: characters 68-79
		return true;
	}


	/**
	 * @return bool
	 */
	public function isLoggedIn () {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/auth/YesBossAuthHandler.hx:15: characters 31-42
		return true;
	}


	/**
	 * @param UFAuthUser $user
	 * 
	 * @return bool
	 */
	public function isLoggedInAs ($user) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/auth/YesBossAuthHandler.hx:19: characters 50-61
		return true;
	}


	/**
	 * @return void
	 */
	public function requireLogin () {
	}


	/**
	 * @param UFAuthUser $user
	 * 
	 * @return void
	 */
	public function requireLoginAs ($user) {
	}


	/**
	 * @param mixed $permission
	 * 
	 * @return void
	 */
	public function requirePermission ($permission) {
	}


	/**
	 * @param object $permissions
	 * 
	 * @return void
	 */
	public function requirePermissions ($permissions) {
	}


	/**
	 * @return string
	 */
	public function toString () {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/auth/YesBossAuthHandler.hx:31: characters 29-56
		return "YesBossAuthHandler";
	}


	public function __toString() {
		return $this->toString();
	}
}


Boot::registerClass(YesBossAuthHandler::class, 'ufront.auth.YesBossAuthHandler');
Boot::registerGetters('ufront\\auth\\YesBossAuthHandler', [
	'currentUser' => true
]);
