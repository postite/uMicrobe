<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx
 */

namespace ufront\remoting;

use \php\Boot;
use \php\_Boot\HxException;
use \haxe\remoting\HttpConnection as RemotingHttpConnection;

/**
 * A remoting connection that works over synchronous HTTP connections, with some ufront specific extensions.
 * This extends `haxe.remoting.HttpConnection` and behaves similarly in most ways.
 * This adds an extra HTTP header, "X-Ufront-Remoting=1", so that our Ufront `RemotingHandler` knows it can also send traces, logs, warnings, errors and stack traces with the response.
 */
class HttpConnection extends RemotingHttpConnection {
	/**
	 * @var float
	 */
	static public $TIMEOUT = 10.;


	/**
	 * @param string $url
	 * 
	 * @return HttpConnection
	 */
	static public function urlConnect ($url) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:71: characters 4-40
		return new HttpConnection($url, new \Array_hx());
	}


	/**
	 * @param string $url
	 * @param \Array_hx $path
	 * 
	 * @return void
	 */
	public function __construct ($url, $path) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:15: lines 15-74
		parent::__construct($url, $path);
	}


	/**
	 * @param \Array_hx $params
	 * 
	 * @return mixed
	 */
	public function call ($params) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:23: characters 3-56
		$h = new HttpWithUploads($this->__url, false, HttpConnection::$TIMEOUT);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:24: characters 3-19
		$data = null;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:25: characters 3-21
		$status = null;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:28: characters 3-54
		$s = new RemotingSerializer(RemotingDirection::RDClientToServer());
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:29: characters 3-24
		$s->serialize($this->__path);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:30: characters 3-24
		$s->serialize($params);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:33: lines 33-36
		$remotingCallString = ($this->__path->join(".")??'null') . "(" . ($params->join(",")??'null') . ")";
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:33: lines 33-36
		$responseCode = null;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:33: lines 33-36
		$responseText = null;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:33: lines 33-36
		$result = null;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:37: characters 3-46
		$throwError = function ($v) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:37: characters 36-41
			throw (is_object($__hx__throw = $v) && $__hx__throw instanceof \Throwable ? $__hx__throw : new HxException($__hx__throw));
		};
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:38: characters 3-48
		$setResult = function ($v1)  use (&$result) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:38: characters 35-45
			$result = $v1;
		};
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:39: characters 3-54
		$onStatus = function ($s1)  use (&$responseCode, &$status) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:39: characters 30-51
			$responseCode = $status;
		};
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:40: lines 40-43
		$onData = function ($str)  use (&$responseText, &$setResult, &$throwError, &$remotingCallString) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:41: characters 4-22
			$responseText = $str;
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:42: characters 4-91
			RemotingUtil::processResponse($responseText, $setResult, $throwError, $remotingCallString);
		};
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:44: lines 44-56
		$onError = function ($errorData)  use (&$responseCode, &$setResult, &$throwError, &$remotingCallString, &$h) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:45: lines 45-55
			if (500 === $responseCode) {
				#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:49: characters 5-96
				RemotingUtil::processResponse($h->responseData(), $setResult, $throwError, $remotingCallString);
			} else {
				#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:54: characters 62-78
				$onError1 = $h->responseData();
				#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:54: characters 5-81
				$throwError(RemotingError::RHttpError($remotingCallString, $responseCode, $onError1));
			}
		};
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:57: characters 3-40
		$h->handle($onStatus, $onData, $onError);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:60: characters 3-40
		$h->setHeader("X-Haxe-Remoting", "1");
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:61: characters 3-42
		$h->setHeader("X-Ufront-Remoting", "1");
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:62: characters 22-34
		$tmp = $s->toString();
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:62: characters 3-36
		$h->setParam("__x", $tmp);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:63: characters 3-31
		$h->attachUploads($s->uploads);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:64: characters 3-11
		$h->send();
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/HttpConnection.hx:66: characters 3-16
		return $result;
	}
}


Boot::registerClass(HttpConnection::class, 'ufront.remoting.HttpConnection');
