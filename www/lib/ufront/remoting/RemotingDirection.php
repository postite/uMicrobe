<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/RemotingSerializer.hx
 */

namespace ufront\remoting;

use \php\Boot;
use \php\_Boot\HxEnum;

/**
 * The direction the remoting is for.
 * If the client is serializing a `UFFileUpload` to send it to the server, it will attach it differently than if a server is sending a file to the client.
 */
class RemotingDirection extends HxEnum {
	/**
	 * @return RemotingDirection
	 */
	static public function RDClientToServer () {
		static $inst = null;
		if (!$inst) $inst = new RemotingDirection('RDClientToServer', 0, []);
		return $inst;
	}


	/**
	 * @return RemotingDirection
	 */
	static public function RDServerToClient () {
		static $inst = null;
		if (!$inst) $inst = new RemotingDirection('RDServerToClient', 1, []);
		return $inst;
	}


	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			0 => 'RDClientToServer',
			1 => 'RDServerToClient',
		];
	}


	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'RDClientToServer' => 0,
			'RDServerToClient' => 0,
		];
	}
}


Boot::registerClass(RemotingDirection::class, 'ufront.remoting.RemotingDirection');
