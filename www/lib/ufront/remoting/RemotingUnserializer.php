<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/RemotingUnserializer.hx
 */

namespace ufront\remoting;

use \haxe\Unserializer;
use \haxe\ds\StringMap;
use \php\Boot;

/**
 * The RemotingUnserializer is almost identical to the normal `Unserializer`, except that is designed to handle some extra features for Ufront remoting.
 * In particular, it can link unserialize `UFFileUpload` objects from those attached to the request, if `RemotingSerializer` was used to attach them to the request.
 */
class RemotingUnserializer extends Unserializer {
	/**
	 * @var StringMap
	 * Files that were uploaded with the current request.
	 * These should be provided in the constructor, and the files should have been attached using the `RemotingSerializer`.
	 */
	public $uploads;


	/**
	 * @param string $buf
	 * @param StringMap $uploads
	 * 
	 * @return void
	 */
	public function __construct ($buf, $uploads = null) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/RemotingUnserializer.hx:19: characters 3-15
		parent::__construct($buf);
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/RemotingUnserializer.hx:20: characters 18-65
		$tmp = null;
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/RemotingUnserializer.hx:20: characters 18-65
		if ($uploads !== null) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/RemotingUnserializer.hx:20: characters 18-65
			$tmp = $uploads;
		} else {
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/RemotingUnserializer.hx:20: characters 46-65
			$this1 = new StringMap();
			#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/RemotingUnserializer.hx:20: characters 18-65
			$tmp = $this1;
		}
		#/Users/ut/Documents/LAB/ufront-mvc/src/ufront/remoting/RemotingUnserializer.hx:20: characters 3-65
		$this->uploads = $tmp;
	}
}


Boot::registerClass(RemotingUnserializer::class, 'ufront.remoting.RemotingUnserializer');
