<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /Users/ut/Documents/LAB/ufront-mvc/src/ufront/cache/UFCache.hx
 */

namespace ufront\cache;

use \php\Boot;
use \php\_Boot\HxAnon;

/**
 * A `UFCacheConnection` is used to give you a `UFCache` for a particular namespace.
 * Usually you will inject a `UFCacheConnection` into your application injector, and then various parts of your application can request a cache for their given namespace.
 * If you use a cache implementation that can function both synchronously and asynchronously, it may be wise to inject both `UFCacheConnection` and `UFCacheConnectionSync`.
 */
interface UFCacheConnection {
	/**
	 * Get a `UFCache` instance for a particular namespace.
	 * 
	 * @param string $namespace
	 * 
	 * @return UFCache
	 */
	public function getNamespace ($namespace) ;
}


Boot::registerClass(UFCacheConnection::class, 'ufront.cache.UFCacheConnection');
Boot::registerMeta(UFCacheConnection::class, new HxAnon(["obj" => new HxAnon(["interface" => null])]));
