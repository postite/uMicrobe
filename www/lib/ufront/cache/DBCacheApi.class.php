<?php

// Generated by Haxe 3.4.7
class ufront_cache_DBCacheApi extends ufront_api_UFApi {
	public function __construct() { if(!php_Boot::$skip_constructor) {
		$GLOBALS['%s']->push("ufront.cache.DBCacheApi::new");
		$__hx__spos = $GLOBALS['%s']->length;
		parent::__construct();
		$GLOBALS['%s']->pop();
	}}
	public function setup() {
		$GLOBALS['%s']->push("ufront.cache.DBCacheApi::setup");
		$__hx__spos = $GLOBALS['%s']->length;
		if(sys_db_TableCreate::exists(ufront_cache_DBCacheItem::$manager) === false) {
			sys_db_TableCreate::create(ufront_cache_DBCacheItem::$manager, null);
			{
				$GLOBALS['%s']->pop();
				return true;
			}
		}
		{
			$GLOBALS['%s']->pop();
			return false;
		}
		$GLOBALS['%s']->pop();
	}
	public function clearAll() {
		$GLOBALS['%s']->push("ufront.cache.DBCacheApi::clearAll");
		$__hx__spos = $GLOBALS['%s']->length;
		ufront_cache_DBCacheItem::$manager->unsafeDelete("DELETE FROM DBCacheItem WHERE TRUE");
		$GLOBALS['%s']->pop();
	}
	public function clearNamespace($namespace) {
		$GLOBALS['%s']->push("ufront.cache.DBCacheApi::clearNamespace");
		$__hx__spos = $GLOBALS['%s']->length;
		$tmp = ufront_cache_DBCacheItem::$manager;
		$tmp->unsafeDelete("DELETE FROM DBCacheItem WHERE namespace = " . _hx_string_or_null(sys_db_Manager::quoteAny($namespace)));
		$GLOBALS['%s']->pop();
	}
	public function clearItem($namespace, $cacheID) {
		$GLOBALS['%s']->push("ufront.cache.DBCacheApi::clearItem");
		$__hx__spos = $GLOBALS['%s']->length;
		$tmp = ufront_cache_DBCacheItem::$manager;
		$tmp1 = "DELETE FROM DBCacheItem WHERE namespace = " . _hx_string_or_null(sys_db_Manager::quoteAny($namespace));
		$tmp->unsafeDelete(_hx_string_or_null($tmp1) . _hx_string_or_null((" AND cacheID = " . _hx_string_or_null(sys_db_Manager::quoteAny($cacheID)))));
		$GLOBALS['%s']->pop();
	}
	public function clearItemLike($namespace, $cacheIDLike) {
		$GLOBALS['%s']->push("ufront.cache.DBCacheApi::clearItemLike");
		$__hx__spos = $GLOBALS['%s']->length;
		$tmp = ufront_cache_DBCacheItem::$manager;
		$tmp1 = "DELETE FROM DBCacheItem WHERE namespace = " . _hx_string_or_null(sys_db_Manager::quoteAny($namespace));
		$tmp->unsafeDelete(_hx_string_or_null($tmp1) . _hx_string_or_null((" AND cacheID LIKE " . _hx_string_or_null(sys_db_Manager::quoteAny($cacheIDLike)))));
		$GLOBALS['%s']->pop();
	}
	static function __meta__() { $args = func_get_args(); return call_user_func_array(self::$__meta__, $args); }
	static $__meta__;
	function __toString() { return 'ufront.cache.DBCacheApi'; }
}
ufront_cache_DBCacheApi::$__meta__ = _hx_anonymous(array("fields" => _hx_anonymous(array("setup" => _hx_anonymous(array("returnType" => (new _hx_array(array(0))))), "clearAll" => _hx_anonymous(array("returnType" => (new _hx_array(array(4))))), "clearNamespace" => _hx_anonymous(array("returnType" => (new _hx_array(array(4))))), "clearItem" => _hx_anonymous(array("returnType" => (new _hx_array(array(4))))), "clearItemLike" => _hx_anonymous(array("returnType" => (new _hx_array(array(4)))))))));
