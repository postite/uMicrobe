<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/std/php/_std/haxe/io/BytesOutput.hx
 */

namespace haxe\io;

use \php\Boot;
use \php\_Boot\HxException;

class BytesOutput extends Output {
	/**
	 * @var BytesBuffer
	 */
	public $b;


	/**
	 * @return void
	 */
	public function __construct () {
		#/usr/local/lib/haxe/std/php/_std/haxe/io/BytesOutput.hx:32: characters 3-24
		$this->b = new BytesBuffer();
	}


	/**
	 * Returns the `Bytes` of this output.
	 * This function should not be called more than once on a given
	 * `BytesOutput` instance.
	 * 
	 * @return Bytes
	 */
	public function getBytes () {
		#/usr/local/lib/haxe/std/php/_std/haxe/io/BytesOutput.hx:51: characters 3-22
		return $this->b->getBytes();
	}


	/**
	 * @return int
	 */
	public function get_length () {
		#/usr/local/lib/haxe/std/php/_std/haxe/io/BytesOutput.hx:55: characters 3-18
		return strlen($this->b->b);
	}


	/**
	 * @param int $c
	 * 
	 * @return void
	 */
	public function writeByte ($c) {
		#/usr/local/lib/haxe/std/php/_std/haxe/io/BytesOutput.hx:36: characters 3-15
		$_this = $this->b;
		#/usr/local/lib/haxe/std/php/_std/haxe/io/BytesOutput.hx:36: characters 3-15
		$_this->b = ($_this->b . chr($c));
	}


	/**
	 * @param Bytes $buf
	 * @param int $pos
	 * @param int $len
	 * 
	 * @return int
	 */
	public function writeBytes ($buf, $pos, $len) {
		#/usr/local/lib/haxe/std/php/_std/haxe/io/BytesOutput.hx:40: characters 3-26
		$_this = $this->b;
		#/usr/local/lib/haxe/std/php/_std/haxe/io/BytesOutput.hx:40: characters 3-26
		if (($pos < 0) || ($len < 0) || (($pos + $len) > $buf->length)) {
			#/usr/local/lib/haxe/std/php/_std/haxe/io/BytesOutput.hx:40: characters 3-26
			throw new HxException(Error::OutsideBounds());
		} else {
			#/usr/local/lib/haxe/std/php/_std/haxe/io/BytesOutput.hx:40: characters 3-26
			$left = $_this->b;
			#/usr/local/lib/haxe/std/php/_std/haxe/io/BytesOutput.hx:40: characters 3-26
			$this_s = substr($buf->b->s, $pos, $len);
			#/usr/local/lib/haxe/std/php/_std/haxe/io/BytesOutput.hx:40: characters 3-26
			$_this->b = ($left . $this_s);
		}

		#/usr/local/lib/haxe/std/php/_std/haxe/io/BytesOutput.hx:41: characters 3-13
		return $len;
	}
}


Boot::registerClass(BytesOutput::class, 'haxe.io.BytesOutput');
Boot::registerGetters('haxe\\io\\BytesOutput', [
	'length' => true
]);
