<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/std/haxe/macro/Expr.hx
 */

namespace haxe\macro;

use \php\Boot;
use \php\_Boot\HxEnum;

/**
 * Represents the import mode.
 * @see https://haxe.org/manual/type-system-import.html
 */
class ImportMode extends HxEnum {
	/**
	 * Represents the wildcard import `import *`.
	 * 
	 * @return ImportMode
	 */
	static public function IAll () {
		static $inst = null;
		if (!$inst) $inst = new ImportMode('IAll', 2, []);
		return $inst;
	}


	/**
	 * Represents the alias import `import c as alias`.
	 * 
	 * @param string $alias
	 * 
	 * @return ImportMode
	 */
	static public function IAsName ($alias) {
		return new ImportMode('IAsName', 1, [$alias]);
	}


	/**
	 * Represents a default import `import c`.
	 * 
	 * @return ImportMode
	 */
	static public function INormal () {
		static $inst = null;
		if (!$inst) $inst = new ImportMode('INormal', 0, []);
		return $inst;
	}


	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			2 => 'IAll',
			1 => 'IAsName',
			0 => 'INormal',
		];
	}


	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'IAll' => 0,
			'IAsName' => 1,
			'INormal' => 0,
		];
	}
}


Boot::registerClass(ImportMode::class, 'haxe.macro.ImportMode');
