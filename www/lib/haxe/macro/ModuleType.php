<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/std/haxe/macro/Type.hx
 */

namespace haxe\macro;

use \php\Boot;
use \php\_Boot\HxEnum;

/**
 * Represents a module type. These are the types that can be declared in a Haxe
 * module and which are passed to the generators (except `TTypeDecl`).
 */
class ModuleType extends HxEnum {
	/**
	 * An abstract.
	 * 
	 * @param object $a
	 * 
	 * @return ModuleType
	 */
	static public function TAbstract ($a) {
		return new ModuleType('TAbstract', 3, [$a]);
	}


	/**
	 * A class.
	 * 
	 * @param object $c
	 * 
	 * @return ModuleType
	 */
	static public function TClassDecl ($c) {
		return new ModuleType('TClassDecl', 0, [$c]);
	}


	/**
	 * An enum.
	 * 
	 * @param object $e
	 * 
	 * @return ModuleType
	 */
	static public function TEnumDecl ($e) {
		return new ModuleType('TEnumDecl', 1, [$e]);
	}


	/**
	 * A typedef.
	 * 
	 * @param object $t
	 * 
	 * @return ModuleType
	 */
	static public function TTypeDecl ($t) {
		return new ModuleType('TTypeDecl', 2, [$t]);
	}


	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			3 => 'TAbstract',
			0 => 'TClassDecl',
			1 => 'TEnumDecl',
			2 => 'TTypeDecl',
		];
	}


	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'TAbstract' => 1,
			'TClassDecl' => 1,
			'TEnumDecl' => 1,
			'TTypeDecl' => 1,
		];
	}
}


Boot::registerClass(ModuleType::class, 'haxe.macro.ModuleType');
