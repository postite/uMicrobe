<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/std/haxe/macro/Expr.hx
 */

namespace haxe\macro;

use \php\Boot;
use \php\_Boot\HxEnum;

/**
 * Represents a concrete type parameter in the AST.
 * Haxe allows expressions in concrete type parameters, e.g.
 * `new YourType<["hello", "world"]>`. In that case the value is `TPExpr` while
 * in the normal case it's `TPType`.
 */
class TypeParam extends HxEnum {
	/**
	 * 
	 * @param object $e
	 * 
	 * @return TypeParam
	 */
	static public function TPExpr ($e) {
		return new TypeParam('TPExpr', 1, [$e]);
	}


	/**
	 * 
	 * @param ComplexType $t
	 * 
	 * @return TypeParam
	 */
	static public function TPType ($t) {
		return new TypeParam('TPType', 0, [$t]);
	}


	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			1 => 'TPExpr',
			0 => 'TPType',
		];
	}


	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'TPExpr' => 1,
			'TPType' => 1,
		];
	}
}


Boot::registerClass(TypeParam::class, 'haxe.macro.TypeParam');
