<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/std/php/NativeArray.hx
 */

namespace php\_NativeArray;

use \php\Boot;

final class NativeArray_Impl_ {
	/**
	 * @return mixed
	 */
	static public function _new () {
		#/usr/local/lib/haxe/std/php/NativeArray.hx:30: character 16
		$this1 = [];
		#/usr/local/lib/haxe/std/php/NativeArray.hx:30: character 16
		return $this1;
	}


	/**
	 * @param mixed $this
	 * @param bool $key
	 * 
	 * @return mixed
	 */
	static public function getByBool ($this, $key) ;


	/**
	 * @param mixed $this
	 * @param float $key
	 * 
	 * @return mixed
	 */
	static public function getByFloat ($this, $key) ;


	/**
	 * @param mixed $this
	 * @param int $key
	 * 
	 * @return mixed
	 */
	static public function getByInt ($this, $key) ;


	/**
	 * @param mixed $this
	 * @param string $key
	 * 
	 * @return mixed
	 */
	static public function getByString ($this, $key) ;


	/**
	 * @param mixed $this
	 * 
	 * @return NativeArrayIterator
	 */
	static public function iterator ($this1) {
		#/usr/local/lib/haxe/std/php/NativeArray.hx:43: characters 3-39
		return new NativeArrayIterator($this1);
	}


	/**
	 * @param mixed $this
	 * @param bool $key
	 * @param mixed $val
	 * 
	 * @return mixed
	 */
	static public function setByBool ($this, $key, $val) ;


	/**
	 * @param mixed $this
	 * @param float $key
	 * @param mixed $val
	 * 
	 * @return mixed
	 */
	static public function setByFloat ($this, $key, $val) ;


	/**
	 * @param mixed $this
	 * @param int $key
	 * @param mixed $val
	 * 
	 * @return mixed
	 */
	static public function setByInt ($this, $key, $val) ;


	/**
	 * @param mixed $this
	 * @param string $key
	 * @param mixed $val
	 * 
	 * @return mixed
	 */
	static public function setByString ($this, $key, $val) ;
}


Boot::registerClass(NativeArray_Impl_::class, 'php._NativeArray.NativeArray_Impl_');
