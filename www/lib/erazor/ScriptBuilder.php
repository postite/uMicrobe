<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx
 */

namespace erazor;

use \php\Boot;

class ScriptBuilder {
	/**
	 * @var string
	 */
	public $context;


	/**
	 * @param string $context
	 * 
	 * @return void
	 */
	public function __construct ($context) {
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:9: characters 3-25
		$this->context = $context;
	}


	/**
	 * @param TBlock $block
	 * 
	 * @return string
	 */
	public function blockToString ($block) {
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:25: lines 25-35
		switch ($block->index) {
			case 0:
				#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:27: characters 17-18
				$s = $block->params[0];
				#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:28: characters 5-77
				return ($this->context??'null') . ".add('" . (\StringTools::replace($s, "'", "\\'")??'null') . "');\x0A";
				break;
			case 1:
				#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:30: characters 19-20
				$s1 = $block->params[0];
				#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:31: characters 5-20
				return ($s1??'null') . "\x0A";
				break;
			case 2:
				#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:33: characters 20-21
				$s2 = $block->params[0];
				#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:34: characters 5-48
				return ($this->context??'null') . ".unsafeAdd(" . ($s2??'null') . ");\x0A";
				break;
		}
	}


	/**
	 * @param \Array_hx $blocks
	 * 
	 * @return string
	 */
	public function build ($blocks) {
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:14: characters 3-32
		$buffer = new \StringBuf();
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:16: lines 16-19
		$_g = 0;
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:16: lines 16-19
		while ($_g < $blocks->length) {
			#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:16: characters 7-12
			$block = ($blocks->arr[$_g] ?? null);
			#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:16: lines 16-19
			$_g = $_g + 1;
			#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:18: characters 4-36
			$buffer->add($this->blockToString($block));
		}

		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/ScriptBuilder.hx:20: characters 3-27
		return $buffer->b;
	}
}


Boot::registerClass(ScriptBuilder::class, 'erazor.ScriptBuilder');
