<?php

// Generated by Haxe 3.4.7
class erazor_Output extends StringBuf {
	public function __construct($escapeMethod = null) {
		if(!isset($this->escape)) $this->escape = array(new _hx_lambda(array(&$this), "erazor_Output_0"), 'execute');
		if(!php_Boot::$skip_constructor) {
		$GLOBALS['%s']->push("erazor.Output::new");
		$__hx__spos = $GLOBALS['%s']->length;
		if($escapeMethod !== null) {
			$this->escape = $escapeMethod;
		}
		parent::__construct();
		$GLOBALS['%s']->pop();
	}}
	public function escape($str) { return call_user_func_array($this->escape, array($str)); }
	public $escape = null;
	public function unsafeAdd($str) {
		$GLOBALS['%s']->push("erazor.Output::unsafeAdd");
		$__hx__spos = $GLOBALS['%s']->length;
		$val = null;
		if(Std::is($str, _hx_qtype("erazor.TString"))) {
			$val = _hx_string_call($str, "toString", array());
		} else {
			$val1 = (property_exists($this, "escape") ? $this->escape: array($this, "escape"));
			$val = call_user_func_array($val1, array(Std::string($str)));
		}
		$this->add($val);
		$GLOBALS['%s']->pop();
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	static function safe($str) {
		$GLOBALS['%s']->push("erazor.Output::safe");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = new erazor_TString($str);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function unsafe($str) {
		$GLOBALS['%s']->push("erazor.Output::unsafe");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = new erazor_UnsafeString($str, null);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	function __toString() { return 'erazor.Output'; }
}
function erazor_Output_0(&$__hx__this, $str) {
	{
		$GLOBALS['%s']->push("erazor.Output::new");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$GLOBALS['%s']->pop();
			return $str;
		}
		$GLOBALS['%s']->pop();
	}
}
