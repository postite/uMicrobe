<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/error/ParserError.hx
 */

namespace erazor\error;

use \php\Boot;
use \php\_Boot\HxString;

/**
 * ...
 * @author Waneck
 */
class ParserError {
	/**
	 * @var string
	 */
	public $excerpt;
	/**
	 * @var string
	 */
	public $msg;
	/**
	 * @var int
	 */
	public $pos;


	/**
	 * @param string $msg
	 * @param int $pos
	 * @param string $excerpt
	 * 
	 * @return void
	 */
	public function __construct ($msg, $pos, $excerpt = null) {
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/error/ParserError.hx:16: characters 3-17
		$this->msg = $msg;
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/error/ParserError.hx:17: characters 3-17
		$this->pos = $pos;
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/error/ParserError.hx:18: characters 3-25
		$this->excerpt = $excerpt;
	}


	/**
	 * @return string
	 */
	public function toString () {
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/error/ParserError.hx:23: characters 3-30
		$excerpt = $this->excerpt;
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/error/ParserError.hx:24: lines 24-29
		if ($excerpt !== null) {
			#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/error/ParserError.hx:26: characters 4-35
			$nl = HxString::indexOf($excerpt, "\x0A");
			#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/error/ParserError.hx:27: lines 27-28
			if ($nl !== -1) {
				#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/error/ParserError.hx:28: characters 5-36
				$excerpt = HxString::substr($excerpt, 0, $nl);
			}
		}
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/error/ParserError.hx:31: characters 3-83
		return ($this->msg??'null') . " @ " . ($this->pos??'null') . ((($excerpt !== null ? " ( \"" . ($excerpt??'null') . "\" )" : ""))??'null');
	}


	public function __toString() {
		return $this->toString();
	}
}


Boot::registerClass(ParserError::class, 'erazor.error.ParserError');
