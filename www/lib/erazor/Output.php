<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx
 */

namespace erazor;

use \php\_Boot\HxClosure;
use \php\Boot;
use \php\_Boot\HxDynamicStr;

class Output extends \StringBuf {
	/**
	 * @var \Closure
	 */
	public $escape;


	/**
	 * @param string $str
	 * 
	 * @return TString
	 */
	static public function safe ($str) {
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx:61: characters 3-31
		return new TString($str);
	}


	/**
	 * @param string $str
	 * 
	 * @return UnsafeString
	 */
	static public function unsafe ($str) {
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx:65: characters 3-33
		return new UnsafeString($str);
	}


	/**
	 * @param \Closure $escapeMethod
	 * 
	 * @return void
	 */
	public function __construct ($escapeMethod = null) {
		if (!$this->__hx__default__escape) {
			$this->__hx__default__escape = new HxClosure($this, 'escape');
			if ($this->escape === null) $this->escape = $this->__hx__default__escape;
		}
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx:42: characters 3-51
		if ($escapeMethod !== null) {
			#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx:42: characters 30-51
			$this->escape = $escapeMethod;
		}
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx:43: characters 3-10
		parent::__construct();
	}


	/**
	 * @param string $str
	 * 
	 * @return string
	 */
	public function escape ($str)
	{
		if ($this->escape !== $this->__hx__default__escape) return call_user_func_array($this->escape, func_get_args());
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx:47: characters 3-13
		return $str;
	}
	protected $__hx__default__escape;


	/**
	 * @param mixed $str
	 * 
	 * @return void
	 */
	public function unsafeAdd ($str) {
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx:51: lines 51-55
		$val = (($str instanceof TString) ? HxDynamicStr::wrap($str)->toString() : $this->escape(\Std::string($str)));
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx:57: characters 3-11
		$this->add($val);
	}
}


Boot::registerClass(Output::class, 'erazor.Output');
