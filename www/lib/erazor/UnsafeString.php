<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx
 */

namespace erazor;

use \php\_Boot\HxClosure;
use \php\Boot;

class UnsafeString extends TString {
	/**
	 * @var \Closure
	 */
	public $escape;


	/**
	 * @param string $s
	 * @param \Closure $escapeMethod
	 * 
	 * @return void
	 */
	public function __construct ($s, $escapeMethod = null) {
		if (!$this->__hx__default__escape) {
			$this->__hx__default__escape = new HxClosure($this, 'escape');
			if ($this->escape === null) $this->escape = $this->__hx__default__escape;
		}
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx:27: characters 3-13
		parent::__construct($s);
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx:28: lines 28-29
		if ($escapeMethod !== null) {
			#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx:29: characters 4-25
			$this->escape = $escapeMethod;
		}
	}


	/**
	 * @param string $str
	 * 
	 * @return string
	 */
	public function escape ($str)
	{
		if ($this->escape !== $this->__hx__default__escape) return call_user_func_array($this->escape, func_get_args());
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx:23: characters 3-45
		return htmlspecialchars($str, ENT_QUOTES | ENT_HTML401);
	}
	protected $__hx__default__escape;


	/**
	 * @return string
	 */
	public function toString () {
		#/usr/local/lib/haxe/lib/erazor/1,0,2/src/erazor/Output.hx:34: characters 3-21
		return $this->escape($this->s);
	}


	public function __toString() {
		return $this->toString();
	}
}


Boot::registerClass(UnsafeString::class, 'erazor.UnsafeString');
