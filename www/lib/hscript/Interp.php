<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx
 */

namespace hscript;

use \php\_Boot\HxClosure;
use \haxe\IMap;
use \haxe\ds\StringMap;
use \php\_Boot\HxException;
use \php\Boot;
use \haxe\ds\EnumValueMap;
use \php\_NativeArray\NativeArrayIterator;
use \haxe\Log;
use \haxe\ds\ObjectMap;
use \php\_Boot\HxEnum;
use \haxe\CallStack;
use \haxe\ds\IntMap;
use \php\_Boot\HxAnon;
use \hscript\_Interp\Stop;

class Interp {
	/**
	 * @var StringMap
	 */
	public $binops;
	/**
	 * @var \Array_hx
	 */
	public $declared;
	/**
	 * @var int
	 */
	public $depth;
	/**
	 * @var bool
	 */
	public $inTry;
	/**
	 * @var StringMap
	 */
	public $locals;
	/**
	 * @var mixed
	 */
	public $returnValue;
	/**
	 * @var StringMap
	 */
	public $variables;


	/**
	 * @return void
	 */
	public function __construct () {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:53: lines 53-72
		$_gthis = $this;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:55: characters 3-40
		$this->variables = new StringMap();
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:56: characters 3-21
		$this->locals = new StringMap();
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:61: characters 3-25
		$this->declared = new \Array_hx();
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:62: characters 3-29
		$this->variables->data["null"] = null;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:63: characters 3-29
		$this->variables->data["true"] = true;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:64: characters 3-31
		$this->variables->data["false"] = false;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:65: lines 65-70
		$this1 = $this->variables;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:65: lines 65-70
		$value = \Reflect::makeVarArgs(function ($el)  use (&$_gthis) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:66: characters 4-25
			$inf = $_gthis->posInfos();
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:67: characters 12-22
			if ($el->length > 0) {
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:67: characters 12-22
				$el->length--;
			}
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:67: characters 4-23
			$v = array_shift($el->arr);
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:68: characters 4-45
			if ($el->length > 0) {
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:68: characters 24-45
				$inf->customParams = $el;
			}
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:69: characters 4-38
			(Log::$trace)(\Std::string($v), $inf);
		});
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:65: lines 65-70
		$this1->data["trace"] = $value;

		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:71: characters 3-12
		$this->initOps();
	}


	/**
	 * @param Expr $e1
	 * @param Expr $e2
	 * 
	 * @return mixed
	 */
	public function assign ($e1, $e2) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:124: characters 3-20
		$v = $this->expr($e2);
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:125: lines 125-146
		switch ($e1->index) {
			case 1:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:126: characters 15-17
				$id = $e1->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:127: characters 4-27
				$l = ($this->locals->data[$id] ?? null);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:128: lines 128-131
				if ($l === null) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:129: characters 5-24
					$this->variables->data[$id] = $v;
				} else {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:131: characters 5-12
					$l->r = $v;
				}

				break;
			case 5:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:132: characters 17-18
				$f = $e1->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:132: characters 15-16
				$e = $e1->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:133: characters 4-24
				$v = $this->set($this->expr($e), $f, $v);
				break;
			case 16:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:134: characters 18-23
				$index = $e1->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:134: characters 15-16
				$e3 = $e1->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:135: characters 4-30
				$arr = $this->expr($e3);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:136: characters 4-36
				$index1 = $this->expr($index);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:137: lines 137-142
				if (($arr instanceof IMap)) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:138: characters 5-31
					(Boot::typedCast(Boot::getClass(IMap::class), $arr))->set($index1, $v);
				} else {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:141: characters 5-19
					$arr[$index1] = $v;
				}

				break;
			default:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:145: characters 4-26
				$e4 = Error::EInvalidOp("=");
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:145: characters 4-26
				throw new HxException($e4);
				break;
		}
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:147: characters 3-11
		return $v;
	}


	/**
	 * @param string $op
	 * @param \Closure $fop
	 * 
	 * @return void
	 */
	public function assignOp ($op, $fop) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:151: characters 3-17
		$me = $this;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:152: characters 3-70
		$this->binops->data[$op] = function ($e1, $e2)  use (&$op, &$fop, &$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:152: characters 33-69
			return $me->evalAssignOp($op, $fop, $e1, $e2);
		};
	}


	/**
	 * @param mixed $o
	 * @param mixed $f
	 * @param \Array_hx $args
	 * 
	 * @return mixed
	 */
	public function call ($o, $f, $args) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:682: characters 3-38
		return \Reflect::callMethod($o, $f, $args);
	}


	/**
	 * @param string $cl
	 * @param \Array_hx $args
	 * 
	 * @return mixed
	 */
	public function cnew ($cl, $args) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:686: characters 3-33
		$c = \Type::resolveClass($cl);
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:687: characters 3-34
		if ($c === null) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:687: characters 19-34
			$c = $this->resolve($cl);
		}
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:688: characters 3-37
		return \Type::createInstance($c, $args);
	}


	/**
	 * @param Expr $econd
	 * @param Expr $e
	 * 
	 * @return void
	 */
	public function doWhileLoop ($econd, $e) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:582: characters 3-29
		$old = $this->declared->length;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:583: lines 583-593
		while (true) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:584: lines 584-592
			try {
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:585: characters 5-12
				$this->expr($e);
			} catch (\Throwable $__hx__caught_e) {
				CallStack::saveExceptionTrace($__hx__caught_e);
				$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
				if ($__hx__real_e instanceof Stop) {
					$err = $__hx__real_e;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:587: lines 587-591
					switch ($err->index) {
						case 0:
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:589: characters 18-23
							break 2;
							break;
						case 1:
														break;
						case 2:
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:590: characters 19-24
							throw new HxException($err);
							break;
					}
				} else  throw $__hx__caught_e;
			}
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:583: lines 583-593
			if (!($this->expr($econd) === true)) {
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:583: lines 583-593
				break;
			}
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:595: characters 3-15
		$this->restore($old);
	}


	/**
	 * @param StringMap $h
	 * 
	 * @return StringMap
	 */
	public function duplicate ($h) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:267: characters 3-22
		$h2 = new StringMap();
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:271: characters 13-21
		$k = new NativeArrayIterator(array_map("strval", array_keys($h->data)));
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:271: characters 13-21
		while ($k->hasNext()) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:271: lines 271-272
			$k1 = $k->next();
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:272: characters 4-22
			$value = ($h->data[$k1] ?? null);
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:272: characters 4-22
			$h2->data[$k1] = $value;
		}

		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:273: characters 3-12
		return $h2;
	}


	/**
	 * @param Expr $e
	 * 
	 * @return Expr
	 */
	public function edef ($e) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:287: characters 3-11
		return $e;
	}


	/**
	 * @param Error $e
	 * @param bool $rethrow
	 * 
	 * @return mixed
	 */
	public function error ($e, $rethrow = false) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:293: characters 3-43
		if ($rethrow === null) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:293: characters 3-43
			$rethrow = false;
		}
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:293: characters 3-43
		if ($rethrow) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:293: characters 17-32
			throw new HxException($e);
		} else {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:293: characters 38-43
			throw new HxException($e);
		}
	}


	/**
	 * @param string $op
	 * @param \Closure $fop
	 * @param Expr $e1
	 * @param Expr $e2
	 * 
	 * @return mixed
	 */
	public function evalAssignOp ($op, $fop, $e1, $e2) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:156: characters 3-9
		$v = null;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:157: lines 157-182
		switch ($e1->index) {
			case 1:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:158: characters 15-17
				$id = $e1->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:159: characters 4-27
				$l = ($this->locals->data[$id] ?? null);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:160: characters 4-30
				$v = $fop($this->expr($e1), $this->expr($e2));
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:161: lines 161-164
				if ($l === null) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:162: characters 5-24
					$this->variables->data[$id] = $v;
				} else {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:164: characters 5-12
					$l->r = $v;
				}

				break;
			case 5:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:165: characters 17-18
				$f = $e1->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:165: characters 15-16
				$e = $e1->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:166: characters 4-22
				$obj = $this->expr($e);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:167: characters 4-32
				$v = $fop($this->get($obj, $f), $this->expr($e2));
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:168: characters 4-20
				$v = $this->set($obj, $f, $v);

				break;
			case 16:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:169: characters 18-23
				$index = $e1->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:169: characters 15-16
				$e3 = $e1->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:170: characters 4-30
				$arr = $this->expr($e3);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:171: characters 4-36
				$index1 = $this->expr($index);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:172: lines 172-179
				if (($arr instanceof IMap)) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:173: characters 5-47
					$v = $fop((Boot::typedCast(Boot::getClass(IMap::class), $arr))->get($index1), $this->expr($e2));
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:174: characters 5-31
					(Boot::typedCast(Boot::getClass(IMap::class), $arr))->set($index1, $v);
				} else {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:177: characters 5-33
					$v = $fop($arr[$index1], $this->expr($e2));
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:178: characters 5-19
					$arr[$index1] = $v;
				}

				break;
			default:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:181: characters 11-32
				$e4 = Error::EInvalidOp($op);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:181: characters 11-32
				throw new HxException($e4);
				break;
		}
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:183: characters 3-11
		return $v;
	}


	/**
	 * @param Expr $expr
	 * 
	 * @return mixed
	 */
	public function execute ($expr) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:239: characters 3-12
		$this->depth = 0;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:241: characters 3-21
		$this->locals = new StringMap();
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:245: characters 3-25
		$this->declared = new \Array_hx();
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:246: characters 3-26
		return $this->exprReturn($expr);
	}


	/**
	 * @param Expr $e
	 * 
	 * @return mixed
	 */
	public function expr ($e) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:315: lines 315-579
		$_gthis = $this;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:320: lines 320-577
		switch ($e->index) {
			case 0:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:321: characters 15-16
				$c = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:322: lines 322-329
				switch ($c->index) {
					case 0:
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:323: characters 14-15
						$v = $c->params[0];
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:323: characters 18-26
						return $v;
						break;
					case 1:
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:324: characters 16-17
						$f = $c->params[0];
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:324: characters 20-28
						return $f;
						break;
					case 2:
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:325: characters 17-18
						$s = $c->params[0];
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:325: characters 21-29
						return $s;
						break;
				}
				break;
			case 1:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:330: characters 15-17
				$id = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:331: characters 4-22
				return $this->resolve($id);
				break;
			case 2:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:332: characters 17-18
				$e1 = $e->params[2];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:332: characters 13-14
				$n = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:333: characters 4-49
				$_this = $this->declared;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:333: characters 4-49
				$x = new HxAnon([
					"n" => $n,
					"old" => ($this->locals->data[$n] ?? null),
				]);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:333: characters 4-49
				$_this->arr[$_this->length] = $x;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:333: characters 4-49
				++$_this->length;

				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:334: characters 4-50
				$this1 = $this->locals;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:334: characters 23-47
				$value = ($e1 === null ? null : $this->expr($e1));
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:334: characters 4-50
				$this1->data[$n] = new HxAnon(["r" => $value]);

				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:335: characters 4-15
				return null;
				break;
			case 3:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:336: characters 16-17
				$e2 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:337: characters 4-18
				return $this->expr($e2);
				break;
			case 4:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:338: characters 15-20
				$exprs = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:339: characters 4-30
				$old = $this->declared->length;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:340: characters 4-17
				$v1 = null;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:341: lines 341-342
				$_g = 0;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:341: lines 341-342
				while ($_g < $exprs->length) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:341: characters 9-10
					$e3 = ($exprs->arr[$_g] ?? null);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:341: lines 341-342
					$_g = $_g + 1;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:342: characters 5-16
					$v1 = $this->expr($e3);
				}

				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:343: characters 4-16
				$this->restore($old);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:344: characters 4-12
				return $v1;
				break;
			case 5:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:345: characters 17-18
				$f1 = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:345: characters 15-16
				$e4 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:346: characters 4-25
				return $this->get($this->expr($e4), $f1);
				break;
			case 6:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:347: characters 21-23
				$e21 = $e->params[2];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:347: characters 18-20
				$e11 = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:347: characters 15-17
				$op = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:348: characters 4-29
				$fop = ($this->binops->data[$op] ?? null);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:349: characters 4-43
				if ($fop === null) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:349: characters 22-43
					$e5 = Error::EInvalidOp($op);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:349: characters 22-43
					throw new HxException($e5);
				}
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:350: characters 4-21
				return $fop($e11, $e21);
				break;
			case 7:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:351: characters 24-25
				$e6 = $e->params[2];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:351: characters 17-23
				$prefix = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:351: characters 14-16
				$op1 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:352: lines 352-369
				switch ($op1) {
					case "!":
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:354: characters 5-27
						return $this->expr($e6) !== true;
						break;
					case "++":
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:358: characters 5-33
						return $this->increment($e6, $prefix, 1);
						break;
					case "-":
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:356: characters 5-20
						return -$this->expr($e6);
						break;
					case "--":
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:360: characters 5-34
						return $this->increment($e6, $prefix, -1);
						break;
					case "~":
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:365: characters 5-20
						return ~$this->expr($e6);
						break;
					default:
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:368: characters 5-26
						$e7 = Error::EInvalidOp($op1);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:368: characters 5-26
						throw new HxException($e7);
						break;
				}
				break;
			case 8:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:370: characters 16-22
				$params = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:370: characters 14-15
				$e8 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:371: characters 4-27
				$args = new \Array_hx();
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:372: lines 372-373
				$_g1 = 0;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:372: lines 372-373
				while ($_g1 < $params->length) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:372: characters 9-10
					$p = ($params->arr[$_g1] ?? null);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:372: lines 372-373
					$_g1 = $_g1 + 1;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:373: characters 5-23
					$x1 = $this->expr($p);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:373: characters 5-23
					$args->arr[$args->length] = $x1;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:373: characters 5-23
					++$args->length;

				}

				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:375: lines 375-382
				if ($e8->index === 5) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:376: characters 18-19
					$f2 = $e8->params[1];
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:376: characters 16-17
					$e9 = $e8->params[0];
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:377: characters 5-23
					$obj = $this->expr($e9);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:378: characters 5-47
					if ($obj === null) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:378: characters 23-47
						$e10 = Error::EInvalidAccess($f2);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:378: characters 23-47
						throw new HxException($e10);
					}
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:379: characters 5-29
					return $this->fcall($obj, $f2, $args);
				} else {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:381: characters 5-35
					return $this->call(null, $this->expr($e8), $args);
				}
				break;
			case 9:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:383: characters 21-23
				$e22 = $e->params[2];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:383: characters 18-20
				$e12 = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:383: characters 12-17
				$econd = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:384: characters 11-86
				if ($this->expr($econd) === true) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:384: characters 37-45
					return $this->expr($e12);
				} else if ($e22 === null) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:384: characters 68-72
					return null;
				} else {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:384: characters 78-86
					return $this->expr($e22);
				}
				break;
			case 10:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:385: characters 21-22
				$e13 = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:385: characters 15-20
				$econd1 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:386: characters 4-22
				$this->whileLoop($econd1, $e13);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:387: characters 4-15
				return null;
				break;
			case 11:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:391: characters 18-19
				$e14 = $e->params[2];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:391: characters 15-17
				$it = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:391: characters 13-14
				$v2 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:392: characters 4-19
				$this->forLoop($v2, $it, $e14);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:393: characters 4-15
				return null;
				break;
			case 12:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:395: characters 4-9
				throw new HxException(Stop::SBreak());
				break;
			case 13:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:397: characters 4-9
				throw new HxException(Stop::SContinue());
				break;
			case 14:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:401: characters 31-35
				$name = $e->params[2];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:401: characters 25-30
				$fexpr = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:401: characters 18-24
				$params1 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:402: characters 4-43
				$capturedLocals = $this->duplicate($this->locals);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:403: characters 4-18
				$me = $this;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:404: characters 4-38
				$hasOpt = false;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:404: characters 4-38
				$minParams = 0;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:405: lines 405-409
				$_g2 = 0;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:405: lines 405-409
				while ($_g2 < $params1->length) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:405: characters 9-10
					$p1 = ($params1->arr[$_g2] ?? null);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:405: lines 405-409
					$_g2 = $_g2 + 1;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:406: lines 406-409
					if ($p1->opt) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:407: characters 6-19
						$hasOpt = true;
					} else {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:409: characters 6-17
						$minParams = $minParams + 1;
					}
				}

				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:410: lines 410-455
				$f3 = function ($args1)  use (&$name, &$capturedLocals, &$e15, &$_gthis, &$minParams, &$fexpr, &$params1, &$me) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:411: lines 411-431
					if ($args1->length !== $params1->length) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:412: lines 412-416
						if ($args1->length < $minParams) {
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:413: characters 7-96
							$str = "Invalid number of parameters. Got " . ($args1->length??'null') . ", required " . ($minParams??'null');
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:414: characters 7-61
							if ($name !== null) {
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:414: characters 26-61
								$str = ($str??'null') . ((" for function '" . ($name??'null') . "'")??'null');
							}
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:415: characters 7-12
							throw new HxException($str);
						}
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:418: characters 6-21
						$args2 = new \Array_hx();
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:419: characters 6-48
						$extraParams = $args1->length - $minParams;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:420: characters 6-18
						$pos = 0;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:421: lines 421-429
						$_g3 = 0;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:421: lines 421-429
						while ($_g3 < $params1->length) {
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:421: characters 11-12
							$p2 = ($params1->arr[$_g3] ?? null);
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:421: lines 421-429
							$_g3 = $_g3 + 1;
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:422: lines 422-429
							if ($p2->opt) {
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:423: lines 423-427
								if ($extraParams > 0) {
									#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:424: characters 25-30
									$pos = $pos + 1;
									#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:424: characters 9-32
									$args2->arr[$args2->length] = ($args1->arr[$pos - 1] ?? null);
									#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:424: characters 9-32
									++$args2->length;

									#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:425: characters 9-22
									$extraParams = $extraParams - 1;
								} else {
									#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:427: characters 9-25
									$args2->arr[$args2->length] = null;
									#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:427: characters 9-25
									++$args2->length;
								}
							} else {
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:429: characters 24-29
								$pos = $pos + 1;
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:429: characters 8-31
								$args2->arr[$args2->length] = ($args1->arr[$pos - 1] ?? null);
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:429: characters 8-31
								++$args2->length;
							}
						}

						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:430: characters 6-18
						$args1 = $args2;
					}
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:432: characters 5-43
					$old1 = $me->locals;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:432: characters 5-43
					$depth = $me->depth;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:433: characters 5-15
					$me->depth++;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:434: characters 5-45
					$me->locals = $me->duplicate($capturedLocals);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:435: lines 435-436
					$_g11 = 0;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:435: lines 435-436
					$_g4 = $params1->length;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:435: lines 435-436
					while ($_g11 < $_g4) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:435: lines 435-436
						$_g11 = $_g11 + 1;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:435: characters 10-11
						$i = $_g11 - 1;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:436: characters 6-51
						$me->locals->data[$params1[$i]->name] = new HxAnon(["r" => ($args1->arr[$i] ?? null)]);
					}

					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:437: characters 5-18
					$r = null;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:438: lines 438-451
					if ($_gthis->inTry) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:439: lines 439-449
						try {
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:440: characters 7-31
							$r = $me->exprReturn($fexpr);
						} catch (\Throwable $__hx__caught_e) {
							CallStack::saveExceptionTrace($__hx__caught_e);
							$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
							$e15 = $__hx__real_e;
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:442: characters 7-22
							$me->locals = $old1;
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:443: characters 7-23
							$me->depth = $depth;
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:447: characters 7-12
							throw (is_object($__hx__throw = $e15) && $__hx__throw instanceof \Throwable ? $__hx__throw : new HxException($__hx__throw));
						}
					} else {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:451: characters 6-30
						$r = $me->exprReturn($fexpr);
					}
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:452: characters 5-20
					$me->locals = $old1;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:453: characters 5-21
					$me->depth = $depth;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:454: characters 5-13
					return $r;
				};
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:456: characters 4-35
				$f4 = \Reflect::makeVarArgs($f3);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:457: lines 457-468
				if ($name !== null) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:458: lines 458-467
					if ($this->depth === 0) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:460: characters 6-28
						$this->variables->data[$name] = $f4;
					} else {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:463: characters 6-59
						$_this1 = $this->declared;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:463: characters 39-55
						$x2 = ($this->locals->data[$name] ?? null);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:463: characters 6-59
						$_this1->arr[$_this1->length] = new HxAnon([
							"n" => $name,
							"old" => $x2,
						]);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:463: characters 6-59
						++$_this1->length;

						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:464: characters 6-26
						$ref = new HxAnon(["r" => $f4]);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:465: characters 6-27
						$this->locals->data[$name] = $ref;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:466: characters 6-35
						$capturedLocals->data[$name] = $ref;
					}
				}
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:469: characters 4-12
				return $f4;
				break;
			case 15:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:398: characters 16-17
				$e16 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:399: characters 4-44
				$this->returnValue = ($e16 === null ? null : $this->expr($e16));
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:400: characters 4-9
				throw new HxException(Stop::SReturn());
				break;
			case 16:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:512: characters 18-23
				$index = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:512: characters 15-16
				$e17 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:513: characters 4-30
				$arr = $this->expr($e17);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:514: characters 4-36
				$index1 = $this->expr($index);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:515: lines 515-520
				if (($arr instanceof IMap)) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:516: characters 5-35
					return (Boot::typedCast(Boot::getClass(IMap::class), $arr))->get($index1);
				} else {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:519: characters 5-22
					return $arr[$index1];
				}
				break;
			case 17:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:470: characters 19-22
				$arr1 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:471: characters 8-61
				$tmp = null;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:471: characters 8-61
				if ($arr1->length > 0) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:471: characters 31-37
					$_g5 = ($arr1->arr[0] ?? null);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:471: characters 8-61
					$tmp = ($_g5->index === 6) && ($_g5->params[0] === "=>");
				} else {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:471: characters 8-61
					$tmp = false;
				}
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:471: lines 471-511
				if ($tmp) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:472: characters 5-33
					$isAllString = true;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:473: characters 5-30
					$isAllInt = true;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:474: characters 5-33
					$isAllObject = true;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:475: characters 5-31
					$isAllEnum = true;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:476: characters 5-34
					$keys = new \Array_hx();
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:477: characters 5-36
					$values = new \Array_hx();
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:478: lines 478-492
					$_g12 = 0;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:478: lines 478-492
					while ($_g12 < $arr1->length) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:478: characters 10-11
						$e18 = ($arr1->arr[$_g12] ?? null);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:478: lines 478-492
						$_g12 = $_g12 + 1;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:479: lines 479-491
						if ($e18->index === 6) {
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:479: characters 18-19
							if ($e18->params[0] === "=>") {
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:480: characters 31-37
								$eValue = $e18->params[2];
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:480: characters 25-29
								$eKey = $e18->params[1];
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:481: characters 8-37
								$key = $this->expr($eKey);
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:482: characters 8-41
								$value1 = $this->expr($eValue);
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:483: characters 37-56
								$isAllString = $isAllString && Boot::is($key, Boot::getClass('String'));
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:484: characters 31-47
								$isAllInt = $isAllInt && Boot::is($key, Boot::getClass('Int'));
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:485: characters 37-58
								$isAllObject = $isAllObject && \Reflect::isObject($key);
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:486: characters 33-57
								$isAllEnum = $isAllEnum && ($key instanceof HxEnum);
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:487: characters 8-22
								$keys->arr[$keys->length] = $key;
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:487: characters 8-22
								++$keys->length;

								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:488: characters 8-26
								$values->arr[$values->length] = $value1;
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:488: characters 8-26
								++$values->length;


							} else {
								#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:490: characters 16-21
								throw new HxException("=> expected");
							}
						} else {
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:490: characters 16-21
							throw new HxException("=> expected");
						}
					}

					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:493: lines 493-499
					$map = null;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:494: lines 494-498
					if ($isAllInt) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:493: lines 493-499
						$map = new IntMap();
					} else if ($isAllString) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:493: lines 493-499
						$map = new StringMap();
					} else if ($isAllEnum) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:493: lines 493-499
						$map = new EnumValueMap();
					} else if ($isAllObject) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:493: lines 493-499
						$map = new ObjectMap();
					} else {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:498: characters 11-16
						throw new HxException("Inconsistent key types");
					}
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:500: lines 500-502
					$_g21 = 0;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:500: lines 500-502
					$_g13 = $keys->length;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:500: lines 500-502
					while ($_g21 < $_g13) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:500: lines 500-502
						$_g21 = $_g21 + 1;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:500: characters 10-11
						$n1 = $_g21 - 1;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:501: characters 6-42
						(Boot::typedCast(Boot::getClass(IMap::class), $map))->set(($keys->arr[$n1] ?? null), ($values->arr[$n1] ?? null));
					}

					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:503: characters 5-15
					return $map;
				} else {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:506: characters 5-25
					$a = new \Array_hx();
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:507: lines 507-509
					$_g14 = 0;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:507: lines 507-509
					while ($_g14 < $arr1->length) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:507: characters 11-12
						$e19 = ($arr1->arr[$_g14] ?? null);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:507: lines 507-509
						$_g14 = $_g14 + 1;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:508: characters 6-21
						$x3 = $this->expr($e19);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:508: characters 6-21
						$a->arr[$a->length] = $x3;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:508: characters 6-21
						++$a->length;

					}

					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:510: characters 5-13
					return $a;
				}
				break;
			case 18:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:521: characters 16-22
				$params2 = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:521: characters 13-15
				$cl = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:522: characters 4-24
				$a1 = new \Array_hx();
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:523: lines 523-524
				$_g6 = 0;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:523: lines 523-524
				while ($_g6 < $params2->length) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:523: characters 9-10
					$e20 = ($params2->arr[$_g6] ?? null);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:523: lines 523-524
					$_g6 = $_g6 + 1;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:524: characters 5-20
					$x4 = $this->expr($e20);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:524: characters 5-20
					$a1->arr[$a1->length] = $x4;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:524: characters 5-20
					++$a1->length;

				}

				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:525: characters 4-21
				return $this->cnew($cl, $a1);
				break;
			case 19:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:526: characters 15-16
				$e23 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:527: characters 4-9
				throw (is_object($__hx__throw = $this->expr($e23)) && $__hx__throw instanceof \Throwable ? $__hx__throw : new HxException($__hx__throw));
				break;
			case 20:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:528: characters 19-25
				$ecatch = $e->params[3];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:528: characters 15-16
				$n2 = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:528: characters 13-14
				$e24 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:529: characters 4-30
				$old2 = $this->declared->length;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:530: characters 4-23
				$oldTry = $this->inTry;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:531: lines 531-550
				try {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:532: characters 5-17
					$this->inTry = true;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:533: characters 5-31
					$v3 = $this->expr($e24);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:534: characters 5-17
					$this->restore($old2);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:535: characters 5-19
					$this->inTry = $oldTry;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:536: characters 5-13
					return $v3;
				} catch (\Throwable $__hx__caught_e) {
					CallStack::saveExceptionTrace($__hx__caught_e);
					$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
					if ($__hx__real_e instanceof Stop) {
						$err = $__hx__real_e;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:538: characters 5-19
						$this->inTry = $oldTry;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:539: characters 5-10
						throw new HxException($err);
					} else {
						$err1 = $__hx__real_e;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:542: characters 5-17
						$this->restore($old2);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:543: characters 5-19
						$this->inTry = $oldTry;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:545: characters 5-50
						$_this2 = $this->declared;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:545: characters 5-50
						$x5 = new HxAnon([
							"n" => $n2,
							"old" => ($this->locals->data[$n2] ?? null),
						]);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:545: characters 5-50
						$_this2->arr[$_this2->length] = $x5;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:545: characters 5-50
						++$_this2->length;

						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:546: characters 5-30
						$this->locals->data[$n2] = new HxAnon(["r" => $err1]);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:547: characters 5-36
						$v4 = $this->expr($ecatch);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:548: characters 5-17
						$this->restore($old2);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:549: characters 5-13
						return $v4;
					}
				}
				break;
			case 21:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:551: characters 16-18
				$fl = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:552: characters 4-15
				$o = new HxAnon();
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:553: lines 553-554
				$_g7 = 0;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:553: lines 553-554
				while ($_g7 < $fl->length) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:553: characters 9-10
					$f5 = ($fl->arr[$_g7] ?? null);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:553: lines 553-554
					$_g7 = $_g7 + 1;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:554: characters 5-28
					$this->set($o, $f5->name, $this->expr($f5->e));
				}

				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:555: characters 4-12
				return $o;
				break;
			case 22:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:556: characters 26-28
				$e25 = $e->params[2];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:556: characters 23-25
				$e110 = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:556: characters 17-22
				$econd2 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:557: characters 11-59
				if ($this->expr($econd2) === true) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:557: characters 37-45
					return $this->expr($e110);
				} else {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:557: characters 51-59
					return $this->expr($e25);
				}
				break;
			case 23:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:558: characters 26-29
				$def = $e->params[2];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:558: characters 19-24
				$cases = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:558: characters 16-17
				$e26 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:559: characters 4-32
				$val = $this->expr($e26);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:560: characters 4-22
				$match = false;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:561: lines 561-571
				$_g8 = 0;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:561: lines 561-571
				while ($_g8 < $cases->length) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:561: characters 9-10
					$c1 = ($cases->arr[$_g8] ?? null);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:561: lines 561-571
					$_g8 = $_g8 + 1;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:562: lines 562-566
					$_g15 = 0;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:562: lines 562-566
					$_g22 = $c1->values;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:562: lines 562-566
					while ($_g15 < $_g22->length) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:562: characters 10-11
						$v5 = ($_g22->arr[$_g15] ?? null);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:562: lines 562-566
						$_g15 = $_g15 + 1;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:563: lines 563-566
						if (Boot::equal($this->expr($v5), $val)) {
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:564: characters 7-19
							$match = true;
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:565: characters 7-12
							break;
						}
					}

					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:567: lines 567-570
					if ($match) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:568: characters 6-24
						$val = $this->expr($c1->expr);
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:569: characters 6-11
						break;
					}
				}

				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:572: lines 572-573
				if (!$match) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:573: characters 25-29
					$val = ($def === null ? null : $this->expr($def));
				}
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:574: characters 4-14
				return $val;
				break;
			case 24:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:388: characters 23-24
				$e27 = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:388: characters 17-22
				$econd3 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:389: characters 4-24
				$this->doWhileLoop($econd3, $e27);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:390: characters 4-15
				return null;
				break;
			case 25:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:575: characters 20-21
				$e28 = $e->params[2];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:576: characters 4-18
				return $this->expr($e28);
				break;
		}
	}


	/**
	 * @param Expr $e
	 * 
	 * @return mixed
	 */
	public function exprReturn ($e) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:250: lines 250-261
		try {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:251: characters 4-18
			return $this->expr($e);
		} catch (\Throwable $__hx__caught_e) {
			CallStack::saveExceptionTrace($__hx__caught_e);
			$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
			if ($__hx__real_e instanceof Stop) {
				$e1 = $__hx__real_e;
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:253: lines 253-260
				switch ($e1->index) {
					case 0:
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:254: characters 17-22
						throw new HxException("Invalid break");
						break;
					case 1:
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:255: characters 20-25
						throw new HxException("Invalid continue");
						break;
					case 2:
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:257: characters 5-25
						$v = $this->returnValue;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:258: characters 5-23
						$this->returnValue = null;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:259: characters 5-13
						return $v;
						break;
				}
			} else  throw $__hx__caught_e;
		}
	}


	/**
	 * @param mixed $o
	 * @param string $f
	 * @param \Array_hx $args
	 * 
	 * @return mixed
	 */
	public function fcall ($o, $f, $args) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:678: characters 3-34
		return $this->call($o, $this->get($o, $f), $args);
	}


	/**
	 * @param string $n
	 * @param Expr $it
	 * @param Expr $e
	 * 
	 * @return void
	 */
	public function forLoop ($n, $it, $e) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:625: characters 3-29
		$old = $this->declared->length;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:626: characters 3-48
		$_this = $this->declared;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:626: characters 3-48
		$x = new HxAnon([
			"n" => $n,
			"old" => ($this->locals->data[$n] ?? null),
		]);
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:626: characters 3-48
		$_this->arr[$_this->length] = $x;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:626: characters 3-48
		++$_this->length;

		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:627: characters 3-35
		$it1 = $this->makeIterator($this->expr($it));
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:628: lines 628-639
		while ($it1->hasNext()) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:629: characters 4-35
			$this1 = $this->locals;
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:629: characters 4-35
			$value = new HxAnon(["r" => $it1->next()]);
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:629: characters 4-35
			$this1->data[$n] = $value;

			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:630: lines 630-638
			try {
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:631: characters 5-12
				$this->expr($e);
			} catch (\Throwable $__hx__caught_e) {
				CallStack::saveExceptionTrace($__hx__caught_e);
				$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
				if ($__hx__real_e instanceof Stop) {
					$err = $__hx__real_e;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:633: lines 633-637
					switch ($err->index) {
						case 0:
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:635: characters 18-23
							break 2;
							break;
						case 1:
														break;
						case 2:
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:636: characters 19-24
							throw new HxException($err);
							break;
					}
				} else  throw $__hx__caught_e;
			}
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:640: characters 3-15
		$this->restore($old);
	}


	/**
	 * @param mixed $o
	 * @param string $f
	 * 
	 * @return mixed
	 */
	public function get ($o, $f) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:656: characters 3-44
		if ($o === null) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:656: characters 20-44
			$e = Error::EInvalidAccess($f);
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:656: characters 20-44
			throw new HxException($e);
		}
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:660: lines 660-664
		try {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:661: characters 6-31
			return \Reflect::getProperty($o, $f);
		} catch (\Throwable $__hx__caught_e) {
			CallStack::saveExceptionTrace($__hx__caught_e);
			$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
			$e1 = $__hx__real_e;
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:663: characters 6-25
			return \Reflect::field($o, $f);
		}
	}


	/**
	 * @param mixed $map
	 * @param mixed $key
	 * 
	 * @return mixed
	 */
	public function getMapValue ($map, $key) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:648: characters 3-69
		return (Boot::typedCast(Boot::getClass(IMap::class), $map))->get($key);
	}


	/**
	 * @param Expr $e
	 * @param bool $prefix
	 * @param int $delta
	 * 
	 * @return mixed
	 */
	public function increment ($e, $prefix, $delta) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:191: lines 191-235
		switch ($e->index) {
			case 1:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:192: characters 15-17
				$id = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:193: characters 4-27
				$l = ($this->locals->data[$id] ?? null);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:194: characters 4-60
				$v = ($l === null ? ($this->variables->data[$id] ?? null) : $l->r);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:195: lines 195-199
				if ($prefix) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:196: characters 5-15
					$v = $v + $delta;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:197: characters 5-53
					if ($l === null) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:197: characters 21-40
						$this->variables->data[$id] = $v;
					} else {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:197: characters 46-53
						$l->r = $v;
					}
				} else if ($l === null) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:199: characters 21-48
					$this->variables->data[$id] = $v + $delta;
				} else {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:199: characters 54-69
					$l->r = $v + $delta;
				}
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:200: characters 4-12
				return $v;
				break;
			case 5:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:201: characters 17-18
				$f = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:201: characters 15-16
				$e1 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:202: characters 4-22
				$obj = $this->expr($e1);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:203: characters 4-33
				$v1 = $this->get($obj, $f);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:204: lines 204-208
				if ($prefix) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:205: characters 5-15
					$v1 = $v1 + $delta;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:206: characters 5-17
					$this->set($obj, $f, $v1);
				} else {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:208: characters 5-25
					$this->set($obj, $f, $v1 + $delta);
				}
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:209: characters 4-12
				return $v1;
				break;
			case 16:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:210: characters 18-23
				$index = $e->params[1];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:210: characters 15-16
				$e2 = $e->params[0];
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:211: characters 4-30
				$arr = $this->expr($e2);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:212: characters 4-36
				$index1 = $this->expr($index);
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:213: lines 213-232
				if (($arr instanceof IMap)) {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:214: characters 5-37
					$v2 = (Boot::typedCast(Boot::getClass(IMap::class), $arr))->get($index1);
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:215: lines 215-221
					if ($prefix) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:216: characters 6-16
						$v2 = $v2 + $delta;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:217: characters 6-32
						(Boot::typedCast(Boot::getClass(IMap::class), $arr))->set($index1, $v2);
					} else {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:220: characters 6-40
						(Boot::typedCast(Boot::getClass(IMap::class), $arr))->set($index1, $v2 + $delta);
					}
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:222: characters 5-13
					return $v2;
				} else {
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:225: characters 5-24
					$v3 = $arr[$index1];
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:226: lines 226-230
					if ($prefix) {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:227: characters 6-16
						$v3 = $v3 + $delta;
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:228: characters 6-20
						$arr[$index1] = $v3;
					} else {
						#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:230: characters 6-28
						$arr[$index1] = $v3 + $delta;
					}
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:231: characters 5-13
					return $v3;
				}
				break;
			default:
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:234: characters 11-51
				$e3 = Error::EInvalidOp(($delta > 0 ? "++" : "--"));
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:234: characters 11-51
				throw new HxException($e3);
				break;
		}
	}


	/**
	 * @return void
	 */
	public function initOps () {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:83: characters 3-17
		$me = $this;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:85: characters 3-21
		$this->binops = new StringMap();
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:89: characters 3-67
		$this->binops->data["+"] = function ($e1, $e2)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:89: characters 34-66
			return Boot::addOrConcat($me->expr($e1), $me->expr($e2));
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:90: characters 3-67
		$this->binops->data["-"] = function ($e11, $e21)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:90: characters 34-66
			return $me->expr($e11) - $me->expr($e21);
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:91: characters 3-67
		$this->binops->data["*"] = function ($e12, $e22)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:91: characters 34-66
			return $me->expr($e12) * $me->expr($e22);
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:92: characters 3-67
		$this->binops->data["/"] = function ($e13, $e23)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:92: characters 34-66
			return $me->expr($e13) / $me->expr($e23);
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:93: characters 3-67
		$this->binops->data["%"] = function ($e14, $e24)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:93: characters 34-66
			return fmod($me->expr($e14), $me->expr($e24));
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:94: characters 3-67
		$this->binops->data["&"] = function ($e15, $e25)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:94: characters 34-66
			return $me->expr($e15) & $me->expr($e25);
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:95: characters 3-67
		$this->binops->data["|"] = function ($e16, $e26)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:95: characters 34-66
			return $me->expr($e16) | $me->expr($e26);
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:96: characters 3-67
		$this->binops->data["^"] = function ($e17, $e27)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:96: characters 34-66
			return $me->expr($e17) ^ $me->expr($e27);
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:97: characters 3-69
		$this->binops->data["<<"] = function ($e18, $e28)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:97: characters 35-68
			return $me->expr($e18) << $me->expr($e28);
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:98: characters 3-69
		$this->binops->data[">>"] = function ($e19, $e29)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:98: characters 35-68
			return $me->expr($e19) >> $me->expr($e29);
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:99: characters 3-71
		$this->binops->data[">>>"] = function ($e110, $e210)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:99: characters 36-70
			return Boot::shiftRightUnsigned($me->expr($e110), $me->expr($e210));
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:100: characters 3-69
		$this->binops->data["=="] = function ($e111, $e211)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:100: characters 35-68
			return Boot::equal($me->expr($e111), $me->expr($e211));
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:101: characters 3-69
		$this->binops->data["!="] = function ($e112, $e212)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:101: characters 35-68
			return !Boot::equal($me->expr($e112), $me->expr($e212));
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:102: characters 3-69
		$this->binops->data[">="] = function ($e113, $e213)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:102: characters 35-68
			return $me->expr($e113) >= $me->expr($e213);
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:103: characters 3-69
		$this->binops->data["<="] = function ($e114, $e214)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:103: characters 35-68
			return $me->expr($e114) <= $me->expr($e214);
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:104: characters 3-67
		$this->binops->data[">"] = function ($e115, $e215)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:104: characters 34-66
			return $me->expr($e115) > $me->expr($e215);
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:105: characters 3-67
		$this->binops->data["<"] = function ($e116, $e216)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:105: characters 34-66
			return $me->expr($e116) < $me->expr($e216);
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:106: characters 3-85
		$this->binops->data["||"] = function ($e117, $e217)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:106: characters 42-84
			if ($me->expr($e117) !== true) {
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:106: characters 65-84
				return $me->expr($e217) === true;
			} else {
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:106: characters 42-84
				return true;
			}
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:107: characters 3-85
		$this->binops->data["&&"] = function ($e118, $e218)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:107: characters 42-84
			if ($me->expr($e118) === true) {
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:107: characters 65-84
				return $me->expr($e218) === true;
			} else {
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:107: characters 42-84
				return false;
			}
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:108: characters 3-25
		$this->binops->data["="] = new HxClosure($this, 'assign');
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:109: characters 3-127
		$this->binops->data["..."] = function ($e119, $e219)  use (&$me) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:109: characters 102-113
			$tmp = $me->expr($e119);
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:109: characters 36-126
			return new \IntIterator($tmp, $me->expr($e219));
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:110: characters 3-64
		$this->assignOp("+=", function ($v1, $v2) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:110: characters 49-63
			return Boot::addOrConcat($v1, $v2);
		});
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:111: characters 3-60
		$this->assignOp("-=", function ($v11, $v21) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:111: characters 45-59
			return $v11 - $v21;
		});
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:112: characters 3-60
		$this->assignOp("*=", function ($v12, $v22) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:112: characters 45-59
			return $v12 * $v22;
		});
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:113: characters 3-60
		$this->assignOp("/=", function ($v13, $v23) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:113: characters 45-59
			return $v13 / $v23;
		});
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:114: characters 3-60
		$this->assignOp("%=", function ($v14, $v24) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:114: characters 45-59
			return fmod($v14, $v24);
		});
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:115: characters 3-48
		$this->assignOp("&=", function ($v15, $v25) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:115: characters 33-47
			return $v15 & $v25;
		});
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:116: characters 3-48
		$this->assignOp("|=", function ($v16, $v26) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:116: characters 33-47
			return $v16 | $v26;
		});
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:117: characters 3-48
		$this->assignOp("^=", function ($v17, $v27) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:117: characters 33-47
			return $v17 ^ $v27;
		});
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:118: characters 3-50
		$this->assignOp("<<=", function ($v18, $v28) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:118: characters 34-49
			return $v18 << $v28;
		});
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:119: characters 3-50
		$this->assignOp(">>=", function ($v19, $v29) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:119: characters 34-49
			return $v19 >> $v29;
		});
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:120: characters 3-52
		$this->assignOp(">>>=", function ($v110, $v210) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:120: characters 35-51
			return Boot::shiftRightUnsigned($v110, $v210);
		});
	}


	/**
	 * @param mixed $o
	 * 
	 * @return bool
	 */
	public function isMap ($o) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:644: characters 3-42
		return ($o instanceof IMap);
	}


	/**
	 * @param mixed $v
	 * 
	 * @return object
	 */
	public function makeIterator ($v) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:618: characters 3-47
		try {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:618: characters 7-23
			$v = $v->iterator();
		} catch (\Throwable $__hx__caught_e) {
			CallStack::saveExceptionTrace($__hx__caught_e);
			$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
			$e = $__hx__real_e;
					}
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:620: characters 3-71
		if ((Boot::dynamicField($v, 'hasNext') === null) || (Boot::dynamicField($v, 'next') === null)) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:620: characters 45-71
			$e1 = Error::EInvalidIterator($v);
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:620: characters 45-71
			throw new HxException($e1);
		}
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:621: characters 3-11
		return $v;
	}


	/**
	 * @return object
	 */
	public function posInfos () {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:79: characters 3-55
		return new HxAnon([
			"fileName" => "hscript",
			"lineNumber" => 0,
		]);
	}


	/**
	 * @param string $id
	 * 
	 * @return mixed
	 */
	public function resolve ($id) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:306: characters 3-26
		$l = ($this->locals->data[$id] ?? null);
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:307: lines 307-308
		if ($l !== null) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:308: characters 4-14
			return $l->r;
		}
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:309: characters 3-29
		$v = ($this->variables->data[$id] ?? null);
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:310: lines 310-311
		if (($v === null) && !array_key_exists($id, $this->variables->data)) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:311: characters 4-31
			$e = Error::EUnknownVariable($id);
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:311: characters 4-31
			throw new HxException($e);
		}
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:312: characters 3-11
		return $v;
	}


	/**
	 * @param int $old
	 * 
	 * @return void
	 */
	public function restore ($old) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:277: lines 277-280
		while ($this->declared->length > $old) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:278: characters 12-26
			$_this = $this->declared;
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:278: characters 12-26
			if ($_this->length > 0) {
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:278: characters 12-26
				$_this->length--;
			}
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:278: characters 4-27
			$d = array_pop($_this->arr);
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:279: characters 4-25
			$this->locals->data[$d->n] = $d->old;
		}
	}


	/**
	 * @param mixed $e
	 * 
	 * @return void
	 */
	public function rethrow ($e) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:301: characters 3-8
		throw (is_object($__hx__throw = $e) && $__hx__throw instanceof \Throwable ? $__hx__throw : new HxException($__hx__throw));
	}


	/**
	 * @param mixed $o
	 * @param string $f
	 * @param mixed $v
	 * 
	 * @return mixed
	 */
	public function set ($o, $f, $v) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:672: characters 3-43
		if ($o === null) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:672: characters 19-43
			$e = Error::EInvalidAccess($f);
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:672: characters 19-43
			throw new HxException($e);
		}
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:673: characters 3-29
		\Reflect::setProperty($o, $f, $v);
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:674: characters 3-11
		return $v;
	}


	/**
	 * @param mixed $map
	 * @param mixed $key
	 * @param mixed $value
	 * 
	 * @return void
	 */
	public function setMapValue ($map, $key, $value) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:652: characters 3-69
		(Boot::typedCast(Boot::getClass(IMap::class), $map))->set($key, $value);
	}


	/**
	 * @param Expr $econd
	 * @param Expr $e
	 * 
	 * @return void
	 */
	public function whileLoop ($econd, $e) {
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:599: characters 3-29
		$old = $this->declared->length;
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:600: lines 600-610
		while ($this->expr($econd) === true) {
			#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:601: lines 601-609
			try {
				#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:602: characters 5-12
				$this->expr($e);
			} catch (\Throwable $__hx__caught_e) {
				CallStack::saveExceptionTrace($__hx__caught_e);
				$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
				if ($__hx__real_e instanceof Stop) {
					$err = $__hx__real_e;
					#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:604: lines 604-608
					switch ($err->index) {
						case 0:
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:606: characters 18-23
							break 2;
							break;
						case 1:
														break;
						case 2:
							#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:607: characters 19-24
							throw new HxException($err);
							break;
					}
				} else  throw $__hx__caught_e;
			}
		};
		#/usr/local/lib/haxe/lib/hscript/2,2,0/hscript/Interp.hx:611: characters 3-15
		$this->restore($old);
	}
}


Boot::registerClass(Interp::class, 'hscript.Interp');
