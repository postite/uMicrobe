<?php

// Generated by Haxe 3.4.7
class msignal_Slot1 extends msignal_Slot {
	public function __construct($signal, $listener, $once = null, $priority = null) {
		if(!php_Boot::$skip_constructor) {
		$GLOBALS['%s']->push("msignal.Slot1::new");
		$__hx__spos = $GLOBALS['%s']->length;
		if($priority === null) {
			$priority = 0;
		}
		if($once === null) {
			$once = false;
		}
		parent::__construct($signal,$listener,$once,$priority);
		$GLOBALS['%s']->pop();
	}}
	public $param;
	public function execute($value1) {
		$GLOBALS['%s']->push("msignal.Slot1::execute");
		$__hx__spos = $GLOBALS['%s']->length;
		if(!$this->enabled) {
			$GLOBALS['%s']->pop();
			return;
		}
		if($this->once) {
			$this->remove();
		}
		if($this->param !== null) {
			$value1 = $this->param;
		}
		$this->listener($value1);
		$GLOBALS['%s']->pop();
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	static $__properties__ = array("set_listener" => "set_listener");
	function __toString() { return 'msignal.Slot1'; }
}
