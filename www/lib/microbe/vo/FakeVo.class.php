<?php

// Generated by Haxe 3.4.7
class microbe_vo_FakeVo extends ufront_db_Object {
	public function __construct() {
		if(!php_Boot::$skip_constructor) {
		$GLOBALS['%s']->push("microbe.vo.FakeVo::new");
		$__hx__spos = $GLOBALS['%s']->length;
		parent::__construct();
		$GLOBALS['%s']->pop();
	}}
	public $text;
	public $titre;
	public function _validationsFromMacros() {
		$GLOBALS['%s']->push("microbe.vo.FakeVo::_validationsFromMacros");
		$__hx__spos = $GLOBALS['%s']->length;
		parent::_validationsFromMacros();
		if($this->text === null) {
			ufront_db__ValidationErrors_ValidationErrors_Impl_::set($this->validationErrors, "text", "text" . " is a required field.");
		}
		if($this->titre === null) {
			ufront_db__ValidationErrors_ValidationErrors_Impl_::set($this->validationErrors, "titre", "titre" . " is a required field.");
		}
		$GLOBALS['%s']->pop();
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	static function __meta__() { $args = func_get_args(); return call_user_func_array(self::$__meta__, $args); }
	static $__meta__;
	static $formule;
	static $manager;
	static $__properties__ = array("set_hxSerializationFields" => "set_hxSerializationFields","get_hxSerializationFields" => "get_hxSerializationFields","get_saved" => "get_saved");
	function __toString() { return 'microbe.vo.FakeVo'; }
}
microbe_vo_FakeVo::$__meta__ = _hx_anonymous(array("obj" => _hx_anonymous(array("ufRelationships" => null, "hxSerializationFields" => (new _hx_array(array("text", "titre", "id", "created", "modified"))), "rtti" => (new _hx_array(array("oy4:namey6:FakeVoy7:indexesahy9:relationsahy7:hfieldsby2:idoR0R5y6:isNullfy1:tjy17:sys.db.RecordType:0:0gy4:textoR0R9R6fR7jR8:9:1i256gy8:modifiedoR0R10R6fR7jR8:11:0gy5:titreoR0R11R6fR7jR8:9:1i256gy7:createdoR0R12R6fR7r9ghy3:keyaR5hy6:fieldsar4r12r8r6r10hg"))))), "fields" => _hx_anonymous(array("text" => _hx_anonymous(array("microbe" => (new _hx_array(array("description", "TextInput"))))), "titre" => _hx_anonymous(array("microbe" => (new _hx_array(array("titre", "TextInput")))))))));
microbe_vo_FakeVo::$formule = microbe_vo_FakeVo_0();
microbe_vo_FakeVo::$manager = new sys_db_Manager(_hx_qtype("microbe.vo.FakeVo"));
function microbe_vo_FakeVo_0() {
	{
		$_g = new haxe_ds_StringMap();
		$_g->set("model", _hx_anonymous(array("name" => "microbe.vo.FakeVo")));
		$_g->set("text", _hx_anonymous(array("name" => "description", "comp" => "TextInput")));
		$_g->set("titre", _hx_anonymous(array("name" => "titre", "comp" => "TextInput")));
		return $_g;
	}
}
