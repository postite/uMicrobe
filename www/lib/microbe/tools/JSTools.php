<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: src/microbe/tools/JSTools.hx
 */

namespace microbe\tools;

use \php\Boot;
use \php\_Boot\HxException;
use \haxe\Log;
use \haxe\CallStack;
use \php\_Boot\HxAnon;
use \haxe\Timer;

class JSTools {
	/**
	 * @param \Closure $fn
	 * @param int $times
	 * 
	 * @return void
	 */
	static public function retente ($fn, $times = 3) {
		#src/microbe/tools/JSTools.hx:7: lines 7-15
		if ($times === null) {
			#src/microbe/tools/JSTools.hx:7: lines 7-15
			$times = 3;
		}
		#src/microbe/tools/JSTools.hx:7: lines 7-15
		try {
			#src/microbe/tools/JSTools.hx:8: characters 13-17
			$fn();
		} catch (\Throwable $__hx__caught_e) {
			CallStack::saveExceptionTrace($__hx__caught_e);
			$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
			$msg = $__hx__real_e;
			#src/microbe/tools/JSTools.hx:10: characters 13-18
			(Log::$trace)("nope" . (\Std::string($msg)??'null'), new HxAnon([
				"fileName" => "src/microbe/tools/JSTools.hx",
				"lineNumber" => 10,
				"className" => "microbe.tools.JSTools",
				"methodName" => "retente",
			]));
			#src/microbe/tools/JSTools.hx:11: lines 11-14
			if ($times > 0) {
				#src/microbe/tools/JSTools.hx:12: characters 30-42
				$fn1 = $fn;
				#src/microbe/tools/JSTools.hx:12: characters 46-53
				$times = $times - 1;
				#src/microbe/tools/JSTools.hx:12: characters 30-42
				$times1 = $times;
				#src/microbe/tools/JSTools.hx:12: characters 13-59
				Timer::delay(function ()  use (&$times1, &$fn1) {
					#src/microbe/tools/JSTools.hx:12: characters 30-42
					JSTools::retente($fn1, $times1);
					#src/microbe/tools/JSTools.hx:12: characters 30-42
					return;
				}, 500);
			} else {
				#src/microbe/tools/JSTools.hx:14: characters 11-16
				throw (is_object($__hx__throw = $msg) && $__hx__throw instanceof \Throwable ? $__hx__throw : new HxException($__hx__throw));
			}
		}
	}
}


Boot::registerClass(JSTools::class, 'microbe.tools.JSTools');
