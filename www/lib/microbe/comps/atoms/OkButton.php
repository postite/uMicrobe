<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: src/microbe/comps/atoms/OkButton.hx
 */

namespace microbe\comps\atoms;

use \microbe\Microbe;
use \microbe\comps\Atom;
use \ufront\web\context\HttpContext;
use \php\Boot;
use \haxe\Log;
use \php\_Boot\HxAnon;

class OkButton extends Atom implements Microbe {
	/**
	 * @param mixed $d
	 * @param string $name
	 * @param \Array_hx $classes
	 * 
	 * @return void
	 */
	public function __construct ($d, $name = null, $classes = null) {
		#src/microbe/comps/atoms/OkButton.hx:4: lines 4-23
		parent::__construct($d, $name, $classes);
	}


	/**
	 * @param HttpContext $ctx
	 * 
	 * @return void
	 */
	public function execute ($ctx) {
		#src/microbe/comps/atoms/OkButton.hx:13: characters 3-8
		(Log::$trace)("i'ma a Button", new HxAnon([
			"fileName" => "src/microbe/comps/atoms/OkButton.hx",
			"lineNumber" => 13,
			"className" => "microbe.comps.atoms.OkButton",
			"methodName" => "execute",
		]));
	}


	/**
	 * @return string
	 */
	public function render () {
		#src/microbe/comps/atoms/OkButton.hx:8: characters 3-53
		$this->data->type = ($this->data->type === null ? "button" : $this->data->type);
		#src/microbe/comps/atoms/OkButton.hx:9: characters 3-142
		return "<div " . ($this->getId()??'null') . " ><input  type=\"" . ($this->data->type??'null') . "\" " . ($this->getClasses()??'null') . " value=\"" . ($this->data->v??'null') . "\"\" name=\"" . ($this->data->n??'null') . "\"><span id=\"retour\">x</span> </div>";
	}


	/**
	 * @return void
	 */
	public function stateGood () {
	}
}


Boot::registerClass(OkButton::class, 'microbe.comps.atoms.OkButton');
