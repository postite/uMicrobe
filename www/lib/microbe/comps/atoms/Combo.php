<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: src/microbe/comps/atoms/Combo.hx
 */

namespace microbe\comps\atoms;

use \microbe\Microbe;
use \microbe\comps\Atom;
use \ufront\web\context\HttpContext;
use \php\Boot;
use \haxe\Log;
use \php\_Boot\HxAnon;

class Combo extends Atom implements Microbe {
	/**
	 * @var bool
	 */
	public $multiple;
	/**
	 * @var string
	 */
	public $nullMessage;
	/**
	 * @var string
	 */
	public $onChange;
	/**
	 * @var int
	 */
	public $size;
	/**
	 * @var string
	 */
	public $value;


	/**
	 * @param mixed $d
	 * @param string $name
	 * @param \Array_hx $classes
	 * @param int $size
	 * @param bool $multiple
	 * 
	 * @return void
	 */
	public function __construct ($d, $name, $classes = null, $size = null, $multiple = false) {
		#src/microbe/comps/atoms/Combo.hx:13: lines 13-19
		if ($multiple === null) {
			#src/microbe/comps/atoms/Combo.hx:13: lines 13-19
			$multiple = false;
		}
		#src/microbe/comps/atoms/Combo.hx:14: characters 3-24
		parent::__construct($d, $name, $classes);
		#src/microbe/comps/atoms/Combo.hx:15: characters 3-17
		$this->size = $size;
		#src/microbe/comps/atoms/Combo.hx:16: characters 3-25
		$this->multiple = $multiple;
		#src/microbe/comps/atoms/Combo.hx:17: characters 3-30
		$this->nullMessage = "indefini";
		#src/microbe/comps/atoms/Combo.hx:18: characters 3-26
		$this->value = "selected";
	}


	/**
	 * @param HttpContext $ctx
	 * 
	 * @return void
	 */
	public function execute ($ctx) {
		#src/microbe/comps/atoms/Combo.hx:42: characters 3-8
		(Log::$trace)("i'm a Select", new HxAnon([
			"fileName" => "src/microbe/comps/atoms/Combo.hx",
			"lineNumber" => 42,
			"className" => "microbe.comps.atoms.Combo",
			"methodName" => "execute",
		]));
		#src/microbe/comps/atoms/Combo.hx:47: characters 3-8
		(Log::$trace)($this->data, new HxAnon([
			"fileName" => "src/microbe/comps/atoms/Combo.hx",
			"lineNumber" => 47,
			"className" => "microbe.comps.atoms.Combo",
			"methodName" => "execute",
		]));
	}


	/**
	 * @return mixed
	 */
	public function getData () {
		#src/microbe/comps/atoms/Combo.hx:56: characters 1-12
		return null;
	}


	/**
	 * @return string
	 */
	public function render () {
		#src/microbe/comps/atoms/Combo.hx:23: characters 3-14
		$s = "";
		#src/microbe/comps/atoms/Combo.hx:27: characters 3-137
		$s = ($s??'null') . (("<select name=\"" . ($this->name??'null') . "\" " . ($this->getId()??'null') . "  class=\"" . ($this->getClasses()??'null') . "\" onChange=\"" . ($this->onChange??'null') . (("\" size=\"" . ($this->size??'null') . "\" ")??'null') . ((($this->multiple ? "multiple" : ""))??'null') . ">")??'null');
		#src/microbe/comps/atoms/Combo.hx:29: lines 29-30
		if ($this->nullMessage !== "") {
			#src/microbe/comps/atoms/Combo.hx:30: characters 4-108
			$s = ($s??'null') . (("<option value=\"\" " . (((\Std::string($this->value) === "" ? "selected" : ""))??'null') . ">" . ($this->nullMessage??'null') . "</option>")??'null');
		}
		#src/microbe/comps/atoms/Combo.hx:32: lines 32-36
		if ($this->data->v !== null) {
			#src/microbe/comps/atoms/Combo.hx:33: lines 33-35
			$_g = 0;
			#src/microbe/comps/atoms/Combo.hx:33: lines 33-35
			$_g1 = $this->data->v;
			#src/microbe/comps/atoms/Combo.hx:33: lines 33-35
			while ($_g < $_g1->length) {
				#src/microbe/comps/atoms/Combo.hx:33: characters 9-12
				$row = ($_g1->arr[$_g] ?? null);
				#src/microbe/comps/atoms/Combo.hx:33: lines 33-35
				$_g = $_g + 1;
				#src/microbe/comps/atoms/Combo.hx:34: characters 5-129
				$s = ($s??'null') . (("<option value=\"" . (\Std::string($row->id)??'null') . "\" " . ((($row->inside ? "selected " : ""))??'null') . " >" . (\Std::string($row->value)??'null') . "</option>")??'null');
			}
		}
		#src/microbe/comps/atoms/Combo.hx:37: characters 3-19
		$s = ($s??'null') . "</select>";
		#src/microbe/comps/atoms/Combo.hx:39: characters 3-11
		return $s;
	}
}


Boot::registerClass(Combo::class, 'microbe.comps.atoms.Combo');
