<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 * Haxe source file: src/microbe/comps/atoms/Calendar.hx
 */

namespace microbe\comps\atoms;

use \microbe\Microbe;
use \microbe\comps\Atom;
use \ufront\web\context\HttpContext;
use \php\Boot;
use \php\_Boot\HxAnon;

class Calendar extends Atom implements Microbe {
	/**
	 * @var \Array_hx
	 */
	static public $jours;
	/**
	 * @var \Array_hx
	 */
	static public $mois;


	/**
	 * @var object
	 */
	public $calendarData;
	/**
	 * @var \Date
	 */
	public $curDate;
	/**
	 * @var int
	 */
	public $curDay;
	/**
	 * @var int
	 */
	public $curMonth;
	/**
	 * @var int
	 */
	public $curYear;
	/**
	 * @var \Date
	 */
	public $selectedDate;


	/**
	 * @param \Date $d
	 * 
	 * @return string
	 */
	static public function getJour ($d) {
		#src/microbe/comps/atoms/Calendar.hx:227: characters 3-29
		return (Calendar::$jours->arr[$d->getDay() - 1] ?? null);
	}


	/**
	 * @param \Date $d
	 * 
	 * @return string
	 */
	static public function getMois ($d) {
		#src/microbe/comps/atoms/Calendar.hx:224: characters 3-28
		return (Calendar::$mois->arr[$d->getMonth()] ?? null);
	}


	/**
	 * @param mixed $d
	 * @param string $name
	 * @param \Array_hx $classes
	 * 
	 * @return void
	 */
	public function __construct ($d, $name, $classes = null) {
		#src/microbe/comps/atoms/Calendar.hx:40: characters 3-24
		parent::__construct($d, $name, $classes);
		#src/microbe/comps/atoms/Calendar.hx:42: lines 42-45
		if ($d->v !== null) {
			#src/microbe/comps/atoms/Calendar.hx:43: characters 3-14
			$this->curDate = $d->v;
		} else {
			#src/microbe/comps/atoms/Calendar.hx:45: characters 3-21
			$this->curDate = \Date::now();
		}
		#src/microbe/comps/atoms/Calendar.hx:47: characters 3-27
		$this->curDay = $this->curDate->getDate();
		#src/microbe/comps/atoms/Calendar.hx:48: characters 3-32
		$this->curYear = $this->curDate->getFullYear();
		#src/microbe/comps/atoms/Calendar.hx:49: characters 3-30
		$this->curMonth = $this->curDate->getMonth();
		#src/microbe/comps/atoms/Calendar.hx:51: lines 51-58
		$this->calendarData = new HxAnon([
			"monthDays" => new \Array_hx(),
			"month" => $this->curMonth,
			"monthBefore" => $this->curMonth - 1,
			"monthAfter" => $this->curMonth + 1,
			"year" => $this->curYear,
			"jours" => \Array_hx::wrap([
				"lun",
				"mar",
				"mer",
				"jeu",
				"ven",
				"sam",
				"dim",
			]),
		]);
	}


	/**
	 * @param HttpContext $ctx
	 * 
	 * @return void
	 */
	public function execute ($ctx) {
	}


	/**
	 * @return mixed
	 */
	public function getData () {
		#src/microbe/comps/atoms/Calendar.hx:113: characters 3-89
		return new HxAnon([
			"n" => $this->name,
			"v" => ($this->selectedDate !== null ? $this->selectedDate : $this->curDate),
		]);
	}


	/**
	 * @return string
	 */
	public function render () {
		#src/microbe/comps/atoms/Calendar.hx:67: characters 3-28
		$buf = new \StringBuf();
		#src/microbe/comps/atoms/Calendar.hx:68: lines 68-69
		$buf->add("<div " . ($this->getId()??'null') . " class=\"calendar\">");
		#src/microbe/comps/atoms/Calendar.hx:70: lines 70-76
		$buf->add("<div class=\"nav\">\x0A\x09\x09\x09\x09<div class=\"mois before\">" . ($this->calendarData->monthBefore??'null') . "</div>\x0A\x09\x09\x09\x09<div class=\"mois\">" . ($this->calendarData->month??'null') . "</div>\x0A\x09\x09\x09\x09<div class=\"mois after\">" . ($this->calendarData->monthAfter??'null') . "</div>\x0A\x09\x09\x09\x09</div>\x0A\x09\x09\x09\x09");
		#src/microbe/comps/atoms/Calendar.hx:77: characters 4-37
		$buf->add("<div class=\"monthBox\">");
		#src/microbe/comps/atoms/Calendar.hx:78: lines 78-83
		$_g = 0;
		#src/microbe/comps/atoms/Calendar.hx:78: lines 78-83
		$_g1 = $this->calendarData->jours;
		#src/microbe/comps/atoms/Calendar.hx:78: lines 78-83
		while ($_g < $_g1->length) {
			#src/microbe/comps/atoms/Calendar.hx:78: characters 7-11
			$jour = ($_g1->arr[$_g] ?? null);
			#src/microbe/comps/atoms/Calendar.hx:78: lines 78-83
			$_g = $_g + 1;
			#src/microbe/comps/atoms/Calendar.hx:79: lines 79-83
			$buf->add("\x0A\x09\x09\x09\x09<div class=\"cell jours\">\x0A\x09\x09\x09\x09" . ($jour??'null') . "\x0A\x09\x09\x09\x09</div>");
		}

		#src/microbe/comps/atoms/Calendar.hx:84: lines 84-89
		$_g2 = 0;
		#src/microbe/comps/atoms/Calendar.hx:84: lines 84-89
		$_g11 = $this->calendarData->monthDays;
		#src/microbe/comps/atoms/Calendar.hx:84: lines 84-89
		while ($_g2 < $_g11->length) {
			#src/microbe/comps/atoms/Calendar.hx:84: characters 7-10
			$day = ($_g11->arr[$_g2] ?? null);
			#src/microbe/comps/atoms/Calendar.hx:84: lines 84-89
			$_g2 = $_g2 + 1;
			#src/microbe/comps/atoms/Calendar.hx:85: lines 85-89
			$buf->add("\x0A\x09\x09\x09\x09<div class=\"cell\" data-id=\"" . ($day??'null') . "\">\x0A\x09\x09\x09\x09" . ((($day !== 0 ? \Std::string($day) : ""))??'null') . "\x0A\x09\x09\x09\x09</div>");
		}

		#src/microbe/comps/atoms/Calendar.hx:91: characters 3-20
		$buf->add("</div>");
		#src/microbe/comps/atoms/Calendar.hx:92: characters 3-20
		$buf->add("</div>");
		#src/microbe/comps/atoms/Calendar.hx:93: characters 3-24
		return $buf->b;
	}


	/**
	 * @param mixed $d
	 * 
	 * @return Calendar
	 */
	public function setData ($d) {
		#src/microbe/comps/atoms/Calendar.hx:108: characters 3-14
		return $this;
	}


	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


self::$mois = \Array_hx::wrap([
	"Janvier",
	"Fevrier",
	"Mars",
	"Avril",
	"Mai",
	"Juin",
	"Juillet",
	"Aout",
	"Septembre",
	"Octobre",
	"Novembre",
	"DÃ©cembre",
]);
self::$jours = \Array_hx::wrap([
	"lundi",
	"mardi",
	"mercredi",
	"jeudi",
	"vendredi",
	"samedi",
	"dimanche",
]);
	}
}


Boot::registerClass(Calendar::class, 'microbe.comps.atoms.Calendar');
Calendar::__hx__init();
