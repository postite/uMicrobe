<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: src/microbe/comps/atoms/MediumEditor.hx
 */

namespace microbe\comps\atoms;

use \microbe\Microbe;
use \microbe\comps\Atom;
use \ufront\web\context\HttpContext;
use \php\Boot;
use \haxe\Log;
use \php\_Boot\HxAnon;

class MediumEditor extends Atom implements Microbe {
	/**
	 * @param mixed $d
	 * @param string $name
	 * @param \Array_hx $classes
	 * 
	 * @return void
	 */
	public function __construct ($d, $name = null, $classes = null) {
		#src/microbe/comps/atoms/MediumEditor.hx:12: lines 12-156
		parent::__construct($d, $name, $classes);
	}


	/**
	 * @param HttpContext $ctx
	 * 
	 * @return void
	 */
	public function execute ($ctx) {
		#src/microbe/comps/atoms/MediumEditor.hx:27: characters 3-8
		(Log::$trace)("i'ma a meditor", new HxAnon([
			"fileName" => "src/microbe/comps/atoms/MediumEditor.hx",
			"lineNumber" => 27,
			"className" => "microbe.comps.atoms.MediumEditor",
			"methodName" => "execute",
		]));
	}


	/**
	 * @return mixed
	 */
	public function getData () {
		#src/microbe/comps/atoms/MediumEditor.hx:63: characters 1-12
		return null;
	}


	/**
	 * @return string
	 */
	public function render () {
		#src/microbe/comps/atoms/MediumEditor.hx:20: characters 3-23
		$this->addClass("editable");
		#src/microbe/comps/atoms/MediumEditor.hx:21: lines 21-22
		return "<div " . ($this->getId()??'null') . " " . ($this->getClasses()??'null') . " name=" . ($this->data->n??'null') . ">" . ($this->data->v??'null') . "</div>\x0A\x09\x09";
	}
}


Boot::registerClass(MediumEditor::class, 'microbe.comps.atoms.MediumEditor');
