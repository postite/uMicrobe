<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: src/microbe/comps/molecules/Login.hx
 */

namespace microbe\comps\molecules;

use \microbe\Microbe;
use \ufront\web\context\HttpContext;
use \microbe\comps\atoms\Button;
use \php\Boot;
use \tink\core\MPair;
use \haxe\Log;
use \microbe\comps\Molecule;
use \php\_Boot\HxAnon;

class Login extends Molecule implements Microbe {
	/**
	 * @param mixed $d
	 * @param \Array_hx $classes
	 * 
	 * @return void
	 */
	public function __construct ($d, $classes = null) {
		#src/microbe/comps/molecules/Login.hx:6: lines 6-31
		parent::__construct($d, $classes);
	}


	/**
	 * @param HttpContext $ctx
	 * 
	 * @return void
	 */
	public function execute ($ctx) {
		#src/microbe/comps/molecules/Login.hx:25: characters 3-8
		(Log::$trace)("i'm a Login", new HxAnon([
			"fileName" => "src/microbe/comps/molecules/Login.hx",
			"lineNumber" => 25,
			"className" => "microbe.comps.molecules.Login",
			"methodName" => "execute",
		]));
	}


	/**
	 * @return string
	 */
	public function render () {
		#src/microbe/comps/molecules/Login.hx:15: characters 26-51
		$this1 = new MPair("pseudo", $this->data->a);
		#src/microbe/comps/molecules/Login.hx:15: characters 3-62
		$t1 = (new LabelField($this1))->render();
		#src/microbe/comps/molecules/Login.hx:16: characters 25-48
		$this11 = new MPair("pass", $this->data->b);
		#src/microbe/comps/molecules/Login.hx:16: characters 3-59
		$t2 = (new LabelPass($this11))->render();
		#src/microbe/comps/molecules/Login.hx:17: characters 3-74
		$b = (new Button(new HxAnon([
			"v" => "ok",
			"type" => "submit",
			"n" => "butt",
		]), null, \Array_hx::wrap(["normal"])))->render();
		#src/microbe/comps/molecules/Login.hx:20: characters 3-51
		return "<div " . ($this->getClasses()??'null') . "> " . ($t1??'null') . " " . ($t2??'null') . " " . ($b??'null') . " </div>";
	}
}


Boot::registerClass(Login::class, 'microbe.comps.molecules.Login');
