<?php

// Generated by Haxe 3.4.7
class microbe_comps_molecules_Login extends microbe_comps_Molecule implements microbe_Microbe{
	public function __construct($d, $classes = null) { if(!php_Boot::$skip_constructor) {
		$GLOBALS['%s']->push("microbe.comps.molecules.Login::new");
		$__hx__spos = $GLOBALS['%s']->length;
		parent::__construct($d,$classes);
		$GLOBALS['%s']->pop();
	}}
	public function render() {
		$GLOBALS['%s']->push("microbe.comps.molecules.Login::render");
		$__hx__spos = $GLOBALS['%s']->length;
		$this1 = new tink_core_MPair("pseudo", $this->data->a);
		$t1 = _hx_deref(new microbe_comps_molecules_LabelField($this1, null))->render();
		$this2 = new tink_core_MPair("pass", $this->data->b);
		$t2 = _hx_deref(new microbe_comps_molecules_LabelPass($this2, null))->render();
		$b = _hx_deref(new microbe_comps_atoms_Button(_hx_anonymous(array("v" => "ok", "type" => "submit", "n" => "butt")), null, (new _hx_array(array("normal")))))->render();
		{
			$tmp = "<div " . _hx_string_or_null($this->getClasses()) . "> " . _hx_string_or_null($t1) . " " . _hx_string_or_null($t2) . " " . _hx_string_or_null($b) . " </div>";
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	public function execute($ctx) {
		$GLOBALS['%s']->push("microbe.comps.molecules.Login::execute");
		$__hx__spos = $GLOBALS['%s']->length;
		haxe_Log::trace("i'm a Login", _hx_anonymous(array("fileName" => "Login.hx", "lineNumber" => 25, "className" => "microbe.comps.molecules.Login", "methodName" => "execute")));
		$GLOBALS['%s']->pop();
	}
	function __toString() { return 'microbe.comps.molecules.Login'; }
}
