<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: src/microbe/comps/Wrapper.hx
 */

namespace microbe\comps;

use \haxe\ds\StringMap;
use \php\Boot;
use \php\_Boot\HxException;
use \microbe\IMicrobeWrapper;
use \ufront\core\Uuid;

class Wrapper implements IMicrobeWrapper {
	/**
	 * @var \Array_hx
	 */
	public $classes;
	/**
	 * @var mixed
	 */
	public $data;
	/**
	 * @var string
	 */
	public $dataId;
	/**
	 * @var string
	 */
	public $formUrl;
	/**
	 * @var string
	 */
	public $id;
	/**
	 * @var string
	 */
	public $name;


	/**
	 * @param mixed $d
	 * @param string $name
	 * @param \Array_hx $classes
	 * 
	 * @return void
	 */
	public function __construct ($d, $name = null, $classes = null) {
		#src/microbe/comps/Wrapper.hx:21: characters 2-13
		$this->data = $d;
		#src/microbe/comps/Wrapper.hx:22: characters 2-16
		$this->name = $name;
		#src/microbe/comps/Wrapper.hx:23: characters 2-27
		$this->id = "A" . (Uuid::create()??'null');
		#src/microbe/comps/Wrapper.hx:24: characters 2-53
		$this->classes = ($classes !== null ? $classes : \Array_hx::wrap(["wrapper"]));
	}


	/**
	 * @param string $cl
	 * 
	 * @return void
	 */
	public function addClass ($cl) {
		#src/microbe/comps/Wrapper.hx:59: characters 2-23
		$_this = $this->classes;
		#src/microbe/comps/Wrapper.hx:59: characters 2-23
		$_this->arr[$_this->length] = $cl;
		#src/microbe/comps/Wrapper.hx:59: characters 2-23
		++$_this->length;
	}


	/**
	 * @return StringMap
	 */
	public function gatherData () {
		#src/microbe/comps/Wrapper.hx:38: characters 3-8
		throw new HxException("abstract method");
	}


	/**
	 * @return string
	 */
	public function getClasses () {
		#src/microbe/comps/Wrapper.hx:49: characters 2-26
		$c = $this->classes->join(" ");
		#src/microbe/comps/Wrapper.hx:50: characters 2-21
		return "class=\"" . ($c??'null') . "\"";
	}


	/**
	 * @return string
	 */
	public function getId () {
		#src/microbe/comps/Wrapper.hx:45: characters 2-19
		return "id=\"" . ($this->id??'null') . "\"";
	}


	/**
	 * @return string
	 */
	public function render () {
		#src/microbe/comps/Wrapper.hx:41: characters 3-12
		return "";
	}


	/**
	 * @param \Array_hx $classes
	 * 
	 * @return void
	 */
	public function setClasses ($classes) {
		#src/microbe/comps/Wrapper.hx:56: characters 2-22
		$this->classes = $classes;
	}


	/**
	 * @param mixed $d
	 * 
	 * @return IMicrobeWrapper
	 */
	public function setData ($d) {
		#src/microbe/comps/Wrapper.hx:33: characters 3-14
		$this->data = $d;
		#src/microbe/comps/Wrapper.hx:35: characters 3-19
		return $this;
	}


	/**
	 * @param string $url
	 * 
	 * @return void
	 */
	public function setFormUrl ($url) {
		#src/microbe/comps/Wrapper.hx:29: characters 3-19
		$this->formUrl = $url;
	}
}


Boot::registerClass(Wrapper::class, 'microbe.comps.Wrapper');
