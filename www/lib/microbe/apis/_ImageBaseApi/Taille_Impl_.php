<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: src/microbe/apis/ImageBaseApi.hx
 */

namespace microbe\apis\_ImageBaseApi;

use \php\Boot;
use \php\_Boot\HxAnon;

final class Taille_Impl_ {
	/**
	 * @var object
	 */
	static public $Long;
	/**
	 * @var object
	 */
	static public $Normal;
	/**
	 * @var object
	 */
	static public $Screen;
	/**
	 * @var object
	 */
	static public $Square;


	/**
	 * @param object $i
	 * 
	 * @return object
	 */
	static public function _new ($i) {
		#src/microbe/apis/ImageBaseApi.hx:31: character 12
		$this1 = $i;
		#src/microbe/apis/ImageBaseApi.hx:31: character 12
		return $this1;
	}


	/**
	 * @param object $t
	 * 
	 * @return string
	 */
	static public function toName ($t) {
		#src/microbe/apis/ImageBaseApi.hx:41: characters 8-22
		return ($t->n??'null') . "_";
	}


	/**
	 * @param object $t
	 * 
	 * @return string
	 */
	static public function toStr ($t) {
		#src/microbe/apis/ImageBaseApi.hx:37: characters 8-31
		return "" . ($t->w??'null') . "*" . ($t->h??'null') . "_";
	}


	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


self::$Square = new HxAnon([
	"n" => "Square",
	"w" => 193,
	"h" => 193,
]);
self::$Long = new HxAnon([
	"n" => "Long",
	"w" => 600,
	"h" => 300,
	"crop" => false,
]);
self::$Screen = new HxAnon([
	"n" => "Screen",
	"w" => 800,
	"h" => 600,
	"crop" => false,
]);
self::$Normal = new HxAnon([
	"n" => "Normal",
	"w" => 0,
	"h" => 0,
	"crop" => false,
]);
	}
}


Boot::registerClass(Taille_Impl_::class, 'microbe.apis._ImageBaseApi.Taille_Impl_');
Taille_Impl_::__hx__init();
