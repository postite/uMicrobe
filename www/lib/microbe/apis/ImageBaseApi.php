<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: src/microbe/apis/ImageBaseApi.hx
 */

namespace microbe\apis;

use \haxe\io\Path;
use \ufront\core\SurpriseTools;
use \tink\core\Outcome;
use \image\Engine;
use \php\Boot;
use \tink\core\_Future\FutureObject;
use \image\Image;
use \microbe\apis\_ImageBaseApi\Taille_Impl_;
use \ufront\api\UFApi;
use \php\_Boot\HxAnon;
use \sys\FileSystem;

class ImageBaseApi extends UFApi {


	/**
	 * @param object $t
	 * 
	 * @return string
	 */
	static public function strTaille ($t) {
		#src/microbe/apis/ImageBaseApi.hx:49: characters 3-26
		return "" . ($t->w??'null') . "*" . ($t->h??'null') . "_";
	}


	/**
	 * @return void
	 */
	public function __construct () {
		#src/microbe/apis/ImageBaseApi.hx:46: lines 46-91
		parent::__construct();
	}


	/**
	 * @param string $path
	 * 
	 * @return float
	 */
	public function getModTime ($path) {
		#src/microbe/apis/ImageBaseApi.hx:86: characters 3-49
		return FileSystem::stat($path)->mtime->getTime();
	}


	/**
	 * @param string $path
	 * @param object $taille
	 * 
	 * @return FutureObject
	 */
	public function getResizedImage ($path, $taille = null) {
		#src/microbe/apis/ImageBaseApi.hx:52: characters 3-40
		if ($taille === null) {
			#src/microbe/apis/ImageBaseApi.hx:52: characters 20-40
			$taille = Taille_Impl_::$Square;
		}
		#src/microbe/apis/ImageBaseApi.hx:53: lines 53-54
		if (((\Array_hx::wrap([
			"gif",
			"jpg",
			"jpeg",
			"png",
		]))->indexOf(strtolower(Path::extension($path))) === -1) || ($taille === Taille_Impl_::$Normal)) {
			#src/microbe/apis/ImageBaseApi.hx:54: characters 4-32
			return SurpriseTools::asGoodSurprise($path);
		}
		#src/microbe/apis/ImageBaseApi.hx:63: characters 3-59
		$dir = (Path::addTrailingSlash(Path::directory($path))??'null') . "thumb";
		#src/microbe/apis/ImageBaseApi.hx:64: characters 3-75
		$thumbPath = "." . ($dir??'null') . "/" . (Taille_Impl_::toName($taille)??'null') . (Path::withoutDirectory($path)??'null');
		#src/microbe/apis/ImageBaseApi.hx:65: characters 3-77
		$relativeThumbPath = ($dir??'null') . "/" . (Taille_Impl_::toName($taille)??'null') . (Path::withoutDirectory($path)??'null');
		#src/microbe/apis/ImageBaseApi.hx:67: lines 67-81
		if ((file_exists($thumbPath) === false) || ($this->getModTime("." . ($path??'null')) > $this->getModTime($thumbPath))) {
			#src/microbe/apis/ImageBaseApi.hx:68: characters 5-42
			$path1 = "." . ($dir??'null');
			#src/microbe/apis/ImageBaseApi.hx:68: characters 5-42
			if (!is_dir($path1)) {
				#src/microbe/apis/ImageBaseApi.hx:68: characters 5-42
				mkdir($path1, 493, true);
			}

			#src/microbe/apis/ImageBaseApi.hx:70: lines 70-79
			$ret = Image::resize("." . ($path??'null'), $thumbPath, new HxAnon([
				"engine" => Engine::GD(),
				"width" => $taille->w,
				"height" => $taille->h,
				"crop" => $taille->crop,
				"focus" => $taille->focus,
			]))->map(function ($res)  use (&$relativeThumbPath) {
				#src/microbe/apis/ImageBaseApi.hx:71: lines 71-79
				switch ($res->index) {
					case 0:
						#src/microbe/apis/ImageBaseApi.hx:75: characters 7-33
						return Outcome::Success($relativeThumbPath);
						break;
					case 1:
						#src/microbe/apis/ImageBaseApi.hx:76: characters 20-25
						$error = $res->params[0];
						#src/microbe/apis/ImageBaseApi.hx:78: characters 7-21
						return Outcome::Failure($error);
						break;
				}
			});
			#src/microbe/apis/ImageBaseApi.hx:70: lines 70-79
			return $ret->gather();
		}
		#src/microbe/apis/ImageBaseApi.hx:83: characters 4-45
		return SurpriseTools::asGoodSurprise($relativeThumbPath);
	}


	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


	}
}


Boot::registerClass(ImageBaseApi::class, 'microbe.apis.ImageBaseApi');
Boot::registerMeta(ImageBaseApi::class, new HxAnon([
	"obj" => new HxAnon(["asyncApi" => \Array_hx::wrap(["microbe.apis.ImageBaseApiAsync"])]),
	"fields" => new HxAnon(["getResizedImage" => new HxAnon(["returnType" => \Array_hx::wrap([3])])]),
]));
ImageBaseApi::__hx__init();
