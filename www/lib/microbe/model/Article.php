<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: src/microbe/model/Article.hx
 */

namespace microbe\model;

use \ufront\db\_ValidationErrors\ValidationErrors_Impl_;
use \haxe\ds\StringMap;
use \php\Boot;
use \sys\db\Manager;
use \ufront\db\Object_hx;
use \php\_Boot\HxAnon;

class Article extends Object_hx {
	/**
	 * @var StringMap
	 */
	static public $formule;
	/**
	 * @var Manager
	 */
	static public $manager;


	/**
	 * @var string
	 */
	public $content;
	/**
	 * @var string
	 */
	public $src;
	/**
	 * @var string
	 */
	public $titre;


	/**
	 * @return void
	 */
	public function __construct () {
		#src/microbe/model/Article.hx:3: lines 3-16
		parent::__construct();
	}


	/**
	 * @return void
	 */
	public function _validationsFromMacros () {
		#/usr/local/lib/haxe/lib/ufront-orm/1,1,0/src/ufront/db/DBMacros.hx:785: characters 6-36
		parent::_validationsFromMacros();
		#/usr/local/lib/haxe/lib/ufront-orm/1,1,0/src/ufront/db/DBMacros.hx:151: characters 32-126
		if ($this->titre === null) {
			#/usr/local/lib/haxe/lib/ufront-orm/1,1,0/src/ufront/db/DBMacros.hx:151: characters 56-126
			ValidationErrors_Impl_::set($this->validationErrors, "titre", "titre" . " is a required field.");
		}
		#/usr/local/lib/haxe/lib/ufront-orm/1,1,0/src/ufront/db/DBMacros.hx:151: characters 32-126
		if ($this->content === null) {
			#/usr/local/lib/haxe/lib/ufront-orm/1,1,0/src/ufront/db/DBMacros.hx:151: characters 56-126
			ValidationErrors_Impl_::set($this->validationErrors, "content", "content" . " is a required field.");
		}
	}


	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


$_g = new StringMap();
$_g->data["model"] = new HxAnon(["name" => "microbe.model.Article"]);
$_g->data["titre"] = new HxAnon([
	"name" => "titre",
	"comp" => "TextInput",
]);
$_g->data["src"] = new HxAnon([
	"name" => "illustration",
	"comp" => "UpApiComp",
]);
$_g->data["content"] = new HxAnon([
	"name" => "content",
	"comp" => "MediumEditor",
]);
self::$formule = $_g;
self::$manager = new Manager(Boot::getClass(Article::class));
	}
}


Boot::registerClass(Article::class, 'microbe.model.Article');
Boot::registerMeta(Article::class, new HxAnon([
	"obj" => new HxAnon([
		"ufRelationships" => null,
		"hxSerializationFields" => \Array_hx::wrap([
			"titre",
			"src",
			"content",
			"id",
			"created",
			"modified",
		]),
		"rtti" => \Array_hx::wrap(["oy7:hfieldsby8:modifiedoy4:nameR1y1:tjy17:sys.db.RecordType:11:0y6:isNullfgy7:createdoR2R6R3r3R5fgy7:contentoR2R7R3jR4:15:0R5fgy5:titreoR2R8R3jR4:9:1i256R5fgy3:srcoR2R9R3jR4:9:1i256R5tgy2:idoR2R10R3jR4:0:0R5fghR2y7:Articley9:relationsahy7:indexesahy6:fieldsar11r4r2r7r9r5hy3:keyaR10hg"]),
	]),
	"fields" => new HxAnon([
		"titre" => new HxAnon(["microbe" => \Array_hx::wrap([
			"titre",
			"TextInput",
		])]),
		"src" => new HxAnon(["microbe" => \Array_hx::wrap([
			"illustration",
			"UpApiComp",
		])]),
		"content" => new HxAnon(["microbe" => \Array_hx::wrap([
			"content",
			"MediumEditor",
		])]),
	]),
]));
Article::__hx__init();
