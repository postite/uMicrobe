<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/minject/git/src/lib/minject/provider/ValueProvider.hx
 */

namespace minject\provider;

use \php\Boot;
use \minject\Injector;

class ValueProvider implements DependencyProvider {
	/**
	 * @var mixed
	 */
	public $value;


	/**
	 * @param mixed $value
	 * 
	 * @return void
	 */
	public function __construct ($value) {
		#/usr/local/lib/haxe/lib/minject/git/src/lib/minject/provider/ValueProvider.hx:13: characters 3-21
		$this->value = $value;
	}


	/**
	 * @param Injector $injector
	 * 
	 * @return mixed
	 */
	public function getValue ($injector) {
		#/usr/local/lib/haxe/lib/minject/git/src/lib/minject/provider/ValueProvider.hx:18: characters 3-15
		return $this->value;
	}


	/**
	 * @return string
	 */
	public function toString () {
		#/usr/local/lib/haxe/lib/minject/git/src/lib/minject/provider/ValueProvider.hx:24: characters 3-66
		return "instance of " . (\Type::getClassName(\Type::getClass($this->value))??'null');
	}


	public function __toString() {
		return $this->toString();
	}
}


Boot::registerClass(ValueProvider::class, 'minject.provider.ValueProvider');
