<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: src/test/app/Apis.hx
 */

namespace app;

use \microbe\apis\ImageBaseApi;
use \microbe\apis\UpApi;
use \microbe\apis\MicrobialApi;
use \php\Boot;
use \ufront\api\UFApiContext;
use \php\_Boot\HxAnon;

class Apis extends UFApiContext {


	/**
	 * @var ImageBaseApi
	 */
	public $imagebase;
	/**
	 * @var MicrobialApi
	 */
	public $microbe;
	/**
	 * @var UpApi
	 */
	public $upapi;


	/**
	 * @return void
	 */
	public function __construct () {
		#src/test/app/Apis.hx:7: lines 7-14
		parent::__construct();
	}


	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


	}
}


Boot::registerClass(Apis::class, 'app.Apis');
Boot::registerMeta(Apis::class, new HxAnon(["obj" => new HxAnon([
	"rtti" => \Array_hx::wrap([
		\Array_hx::wrap([
			"imagebase",
			"microbe.apis.ImageBaseApi",
			"",
		]),
		\Array_hx::wrap([
			"microbe",
			"microbe.apis.MicrobialApi",
			"",
		]),
		\Array_hx::wrap([
			"upapi",
			"microbe.apis.UpApi",
			"",
		]),
	]),
	"apiList" => \Array_hx::wrap([
		"microbe.apis.ImageBaseApi",
		"microbe.apis.MicrobialApi",
		"microbe.apis.UpApi",
	]),
])]));
Apis::__hx__init();
