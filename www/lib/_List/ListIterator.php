<?php
/**
 * Generated by Haxe 3.4.7
 * Haxe source file: /usr/local/lib/haxe/std/List.hx
 */

namespace _List;

use \php\Boot;

class ListIterator {
	/**
	 * @var ListNode
	 */
	public $head;


	/**
	 * @param ListNode $head
	 * 
	 * @return void
	 */
	public function __construct ($head) {
		#/usr/local/lib/haxe/std/List.hx:269: characters 2-18
		$this->head = $head;
	}


	/**
	 * @return bool
	 */
	public function hasNext () {
		#/usr/local/lib/haxe/std/List.hx:273: characters 2-21
		return $this->head !== null;
	}


	/**
	 * @return mixed
	 */
	public function next () {
		#/usr/local/lib/haxe/std/List.hx:277: characters 2-22
		$val = $this->head->item;
		#/usr/local/lib/haxe/std/List.hx:278: characters 2-18
		$this->head = $this->head->next;
		#/usr/local/lib/haxe/std/List.hx:279: characters 2-12
		return $val;
	}
}


Boot::registerClass(ListIterator::class, '_List.ListIterator');
