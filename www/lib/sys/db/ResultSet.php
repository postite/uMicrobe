<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/std/sys/db/ResultSet.hx
 */

namespace sys\db;

use \php\Boot;
use \haxe\ds\List_hx;
use \php\_Boot\HxAnon;

interface ResultSet {
	/**
	 * @return \Array_hx
	 */
	public function getFieldsNames () ;


	/**
	 * @param int $n
	 * 
	 * @return float
	 */
	public function getFloatResult ($n) ;


	/**
	 * @param int $n
	 * 
	 * @return int
	 */
	public function getIntResult ($n) ;


	/**
	 * @param int $n
	 * 
	 * @return string
	 */
	public function getResult ($n) ;


	/**
	 * @return int
	 */
	public function get_length () ;


	/**
	 * @return int
	 */
	public function get_nfields () ;


	/**
	 * @return bool
	 */
	public function hasNext () ;


	/**
	 * @return mixed
	 */
	public function next () ;


	/**
	 * @return List_hx
	 */
	public function results () ;
}


Boot::registerClass(ResultSet::class, 'sys.db.ResultSet');
Boot::registerMeta(ResultSet::class, new HxAnon(["obj" => new HxAnon(["interface" => null])]));
Boot::registerGetters('sys\\db\\ResultSet', [
	'nfields' => true,
	'length' => true
]);
