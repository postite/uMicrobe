<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx
 */

namespace sys\io;

use \haxe\io\Eof;
use \php\Boot;
use \php\_Boot\HxException;
use \haxe\io\Input;
use \haxe\io\Bytes;
use \haxe\io\_BytesData\Container;
use \haxe\io\Error;

/**
 * Use `sys.io.File.read` to create a `FileInput`.
 */
class FileInput extends Input {
	/**
	 * @var mixed
	 */
	public $__f;


	/**
	 * @param mixed $f
	 * 
	 * @return void
	 */
	public function __construct ($f) {
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:37: characters 3-10
		$this->__f = $f;
	}


	/**
	 * @return void
	 */
	public function close () {
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:57: characters 3-16
		parent::close();
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:58: characters 3-30
		if ($this->__f !== null) {
			#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:58: characters 19-30
			fclose($this->__f);
		}
	}


	/**
	 * @return bool
	 */
	public function eof () {
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:79: characters 3-19
		return feof($this->__f);
	}


	/**
	 * @return int
	 */
	public function readByte () {
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:41: characters 3-25
		$r = fread($this->__f, 1);
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:42: characters 3-22
		if (feof($this->__f)) {
			#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:42: characters 17-22
			throw new HxException(new Eof());
		}
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:43: characters 3-23
		if ($r === false) {
			#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:43: characters 18-23
			throw new HxException(Error::Custom("An error occurred"));
		}
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:44: characters 3-16
		return ord($r);
	}


	/**
	 * @param Bytes $s
	 * @param int $p
	 * @param int $l
	 * 
	 * @return int
	 */
	public function readBytes ($s, $p, $l) {
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:48: characters 3-22
		if (feof($this->__f)) {
			#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:48: characters 17-22
			throw new HxException(new Eof());
		}
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:49: characters 3-25
		$r = fread($this->__f, $l);
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:50: characters 3-23
		if ($r === false) {
			#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:50: characters 18-23
			throw new HxException(Error::Custom("An error occurred"));
		}
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:51: characters 11-28
		$r1 = strlen($r);
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:51: characters 3-29
		$b = new Bytes($r1, new Container($r));
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:52: characters 3-37
		$len = strlen($r);
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:52: characters 3-37
		if (($p < 0) || ($len < 0) || (($p + $len) > $s->length) || ($len > $b->length)) {
			#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:52: characters 3-37
			throw new HxException(Error::OutsideBounds());
		} else {
			#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:52: characters 3-37
			$this1 = $s->b;
			#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:52: characters 3-37
			$src = $b->b;
			#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:52: characters 3-37
			$this1->s = ((substr($this1->s, 0, $p) . substr($src->s, 0, $len)) . substr($this1->s, $p + $len));
		}

		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:53: characters 3-27
		return strlen($r);
	}


	/**
	 * @return string
	 */
	public function readLine () {
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:83: characters 3-22
		$r = fgets($this->__f);
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:84: characters 3-24
		if (false === $r) {
			#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:84: characters 19-24
			throw new HxException(new Eof());
		}
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:85: characters 3-26
		return rtrim($r, "\x0D\x0A");
	}


	/**
	 * @param int $p
	 * @param FileSeek $pos
	 * 
	 * @return void
	 */
	public function seek ($p, $pos) {
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:62: characters 3-9
		$w = null;
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:63: lines 63-67
		switch ($pos->index) {
			case 0:
				#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:64: characters 20-32
				$w = SEEK_SET;
				break;
			case 1:
				#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:65: characters 20-32
				$w = SEEK_CUR;
				break;
			case 2:
				#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:66: characters 20-32
				$w = SEEK_END;
				break;
		}
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:68: characters 3-28
		$r = fseek($this->__f, $p, $w);
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:69: characters 3-23
		if ($r === false) {
			#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:69: characters 18-23
			throw new HxException(Error::Custom("An error occurred"));
		}
	}


	/**
	 * @return int
	 */
	public function tell () {
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:73: characters 3-22
		$r = ftell($this->__f);
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:74: characters 3-23
		if ($r === false) {
			#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:74: characters 18-23
			throw new HxException(Error::Custom("An error occurred"));
		}
		#/usr/local/lib/haxe/std/php/_std/sys/io/FileInput.hx:75: characters 3-16
		return $r;
	}
}


Boot::registerClass(FileInput::class, 'sys.io.FileInput');
