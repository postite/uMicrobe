<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/std/php/_std/sys/io/Process.hx
 */

namespace sys\io\_Process;

use \haxe\io\Eof;
use \haxe\io\Output;
use \php\Boot;
use \php\_Boot\HxException;
use \haxe\io\Bytes;
use \haxe\io\Error;

class WritablePipe extends Output {
	/**
	 * @var mixed
	 */
	public $pipe;
	/**
	 * @var Bytes
	 */
	public $tmpBytes;


	/**
	 * @param mixed $pipe
	 * 
	 * @return void
	 */
	public function __construct ($pipe) {
		#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:78: characters 3-19
		$this->pipe = $pipe;
		#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:79: characters 3-28
		$this->tmpBytes = Bytes::alloc(1);
	}


	/**
	 * @return void
	 */
	public function close () {
		#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:83: characters 3-16
		fclose($this->pipe);
	}


	/**
	 * @param int $c
	 * 
	 * @return void
	 */
	public function writeByte ($c) {
		#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:87: characters 3-21
		$this1 = $this->tmpBytes->b;
		#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:87: characters 3-21
		$this1->s = substr_replace($this1->s, chr($c), 0, 1);

		#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:88: characters 3-29
		$this->writeBytes($this->tmpBytes, 0, 1);
	}


	/**
	 * @param Bytes $b
	 * @param int $pos
	 * @param int $l
	 * 
	 * @return int
	 */
	public function writeBytes ($b, $pos, $l) {
		#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:92: characters 11-30
		$s = null;
		#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:92: characters 11-30
		if (($pos < 0) || ($l < 0) || (($pos + $l) > $b->length)) {
			#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:92: characters 11-30
			throw new HxException(Error::OutsideBounds());
		} else {
			#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:92: characters 11-30
			$s = substr($b->b->s, $pos, $l);
		}
		#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:92: characters 3-31
		$s1 = $s;
		#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:93: characters 3-24
		if (feof($this->pipe)) {
			#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:93: characters 19-24
			throw new HxException(new Eof());
		}
		#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:95: characters 3-42
		$result = fwrite($this->pipe, $s1, $l);
		#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:96: characters 3-28
		if ($result === false) {
			#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:96: characters 23-28
			throw new HxException(Error::Custom("Failed to write to process input"));
		}
		#/usr/local/lib/haxe/std/php/_std/sys/io/Process.hx:97: characters 3-16
		return $result;
	}
}


Boot::registerClass(WritablePipe::class, 'sys.io._Process.WritablePipe');
