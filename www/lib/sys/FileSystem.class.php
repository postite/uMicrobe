<?php

// Generated by Haxe 3.4.7
class sys_FileSystem {
	public function __construct(){}
	static function stat($path) {
		$GLOBALS['%s']->push("sys.FileSystem::stat");
		$__hx__spos = $GLOBALS['%s']->length;
		$fstat = stat($path);;
		$tmp = $fstat['gid'];
		$tmp1 = $fstat['uid'];
		$tmp2 = Date::fromTime($fstat['atime'] * 1000);
		$tmp3 = Date::fromTime($fstat['mtime'] * 1000);
		$tmp4 = Date::fromTime($fstat['ctime'] * 1000);
		$tmp5 = $fstat['dev'];
		$tmp6 = $fstat['ino'];
		$tmp7 = $fstat['nlink'];
		$tmp8 = $fstat['rdev'];
		$tmp9 = $fstat['size'];
		{
			$tmp10 = _hx_anonymous(array("gid" => $tmp, "uid" => $tmp1, "atime" => $tmp2, "mtime" => $tmp3, "ctime" => $tmp4, "dev" => $tmp5, "ino" => $tmp6, "nlink" => $tmp7, "rdev" => $tmp8, "size" => $tmp9, "mode" => $fstat['mode']));
			$GLOBALS['%s']->pop();
			return $tmp10;
		}
		$GLOBALS['%s']->pop();
	}
	static function absolutePath($relPath) {
		$GLOBALS['%s']->push("sys.FileSystem::absolutePath");
		$__hx__spos = $GLOBALS['%s']->length;
		if(haxe_io_Path::isAbsolute($relPath)) {
			$GLOBALS['%s']->pop();
			return $relPath;
		}
		{
			$tmp = haxe_io_Path::join((new _hx_array(array(Sys::getCwd(), $relPath))));
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function readDirectory($path) {
		$GLOBALS['%s']->push("sys.FileSystem::readDirectory");
		$__hx__spos = $GLOBALS['%s']->length;
		$l = array();
		$dh = opendir($path);
        while (($file = readdir($dh)) !== false) if("." != $file && ".." != $file) $l[] = $file;
        closedir($dh);;
		{
			$tmp = new _hx_array($l);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	function __toString() { return 'sys.FileSystem'; }
}
