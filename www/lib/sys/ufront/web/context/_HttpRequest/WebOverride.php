<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx
 */

namespace sys\ufront\web\context\_HttpRequest;

use \php\Boot;
use \php\_Boot\HxException;
use \php\_NativeArray\NativeArrayIterator;
use \php\Lib;
use \haxe\io\Bytes;
use \haxe\io\_BytesData\Container;

class WebOverride {
	/**
	 * Parse the multipart data. Call `onPart` when a new part is found
	 * with the part name and the filename if present
	 * and `onData` when some part data is readed. You can this way
	 * directly save the data on hard drive in the case of a file upload.
	 * 
	 * @param \Closure $onPart
	 * @param \Closure $onData
	 * 
	 * @return void
	 */
	static public function parseMultipart ($onPart, $onData) {
		#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:304: characters 3-47
		$a = $_POST;
		#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:305: lines 305-306
		if (get_magic_quotes_gpc()) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:306: characters 4-98
			reset($a); while(list($k, $v) = each($a)) $a[$k] = stripslashes((string)$v);
		}
		#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:307: characters 3-44
		$post = Lib::hashOfAssociativeArray($a);
		#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:315: characters 15-26
		$key = new NativeArrayIterator(array_map("strval", array_keys($post->data)));
		#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:315: characters 15-26
		while ($key->hasNext()) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:315: lines 315-348
			$key1 = $key->next();
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:317: characters 4-19
			$onPart($key1, "");
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:318: characters 4-34
			$v = ($post->data[$key1] ?? null);
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:322: lines 322-332
			if (is_array($v)) {
				#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:323: characters 5-45
				$map = Lib::hashOfAssociativeArray($v);
				#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:324: characters 5-22
				$first = true;
				#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:325: characters 17-20
				$val = new NativeArrayIterator($map->data);
				#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:325: characters 17-20
				while ($val->hasNext()) {
					#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:325: lines 325-330
					$val1 = $val->next();
					#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:326: lines 326-327
					if (!$first) {
						#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:327: characters 7-22
						$onPart($key1, "");
					}
					#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:328: characters 13-32
					$val2 = strlen($val1);
					#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:328: characters 6-61
					$onData(new Bytes($val2, new Container($val1)), 0, strlen($val1));
					#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:329: characters 6-19
					$first = false;
				}

			} else {
				#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:332: characters 16-33
				$s = $v;
				#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:332: characters 16-33
				$s1 = strlen($s);
				#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:332: characters 9-60
				$onData(new Bytes($s1, new Container($s)), 0, strlen($v));
			}
		}

		#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:350: characters 1-58
		if (!isset($_FILES)) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:350: characters 52-58
			return;
		}
		#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:353: characters 3-116
		$parts = new _hx_array(array_keys($_FILES));
		#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:354: lines 354-416
		$_g = 0;
		#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:354: lines 354-416
		while ($_g < $parts->length) {
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:354: characters 7-11
			$part = ($parts->arr[$_g] ?? null);
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:354: lines 354-416
			$_g = $_g + 1;
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:355: characters 4-59
			$info = $_FILES[$part];
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:356: characters 4-48
			$tmp = $info["tmp_name"];
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:357: characters 4-45
			$file = $info["name"];
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:358: characters 4-42
			$err = $info["error"];
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:376: lines 376-391
			if ($err > 0) {
				#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:377: lines 377-390
				switch ($err) {
					case 1:
						#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:379: characters 14-19
						throw new HxException("The uploaded file exceeds the max size of " . (ini_get("upload_max_filesize")??'null'));
						break;
					case 2:
						#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:380: characters 14-19
						throw new HxException("The uploaded file exceeds the max file size directive specified in the HTML form (max is" . (ini_get("post_max_size")??'null') . ")");
						break;
					case 3:
						#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:385: characters 14-19
						throw new HxException("The uploaded file was only partially uploaded");
						break;
					case 4:
						#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:386: characters 14-22
						continue 2;
						break;
					case 6:
						#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:387: characters 14-19
						throw new HxException("Missing a temporary folder");
						break;
					case 7:
						#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:388: characters 14-19
						throw new HxException("Failed to write file to disk");
						break;
					case 8:
						#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:389: characters 14-19
						throw new HxException("File upload stopped by extension");
						break;
				}
			}
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:392: characters 4-22
			$onPart($part, $file);
			#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:393: lines 393-415
			if ("" !== $file) {
				#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:397: characters 5-41
				$h = fopen($tmp, "r");
				#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:398: characters 5-22
				$bsize = 8192;
				#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:399: lines 399-403
				while (!feof($h)) {
					#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:400: characters 6-53
					$buf = fread($h, $bsize);
					#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:401: characters 6-47
					$size = strlen($buf);
					#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:402: characters 13-32
					$buf1 = strlen($buf);
					#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:402: characters 6-42
					$onData(new Bytes($buf1, new Container($buf)), 0, $size);
				}
				#/Users/ut/Documents/LAB/ufront-mvc/src/sys/ufront/web/context/HttpRequest.hx:404: characters 13-34
				fclose($h);
			}
		}

	}
}


Boot::registerClass(WebOverride::class, 'sys.ufront.web.context._HttpRequest.WebOverride');
