<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx
 */

namespace tink\core\_Future;

use \tink\core\FutureTrigger;
use \php\Boot;
use \tink\core\_Callback\Callback_Impl_;
use \tink\core\_Callback\LinkObject;

class NestedFuture implements FutureObject {
	/**
	 * @var FutureObject
	 */
	public $outer;


	/**
	 * @param FutureObject $outer
	 * 
	 * @return void
	 */
	public function __construct ($outer) {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:285: characters 5-23
		$this->outer = $outer;
	}


	/**
	 * @return FutureObject
	 */
	public function eager () {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:297: characters 5-24
		$ret = FutureTrigger::gatherFuture($this);
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:298: characters 5-31
		$ret->handle(Callback_Impl_::fromNiladic(function () {
		}));
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:299: characters 5-15
		return $ret;
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return FutureObject
	 */
	public function flatMap ($f) {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:291: characters 12-67
		$ret = $this->outer->flatMap(function ($inner)  use (&$f) {
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:291: characters 50-66
			$ret1 = $inner->flatMap($f);
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:291: characters 50-66
			return $ret1->gather();
		});
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:291: characters 12-67
		return $ret->gather();
	}


	/**
	 * @return FutureObject
	 */
	public function gather () {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:294: characters 5-44
		return FutureTrigger::gatherFuture($this);
	}


	/**
	 * @param \Closure $cb
	 * 
	 * @return LinkObject
	 */
	public function handle ($cb) {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:303: characters 5-20
		$ret = null;
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:304: lines 304-306
		$ret = $this->outer->handle(function ($inner)  use (&$ret, &$cb) {
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:305: characters 7-62
			$ret = $inner->handle(function ($result)  use (&$cb) {
				#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:305: characters 44-61
				Callback_Impl_::invoke($cb, $result);
			});
		});
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:307: characters 5-15
		return $ret;
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return FutureObject
	 */
	public function map ($f) {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:288: characters 12-63
		$ret = $this->outer->flatMap(function ($inner)  use (&$f) {
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:288: characters 50-62
			$ret1 = $inner->map($f);
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:288: characters 50-62
			return $ret1->gather();
		});
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:288: characters 12-63
		return $ret->gather();
	}
}


Boot::registerClass(NestedFuture::class, 'tink.core._Future.NestedFuture');
