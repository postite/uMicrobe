<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Lazy.hx
 */

namespace tink\core\_Lazy;

use \php\Boot;

class LazyConst implements LazyObject {
	/**
	 * @var mixed
	 */
	public $value;


	/**
	 * @param mixed $value
	 * 
	 * @return void
	 */
	public function __construct ($value) {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Lazy.hx:32: characters 5-23
		$this->value = $value;
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return LazyObject
	 */
	public function flatMap ($f) {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Lazy.hx:41: characters 5-20
		return $f($this->value);
	}


	/**
	 * @return mixed
	 */
	public function get () {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Lazy.hx:35: characters 5-17
		return $this->value;
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return LazyObject
	 */
	public function map ($f) {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Lazy.hx:38: characters 5-35
		return new LazyConst($f($this->value));
	}
}


Boot::registerClass(LazyConst::class, 'tink.core._Lazy.LazyConst');
