<?php

// Generated by Haxe 3.4.7
class tink_core__Lazy_Lazy_Impl_ {
	public function __construct(){}
	static function get($this1) {
		$GLOBALS['%s']->push("tink.core._Lazy.Lazy_Impl_::get");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this1->get();
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function ofFunc($f) {
		$GLOBALS['%s']->push("tink.core._Lazy.Lazy_Impl_::ofFunc");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = new tink_core__Lazy_LazyFunc($f);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function map($this1, $f) {
		$GLOBALS['%s']->push("tink.core._Lazy.Lazy_Impl_::map");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this1->map($f);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function flatMap($this1, $f) {
		$GLOBALS['%s']->push("tink.core._Lazy.Lazy_Impl_::flatMap");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this1->flatMap($f);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function ofConst($c) {
		$GLOBALS['%s']->push("tink.core._Lazy.Lazy_Impl_::ofConst");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = new tink_core__Lazy_LazyConst($c);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	function __toString() { return 'tink.core._Lazy.Lazy_Impl_'; }
}
