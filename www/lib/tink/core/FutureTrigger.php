<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx
 */

namespace tink\core;

use \php\_Boot\HxClosure;
use \php\Boot;
use \tink\core\_Future\FutureObject;
use \tink\core\_Future\SyncFuture;
use \tink\core\_Future\SimpleFuture;
use \tink\core\_Callback\Callback_Impl_;
use \tink\core\_Callback\LinkObject;
use \tink\core\_Lazy\LazyConst;
use \tink\core\_Callback\CallbackList_Impl_;

class FutureTrigger implements FutureObject {
	/**
	 * @var \Array_hx
	 */
	public $list;
	/**
	 * @var mixed
	 */
	public $result;


	/**
	 * @param FutureObject $f
	 * 
	 * @return FutureObject
	 */
	static public function gatherFuture ($f) {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:355: characters 5-19
		$op = null;
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:356: lines 356-363
		$this1 = new SimpleFuture(function ($cb)  use (&$op, &$f) {
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:357: lines 357-361
			if ($op === null) {
				#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:358: characters 9-33
				$op = new FutureTrigger();
				#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:359: characters 9-29
				$f->handle(new HxClosure($op, 'trigger'));
				#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:360: characters 9-17
				$f = null;
			}
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:362: characters 7-27
			return $op->handle($cb);
		});
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:356: lines 356-363
		return $this1;
	}


	/**
	 * @return void
	 */
	public function __construct () {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:316: characters 17-35
		$this1 = new \Array_hx();
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:316: characters 5-35
		$this->list = $this1;
	}


	/**
	 * @return FutureObject
	 */
	public function asFuture () {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:352: characters 5-16
		return $this;
	}


	/**
	 * @return FutureTrigger
	 */
	public function eager () {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:349: characters 5-16
		return $this;
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return FutureObject
	 */
	public function flatMap ($f) {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:337: characters 19-23
		$_g = $this->list;
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:338: lines 338-342
		if ($_g === null) {
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:338: characters 18-27
			return $f($this->result);
		} else {
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:339: characters 12-13
			$v = $_g;
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:340: characters 9-39
			$ret = new FutureTrigger();
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:341: characters 9-56
			CallbackList_Impl_::add($this->list, function ($v1)  use (&$f, &$ret) {
				#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:341: characters 31-55
				$f($v1)->handle(new HxClosure($ret, 'trigger'));
			});
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:342: characters 9-12
			return $ret;
		}
	}


	/**
	 * @return FutureTrigger
	 */
	public function gather () {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:346: characters 5-16
		return $this;
	}


	/**
	 * @param \Closure $callback
	 * 
	 * @return LinkObject
	 */
	public function handle ($callback) {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:319: characters 19-23
		$_g = $this->list;
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:320: lines 320-324
		if ($_g === null) {
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:321: characters 9-32
			Callback_Impl_::invoke($callback, $this->result);
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:322: characters 9-13
			return null;
		} else {
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:323: characters 12-13
			$v = $_g;
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:324: characters 9-24
			return CallbackList_Impl_::add($v, $callback);
		}
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return FutureObject
	 */
	public function map ($f) {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:328: characters 19-23
		$_g = $this->list;
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:329: lines 329-333
		if ($_g === null) {
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:329: characters 18-40
			return new SyncFuture(new LazyConst($f($this->result)));
		} else {
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:330: characters 12-13
			$v = $_g;
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:331: characters 9-39
			$ret = new FutureTrigger();
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:332: characters 9-49
			CallbackList_Impl_::add($this->list, function ($v1)  use (&$f, &$ret) {
				#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:332: characters 43-47
				$tmp = $f($v1);
				#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:332: characters 31-48
				$ret->trigger($tmp);
			});
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:333: characters 9-12
			return $ret;
		}
	}


	/**
	 *  Triggers a value for this future
	 * 
	 * @param mixed $result
	 * 
	 * @return bool
	 */
	public function trigger ($result) {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:371: lines 371-379
		if ($this->list === null) {
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:371: characters 25-30
			return false;
		} else {
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:373: characters 9-30
			$list = $this->list;
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:374: characters 9-25
			$this->list = null;
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:375: characters 9-29
			$this->result = $result;
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:376: characters 9-28
			CallbackList_Impl_::invoke($list, $result);
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:377: characters 9-21
			CallbackList_Impl_::clear($list);
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Future.hx:378: characters 9-13
			return true;
		}
	}
}


Boot::registerClass(FutureTrigger::class, 'tink.core.FutureTrigger');
