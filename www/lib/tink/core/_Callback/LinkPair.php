<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Callback.hx
 */

namespace tink\core\_Callback;

use \php\Boot;

class LinkPair implements LinkObject {
	/**
	 * @var LinkObject
	 */
	public $a;
	/**
	 * @var LinkObject
	 */
	public $b;
	/**
	 * @var bool
	 */
	public $dissolved;


	/**
	 * @param LinkObject $a
	 * @param LinkObject $b
	 * 
	 * @return void
	 */
	public function __construct ($a, $b) {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Callback.hx:95: characters 24-29
		$this->dissolved = false;
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Callback.hx:97: characters 5-15
		$this->a = $a;
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Callback.hx:98: characters 5-15
		$this->b = $b;
	}


	/**
	 * @return void
	 */
	public function dissolve () {
		#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Callback.hx:102: lines 102-106
		if (!$this->dissolved) {
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Callback.hx:103: characters 7-23
			$this->dissolved = true;
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Callback.hx:104: characters 7-19
			$this1 = $this->a;
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Callback.hx:104: characters 7-19
			if ($this1 !== null) {
				#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Callback.hx:104: characters 7-19
				$this1->dissolve();
			}

			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Callback.hx:105: characters 7-19
			$this2 = $this->b;
			#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Callback.hx:105: characters 7-19
			if ($this2 !== null) {
				#/usr/local/lib/haxe/lib/tink_core/1,17,0/src/tink/core/Callback.hx:105: characters 7-19
				$this2->dissolve();
			}

		}
	}
}


Boot::registerClass(LinkPair::class, 'tink.core._Callback.LinkPair');
