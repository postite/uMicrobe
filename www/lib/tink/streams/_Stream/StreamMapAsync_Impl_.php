<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx
 */

namespace tink\streams\_Stream;

use \php\_Boot\HxClosure;
use \tink\streams\StreamMapFilterAsync;
use \php\Boot;
use \tink\streams\StreamObject;

final class StreamMapAsync_Impl_ {
	/**
	 * @param StreamObject $data
	 * @param \Closure $map
	 * 
	 * @return StreamMapFilterAsync
	 */
	static public function _new ($data, $map) {
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:471: character 17
		$this1 = new StreamMapFilterAsync($data, StreamMapAsync_Impl_::lift($map));
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:471: character 17
		return $this1;
	}


	/**
	 * @param \Closure $map
	 * 
	 * @return \Closure
	 */
	static public function lift ($map) {
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:475: characters 5-54
		return function ($x)  use (&$map) {
			#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:475: characters 32-54
			$ret = $map($x)->map(new HxClosure(Maybe_Impl_::class, 'Some'));
			#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:475: characters 32-54
			return $ret->gather();
		};
	}
}


Boot::registerClass(StreamMapAsync_Impl_::class, 'tink.streams._Stream.StreamMapAsync_Impl_');
