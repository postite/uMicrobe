<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx
 */

namespace tink\streams;

use \php\Boot;
use \tink\streams\_Stream\StreamFilterAsync_Impl_;
use \tink\core\_Future\FutureObject;
use \tink\core\_Future\SyncFuture;
use \tink\streams\_Stream\StreamMapAsync_Impl_;
use \tink\streams\_Stream\StreamMerge_Impl_;
use \tink\streams\_Stream\StreamFilter_Impl_;
use \tink\streams\_Stream\StreamMergeAsync_Impl_;
use \tink\core\_Lazy\LazyConst;
use \tink\streams\_Stream\StreamMap_Impl_;

class StreamMapFilterAsync extends StreamBase {
	/**
	 * @var StreamObject
	 */
	public $data;
	/**
	 * @var \Closure
	 */
	public $transformer;


	/**
	 * @param StreamObject $data
	 * @param \Closure $transformer
	 * 
	 * @return void
	 */
	public function __construct ($data, $transformer) {
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:502: characters 5-21
		$this->data = $data;
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:503: characters 5-35
		$this->transformer = $transformer;
	}


	/**
	 * @param \Closure $transformer
	 * 
	 * @return StreamObject
	 */
	public function chain ($transformer) {
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:506: lines 506-511
		$_gthis = $this;
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:507: lines 507-511
		return new StreamMapFilterAsync($this->data, function ($i)  use (&$_gthis, &$transformer) {
			#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:510: characters 16-83
			$ret = ($_gthis->transformer)($i)->map(function ($o)  use (&$transformer) {
				#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:510: characters 60-82
				if ($o !== null) {
					#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:510: characters 60-82
					return $transformer($o);
				} else {
					#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:510: characters 60-82
					return null;
				}
			});
			#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:510: characters 16-83
			return $ret->gather();
		});
	}


	/**
	 * @param \Closure $transformer
	 * 
	 * @return StreamObject
	 */
	public function chainAsync ($transformer) {
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:513: lines 513-521
		$_gthis = $this;
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:514: lines 514-521
		return new StreamMapFilterAsync($this->data, function ($i)  use (&$_gthis, &$transformer) {
			#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:517: lines 517-520
			$ret = ($_gthis->transformer)($i)->flatMap(function ($o)  use (&$transformer) {
				#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:518: characters 16-17
				$v = $o;
				#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:518: lines 518-519
				if ($v !== null) {
					#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:518: characters 34-54
					return $transformer($v);
				} else {
					#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:519: characters 20-45
					return new SyncFuture(new LazyConst(null));
				}
			});
			#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:517: lines 517-520
			return $ret->gather();
		});
	}


	/**
	 * @param \Closure $item
	 * 
	 * @return StreamObject
	 */
	public function filter ($item) {
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:542: characters 5-42
		return $this->chain(StreamFilter_Impl_::lift($item));
	}


	/**
	 * @param \Closure $item
	 * 
	 * @return StreamObject
	 */
	public function filterAsync ($item) {
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:533: characters 5-52
		return $this->chainAsync(StreamFilterAsync_Impl_::lift($item));
	}


	/**
	 * @param \Closure $item
	 * 
	 * @return FutureObject
	 */
	public function forEachAsync ($item) {
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:523: lines 523-530
		$_gthis = $this;
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:524: lines 524-529
		return $this->data->forEachAsync(function ($x)  use (&$item, &$_gthis) {
			#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:525: lines 525-528
			$ret = ($_gthis->transformer)($x)->flatMap(function ($x1)  use (&$item) {
				#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:526: characters 14-15
				$v = $x1;
				#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:526: lines 526-527
				if ($v !== null) {
					#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:526: characters 32-45
					return $item($v);
				} else {
					#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:527: characters 18-35
					return new SyncFuture(new LazyConst(true));
				}
			});
			#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:525: lines 525-528
			return $ret;
		});
	}


	/**
	 * @param \Closure $item
	 * 
	 * @return StreamObject
	 */
	public function map ($item) {
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:545: characters 5-39
		return $this->chain(StreamMap_Impl_::lift($item));
	}


	/**
	 * @param \Closure $item
	 * 
	 * @return StreamObject
	 */
	public function mapAsync ($item) {
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:536: characters 5-49
		return $this->chainAsync(StreamMapAsync_Impl_::lift($item));
	}


	/**
	 * @param \Closure $item
	 * 
	 * @return StreamObject
	 */
	public function merge ($item) {
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:548: characters 5-41
		return $this->chain(StreamMerge_Impl_::lift($item));
	}


	/**
	 * @param \Closure $item
	 * 
	 * @return StreamObject
	 */
	public function mergeAsync ($item) {
		#/usr/local/lib/haxe/lib/tink_streams/0,2,1/src/tink/streams/Stream.hx:539: characters 5-51
		return $this->chainAsync(StreamMergeAsync_Impl_::lift($item));
	}
}


Boot::registerClass(StreamMapFilterAsync::class, 'tink.streams.StreamMapFilterAsync');
