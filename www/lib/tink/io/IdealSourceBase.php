<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx
 */

namespace tink\io;

use \tink\io\_IdealSink\IdealSink_Impl_;
use \php\_Boot\HxClosure;
use \tink\core\Outcome;
use \php\Boot;
use \php\_Boot\HxException;
use \tink\core\_Future\FutureObject;
use \tink\core\_Future\Future_Impl_;
use \php\_Boot\HxAnon;

class IdealSourceBase extends SourceBase implements IdealSourceObject {
	/**
	 * @return FutureObject
	 */
	public function all () {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:185: characters 12-36
		$ret = $this->allSafely()->map(new HxClosure(Outcome::class, 'Success'));
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:185: characters 12-36
		return $ret->gather();
	}


	/**
	 * @return FutureObject
	 */
	public function allSafely () {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:176: lines 176-182
		$_gthis = $this;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:177: lines 177-181
		return Future_Impl_::async(function ($cb)  use (&$_gthis) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:178: lines 178-180
			$this1 = IdealSink_Impl_::inMemory(function ($buf)  use (&$cb) {
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:179: characters 12-26
				$s = $buf->getBytes();
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:179: characters 9-27
				$cb($s);
			});
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:178: lines 178-180
			$_gthis->pipeSafelyTo($this1, new HxAnon(["end" => true]));
		});
	}


	/**
	 * @return FutureObject
	 */
	public function close () {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:194: characters 12-38
		$ret = $this->closeSafely()->map(new HxClosure(Outcome::class, 'Success'));
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:194: characters 12-38
		return $ret->gather();
	}


	/**
	 * @return FutureObject
	 */
	public function closeSafely () {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:191: characters 12-17
		throw new HxException("abstract");
	}


	/**
	 * @param \Closure $onError
	 * 
	 * @return IdealSourceObject
	 */
	public function idealize ($onError) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:174: characters 5-16
		return $this;
	}


	/**
	 * @param SinkObject $dest
	 * @param object $options
	 * 
	 * @return FutureObject
	 */
	public function pipeSafelyTo ($dest, $options = null) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:199: lines 199-200
		$_gthis = $this;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:200: characters 5-97
		return Future_Impl_::async(function ($cb)  use (&$dest, &$_gthis, &$options) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:200: characters 49-53
			$this1 = $_gthis;
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:200: characters 39-96
			Pipe::make($this1, $dest, null, $options, function ($_, $res)  use (&$cb) {
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:200: characters 88-95
				$cb($res);
			});
		});
	}


	/**
	 * @param Buffer $into
	 * @param int $max
	 * 
	 * @return FutureObject
	 */
	public function read ($into, $max = 268435456) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:197: characters 5-46
		if ($max === null) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:197: characters 5-46
			$max = 268435456;
		}
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:197: characters 12-46
		$ret = $this->readSafely($into, $max)->map(new HxClosure(Outcome::class, 'Success'));
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:197: characters 12-46
		return $ret->gather();
	}


	/**
	 * @param Buffer $into
	 * @param int $max
	 * 
	 * @return FutureObject
	 */
	public function readSafely ($into, $max = 268435456) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:188: characters 12-17
		if ($max === null) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:188: characters 12-17
			$max = 268435456;
		}
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:188: characters 12-17
		throw new HxException("abstract");
	}
}


Boot::registerClass(IdealSourceBase::class, 'tink.io.IdealSourceBase');
