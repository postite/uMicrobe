<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Sink.hx
 */

namespace tink\io;

use \php\Boot;
use \tink\core\_Future\FutureObject;
use \tink\core\_Future\Future_Impl_;
use \tink\core\_Callback\Callback_Impl_;

class FutureSink extends SinkBase {
	/**
	 * @var FutureObject
	 */
	public $f;


	/**
	 * @param FutureObject $f
	 * 
	 * @return FutureObject
	 */
	static public function cause ($f) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Sink.hx:113: characters 5-31
		$f->handle(Callback_Impl_::fromNiladic(function () {
		}));
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Sink.hx:114: characters 5-13
		return $f;
	}


	/**
	 * @param FutureObject $f
	 * 
	 * @return void
	 */
	public function __construct ($f) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Sink.hx:110: characters 5-15
		$this->f = $f;
	}


	/**
	 * @return FutureObject
	 */
	public function close () {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Sink.hx:121: characters 5-58
		return FutureSink::cause(Future_Impl_::_tryFailingFlatMap($this->f, function ($s) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Sink.hx:121: characters 41-57
			return $s->close();
		}));
	}


	/**
	 * @return string
	 */
	public function toString () {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Sink.hx:124: characters 5-25
		$ret = "PENDING";
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Sink.hx:125: characters 5-47
		$this->f->handle(function ($o)  use (&$ret) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Sink.hx:125: characters 27-46
			$ret = \Std::string($o);
		});
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Sink.hx:126: characters 5-31
		return "[FutureSink " . ($ret??'null') . "]";
	}


	/**
	 * @param Buffer $from
	 * 
	 * @return FutureObject
	 */
	public function write ($from) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Sink.hx:118: characters 5-62
		return FutureSink::cause(Future_Impl_::_tryFailingFlatMap($this->f, function ($s)  use (&$from) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Sink.hx:118: characters 41-61
			return $s->write($from);
		}));
	}


	public function __toString() {
		return $this->toString();
	}
}


Boot::registerClass(FutureSink::class, 'tink.io.FutureSink');
