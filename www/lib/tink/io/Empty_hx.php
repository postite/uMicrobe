<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx
 */

namespace tink\io;

use \php\Boot;
use \tink\core\_Future\FutureObject;
use \tink\core\_Future\SyncFuture;
use \tink\core\Noise;
use \tink\core\_Lazy\LazyConst;

class Empty_hx extends IdealSourceBase {
	/**
	 * @var Empty_hx
	 */
	static public $instance;


	/**
	 * @return void
	 */
	public function __construct () {
	}


	/**
	 * @return FutureObject
	 */
	public function closeSafely () {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:94: characters 5-30
		return new SyncFuture(new LazyConst(Noise::Noise()));
	}


	/**
	 * @param Buffer $into
	 * @param int $max
	 * 
	 * @return FutureObject
	 */
	public function readSafely ($into, $max = 268435456) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:91: characters 5-37
		if ($max === null) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:91: characters 5-37
			$max = 268435456;
		}
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:91: characters 5-37
		return new SyncFuture(new LazyConst(-1));
	}


	/**
	 * @return string
	 */
	public function toString () {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:97: characters 5-28
		return "[Empty source]";
	}


	public function __toString() {
		return $this->toString();
	}


	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


self::$instance = new Empty_hx();
	}
}


Boot::registerClass(Empty_hx::class, 'tink.io.Empty');
Empty_hx::__hx__init();
