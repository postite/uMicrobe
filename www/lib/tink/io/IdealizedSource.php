<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx
 */

namespace tink\io;

use \php\Boot;
use \tink\core\_Future\FutureObject;
use \tink\core\_Callback\Callback_Impl_;
use \tink\core\Noise;

class IdealizedSource extends IdealSourceBase {
	/**
	 * @var \Closure
	 */
	public $onError;
	/**
	 * @var SourceObject
	 */
	public $target;


	/**
	 * @param SourceObject $target
	 * @param \Closure $onError
	 * 
	 * @return void
	 */
	public function __construct ($target, $onError) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:66: characters 5-25
		$this->target = $target;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:67: characters 5-27
		$this->onError = $onError;
	}


	/**
	 * @return FutureObject
	 */
	public function closeSafely () {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:78: lines 78-84
		$_gthis = $this;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:79: lines 79-84
		$ret = $this->target->close()->map(function ($x)  use (&$_gthis) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:79: lines 79-84
			switch ($x->index) {
				case 0:
					#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:83: characters 20-21
					$v = $x->params[0];
					#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:83: characters 24-25
					return $v;
					break;
				case 1:
					#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:80: characters 20-21
					$e = $x->params[0];
					#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:81: characters 9-26
					Callback_Impl_::invoke($_gthis->onError, $e);
					#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:82: characters 9-14
					return Noise::Noise();
					break;
			}
		});
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:79: lines 79-84
		return $ret->gather();
	}


	/**
	 * @param Buffer $into
	 * @param int $max
	 * 
	 * @return FutureObject
	 */
	public function readSafely ($into, $max = 268435456) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:70: lines 70-76
		if ($max === null) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:70: lines 70-76
			$max = 268435456;
		}
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:70: lines 70-76
		$_gthis = $this;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:71: lines 71-76
		$ret = $this->target->read($into, $max)->map(function ($x)  use (&$_gthis) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:71: lines 71-76
			switch ($x->index) {
				case 0:
					#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:72: characters 20-21
					$v = $x->params[0];
					#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:72: characters 24-25
					return $v;
					break;
				case 1:
					#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:73: characters 20-21
					$e = $x->params[0];
					#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:74: characters 9-26
					Callback_Impl_::invoke($_gthis->onError, $e);
					#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:75: characters 9-21
					return -1;
					break;
			}
		});
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:71: lines 71-76
		return $ret->gather();
	}
}


Boot::registerClass(IdealizedSource::class, 'tink.io.IdealizedSource');
