<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSink.hx
 */

namespace tink\io;

use \php\Boot;
use \tink\core\_Future\FutureObject;
use \tink\core\_Future\SyncFuture;
use \haxe\io\Bytes;
use \tink\core\_Lazy\LazyConst;

class BlackHole extends IdealSinkBase {
	/**
	 * @var IdealSinkObject
	 */
	static public $INST;


	/**
	 * @return void
	 */
	public function __construct () {
	}


	/**
	 * @param Bytes $_
	 * @param int $_
	 * @param int $len
	 * 
	 * @return int
	 */
	public function writeBytes ($_, $_1, $len) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSink.hx:30: characters 5-15
		return $len;
	}


	/**
	 * @param Buffer $from
	 * 
	 * @return FutureObject
	 */
	public function writeSafely ($from) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSink.hx:33: characters 12-43
		return new SyncFuture(new LazyConst($from->writeTo($this)));
	}


	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


self::$INST = new BlackHole();
	}
}


Boot::registerClass(BlackHole::class, 'tink.io.BlackHole');
BlackHole::__hx__init();
