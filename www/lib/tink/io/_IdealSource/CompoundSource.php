<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx
 */

namespace tink\io\_IdealSource;

use \php\Boot;
use \tink\io\SinkObject;
use \tink\core\_Future\FutureObject;
use \tink\io\IdealSourceObject;
use \tink\core\_Future\SyncFuture;
use \tink\io\IdealSourceBase;
use \tink\core\_Future\Future_Impl_;
use \tink\io\PipeResult;
use \tink\io\Buffer;
use \tink\core\Noise;
use \tink\core\_Lazy\LazyConst;

class CompoundSource extends IdealSourceBase {
	/**
	 * @var \Array_hx
	 */
	public $parts;


	/**
	 * @param IdealSourceObject $a
	 * @param IdealSourceObject $b
	 * 
	 * @return CompoundSource
	 */
	static public function of ($a, $b) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:356: characters 48-79
		$_g = (($b instanceof CompoundSource) ? $b : null);
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:356: characters 15-46
		$_g1 = (($a instanceof CompoundSource) ? $a : null);
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:356: lines 356-365
		$tmp = null;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:357: lines 357-364
		if ($_g1 === null) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:357: lines 357-360
			if ($_g === null) {
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:356: lines 356-365
				$tmp = \Array_hx::wrap([
					$a,
					$b,
				]);
			} else {
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:359: characters 30-31
				$p = $_g->parts;
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:356: lines 356-365
				$tmp = (\Array_hx::wrap([$a]))->concat($p);
			}
		} else if ($_g === null) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:361: characters 24-25
			$p1 = $_g1->parts;
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:356: lines 356-365
			$tmp = $p1->concat(\Array_hx::wrap([$b]));
		} else {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:363: characters 24-26
			$p11 = $_g1->parts;
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:363: characters 39-41
			$p2 = $_g->parts;
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:356: lines 356-365
			$tmp = $p11->concat($p2);
		}
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:355: lines 355-366
		return new CompoundSource($tmp);
	}


	/**
	 * @param \Array_hx $parts
	 * 
	 * @return void
	 */
	public function __construct ($parts) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:311: characters 5-23
		$this->parts = $parts;
	}


	/**
	 * @return FutureObject
	 */
	public function closeSafely () {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:333: characters 14-19
		$_g = $this->parts;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:333: characters 14-19
		if ($_g->length === 0) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:334: characters 18-36
			return new SyncFuture(new LazyConst(Noise::Noise()));
		} else {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:335: characters 32-60
			$_g1 = new \Array_hx();
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:335: characters 33-59
			$_g11 = 0;
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:335: characters 33-59
			$_g2 = $this->parts;
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:335: characters 33-59
			while ($_g11 < $_g2->length) {
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:335: characters 38-39
				$p = ($_g2->arr[$_g11] ?? null);
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:335: characters 33-59
				$_g11 = $_g11 + 1;
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:335: characters 50-59
				$x = $p->closeSafely();
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:335: characters 50-59
				$_g1->arr[$_g1->length] = $x;
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:335: characters 50-59
				++$_g1->length;

			}

			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:335: characters 18-92
			$ret = Future_Impl_::ofMany($_g1)->map(function ($_) {
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:335: characters 79-91
				return Noise::Noise();
			});
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:335: characters 18-92
			return $ret->gather();
		}
	}


	/**
	 * @param SinkObject $dest
	 * @param object $options
	 * 
	 * @return FutureObject
	 */
	public function pipeSafelyTo ($dest, $options = null) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:313: lines 313-329
		$_gthis = $this;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:314: lines 314-329
		return Future_Impl_::async(function ($cb)  use (&$dest, &$_gthis, &$options) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:315: lines 315-326
			$next = null;
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:315: lines 315-326
			$next = function ()  use (&$next, &$dest, &$_gthis, &$cb, &$options) {
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:316: characters 16-21
				$_g = $_gthis->parts;
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:316: characters 16-21
				if ($_g->length === 0) {
					#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:317: characters 20-34
					$cb(PipeResult::AllWritten());
				} else {
					#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:318: characters 16-17
					$v = $_g;
					#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:319: lines 319-325
					($_gthis->parts->arr[0] ?? null)->pipeSafelyTo($dest, ($_gthis->parts->length === 1 ? $options : null))->handle(function ($x)  use (&$next, &$_gthis, &$cb) {
						#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:319: lines 319-325
						if ($x->index === 0) {
							#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:321: characters 17-30
							$_this = $_gthis->parts;
							#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:321: characters 17-30
							if ($_this->length > 0) {
								#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:321: characters 17-30
								$_this->length--;
							}
							#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:321: characters 17-38
							array_shift($_this->arr)->closeSafely();

							#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:322: characters 17-23
							$next();
						} else {
							#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:324: characters 17-22
							$cb($x);
						}
					});
				}
			};
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:315: lines 315-326
			$next1 = $next;
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:328: characters 7-13
			$next1();
		});
	}


	/**
	 * @param Buffer $into
	 * @param int $max
	 * 
	 * @return FutureObject
	 */
	public function readSafely ($into, $max = 1073741824) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:338: lines 338-352
		if ($max === null) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:338: lines 338-352
			$max = 1073741824;
		}
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:338: lines 338-352
		$_gthis = $this;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:339: characters 19-24
		$_g = $this->parts;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:339: characters 19-24
		if ($_g->length === 0) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:341: characters 9-34
			return new SyncFuture(new LazyConst(-1));
		} else {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:343: lines 343-351
			return Future_Impl_::async(function ($cb)  use (&$_gthis, &$into, &$max) {
				#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:344: lines 344-350
				($_gthis->parts->arr[0] ?? null)->readSafely($into, 1073741824)->handle(function ($p)  use (&$_gthis, &$into, &$max, &$cb) {
					#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:345: lines 345-349
					if ($p < 0) {
						#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:346: characters 15-28
						$_this = $_gthis->parts;
						#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:346: characters 15-28
						if ($_this->length > 0) {
							#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:346: characters 15-28
							$_this->length--;
						}
						#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:346: characters 15-36
						array_shift($_this->arr)->closeSafely();

						#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:347: characters 15-36
						$_gthis->readSafely($into, $max);
					} else {
						#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/IdealSource.hx:349: characters 18-23
						$cb($p);
					}
				});
			});
		}
	}
}


Boot::registerClass(CompoundSource::class, 'tink.io._IdealSource.CompoundSource');
