<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Pipe.hx
 */

namespace tink\io\_Pipe;

use \tink\io\IdealSinkObject;
use \php\Boot;
use \tink\io\SinkObject;
use \tink\io\IdealSourceObject;
use \tink\io\SourceObject;

final class PipePart_Impl_ {
	/**
	 * @param mixed $x
	 * 
	 * @return mixed
	 */
	static public function _new ($x) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Pipe.hx:122: character 10
		$this1 = $x;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Pipe.hx:122: character 10
		return $this1;
	}


	/**
	 * @param IdealSinkObject $s
	 * 
	 * @return IdealSinkObject
	 */
	static public function ofIdealSink ($s) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Pipe.hx:131: characters 12-45
		$this1 = $s;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Pipe.hx:131: characters 12-45
		return $this1;
	}


	/**
	 * @param IdealSourceObject $s
	 * 
	 * @return SourceObject
	 */
	static public function ofIdealSource ($s) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Pipe.hx:125: characters 12-42
		$this1 = $s;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Pipe.hx:125: characters 12-42
		return $this1;
	}


	/**
	 * @param SinkObject $s
	 * 
	 * @return SinkObject
	 */
	static public function ofSink ($s) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Pipe.hx:134: characters 12-40
		$this1 = $s;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Pipe.hx:134: characters 12-40
		return $this1;
	}


	/**
	 * @param SourceObject $s
	 * 
	 * @return SourceObject
	 */
	static public function ofSource ($s) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Pipe.hx:128: characters 12-42
		$this1 = $s;
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Pipe.hx:128: characters 12-42
		return $this1;
	}
}


Boot::registerClass(PipePart_Impl_::class, 'tink.io._Pipe.PipePart_Impl_');
