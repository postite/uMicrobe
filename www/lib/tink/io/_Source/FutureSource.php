<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ da28365)
 * Haxe source file: /usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Source.hx
 */

namespace tink\io\_Source;

use \php\Boot;
use \tink\core\_Future\FutureObject;
use \tink\io\SourceBase;
use \tink\core\_Future\Future_Impl_;
use \tink\io\Buffer;

class FutureSource extends SourceBase {
	/**
	 * @var FutureObject
	 */
	public $s;


	/**
	 * @param FutureObject $s
	 * 
	 * @return void
	 */
	public function __construct ($s) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Source.hx:294: characters 5-15
		$this->s = $s;
	}


	/**
	 * @return FutureObject
	 */
	public function close () {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Source.hx:300: characters 5-53
		return Future_Impl_::_tryFailingFlatMap($this->s, function ($s) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Source.hx:300: characters 37-53
			return $s->close();
		});
	}


	/**
	 * @param Buffer $into
	 * @param int $max
	 * 
	 * @return FutureObject
	 */
	public function read ($into, $max = 1073741824) {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Source.hx:297: characters 5-61
		if ($max === null) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Source.hx:297: characters 5-61
			$max = 1073741824;
		}
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Source.hx:297: characters 5-61
		return Future_Impl_::_tryFailingFlatMap($this->s, function ($s)  use (&$into, &$max) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Source.hx:297: characters 37-61
			return $s->read($into, $max);
		});
	}


	/**
	 * @return string
	 */
	public function toString () {
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Source.hx:303: characters 5-25
		$ret = "PENDING";
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Source.hx:304: characters 5-47
		$this->s->handle(function ($o)  use (&$ret) {
			#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Source.hx:304: characters 27-46
			$ret = \Std::string($o);
		});
		#/usr/local/lib/haxe/lib/tink_io/0,5,0/src/tink/io/Source.hx:305: characters 5-33
		return "[FutureSource " . ($ret??'null') . "]";
	}


	public function __toString() {
		return $this->toString();
	}
}


Boot::registerClass(FutureSource::class, 'tink.io._Source.FutureSource');
